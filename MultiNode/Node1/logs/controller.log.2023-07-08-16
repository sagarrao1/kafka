[2023-07-08 16:28:39,828] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@1a3869f4, name=log4j:logger=kafka.controller (kafka.controller)
[2023-07-08 16:29:15,215] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-08 16:29:15,280] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2023-07-08 16:29:15,282] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2023-07-08 16:29:15,294] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-07-08 16:29:15,306] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-07-08 16:29:15,313] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2023-07-08 16:29:15,329] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 385) (kafka.controller.KafkaController)
[2023-07-08 16:29:15,357] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-07-08 16:29:15,478] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-07-08 16:29:15,503] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2023-07-08 16:29:15,504] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-07-08 16:29:15,504] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-08 16:29:15,506] INFO [Controller id=1] Current list of topics in the cluster: Set(first_topic, __consumer_offsets) (kafka.controller.KafkaController)
[2023-07-08 16:29:15,507] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-07-08 16:29:15,521] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-07-08 16:29:15,522] INFO [Controller id=1] List of topics ineligible for deletion: first_topic,__consumer_offsets (kafka.controller.KafkaController)
[2023-07-08 16:29:15,526] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-07-08 16:29:15,529] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(first_topic, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2023-07-08 16:29:15,531] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2023-07-08 16:29:15,552] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-07-08 16:29:15,578] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-08 16:29:15,580] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-08 16:29:15,647] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-08 16:29:15,821] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=3] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-07-08 16:29:15,822] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-07-08 16:29:15,831] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-07-08 16:29:15,935] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, first_topic-0 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-07-08 16:29:15,937] INFO [Controller id=1] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2023-07-08 16:29:15,947] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-07-08 16:29:15,948] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-07-08 16:29:15,948] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-07-08 16:29:15,949] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-07-08 16:29:15,957] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-07-08 16:29:15,990] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-07-08 16:29:21,000] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-08 16:29:21,002] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-08 16:29:21,011] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-08 16:29:21,014] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-08 16:29:21,015] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-30 -> List(2), __consumer_offsets-21 -> List(2), __consumer_offsets-33 -> List(2), __consumer_offsets-36 -> List(2), __consumer_offsets-48 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-45 -> List(2), __consumer_offsets-27 -> List(2), __consumer_offsets-9 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-3 -> List(2), __consumer_offsets-18 -> List(2), __consumer_offsets-15 -> List(2), __consumer_offsets-24 -> List(2), __consumer_offsets-39 -> List(2), __consumer_offsets-12 -> List(2)) (kafka.controller.KafkaController)
[2023-07-08 16:29:21,015] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-07-08 16:29:21,017] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-08 16:29:21,018] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-08 16:29:21,018] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-08 16:29:21,019] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-08 16:30:00,217] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2023-07-08 16:30:00,217] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-07-08 16:30:00,232] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-07-08 16:30:00,232] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2023-07-08 16:30:00,248] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-08 16:30:00,347] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2023-07-08 16:30:00,347] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 385, 2 -> 437) (kafka.controller.KafkaController)
[2023-07-08 16:30:00,374] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-08 16:30:00,405] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-07-08 16:30:07,418] DEBUG [Controller id=1] Sending MetadataRequest to Brokers: List(1, 2) for TopicPartitions: ArrayBuffer(first_topic-0) (kafka.controller.KafkaController)
[2023-07-08 16:34:21,033] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-08 16:34:21,033] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-08 16:34:21,035] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-08 16:34:21,035] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-08 16:34:21,036] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-08 16:34:21,036] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-08 16:34:21,036] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-08 16:34:21,036] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-08 16:34:21,037] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-08 16:37:55,295] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2023-07-08 16:37:55,295] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2023-07-08 16:37:55,295] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2023-07-08 16:37:55,295] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-07-08 16:37:55,311] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9094 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-08 16:37:55,357] DEBUG [Controller id=1] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2023-07-08 16:37:55,357] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 385, 2 -> 437, 3 -> 473) (kafka.controller.KafkaController)
[2023-07-08 16:37:55,420] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-08 16:37:55,467] DEBUG [Controller id=3] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-07-08 16:37:57,414] DEBUG [Controller id=1] Sending MetadataRequest to Brokers: List(1, 2, 3) for TopicPartitions: ArrayBuffer(first_topic-0) (kafka.controller.KafkaController)
[2023-07-08 16:39:21,045] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-08 16:39:21,045] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-08 16:39:21,045] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-08 16:39:21,045] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-08 16:39:21,045] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-08 16:39:21,045] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-08 16:39:21,045] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(first_topic-0 -> List(3, 2, 1)) (kafka.controller.KafkaController)
[2023-07-08 16:39:21,045] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-07-08 16:44:21,057] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-08 16:44:21,057] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-08 16:44:21,060] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-08 16:44:21,060] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-08 16:44:21,060] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-08 16:44:21,060] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-08 16:44:21,060] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(first_topic-0 -> List(3, 2, 1)) (kafka.controller.KafkaController)
[2023-07-08 16:44:21,060] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-07-08 16:49:21,061] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-08 16:49:21,061] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-08 16:49:21,061] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-08 16:49:21,061] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-08 16:49:21,061] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-08 16:49:21,061] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-08 16:49:21,061] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(first_topic-0 -> List(3, 2, 1)) (kafka.controller.KafkaController)
[2023-07-08 16:49:21,061] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-07-08 16:54:21,074] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-08 16:54:21,074] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-08 16:54:21,077] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-08 16:54:21,077] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-08 16:54:21,077] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-08 16:54:21,077] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-08 16:54:21,077] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(first_topic-0 -> List(3, 2, 1)) (kafka.controller.KafkaController)
[2023-07-08 16:54:21,077] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-07-08 16:55:48,543] INFO [Controller id=1] Shutting down broker 3 (kafka.controller.KafkaController)
[2023-07-08 16:55:48,543] DEBUG [Controller id=1] All shutting down brokers: 3 (kafka.controller.KafkaController)
[2023-07-08 16:55:48,543] DEBUG [Controller id=1] Live brokers: 1,2 (kafka.controller.KafkaController)
[2023-07-08 16:55:48,543] DEBUG The stop replica request (delete = false) sent to broker 3 is StopReplicaRequestInfo([Topic=first_topic,Partition=0,Replica=3],false) (kafka.controller.ControllerBrokerRequestBatch)
[2023-07-08 16:55:48,559] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9094 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-08 16:55:48,559] DEBUG The stop replica request (delete = false) sent to broker 3 is StopReplicaRequestInfo([Topic=first_topic,Partition=0,Replica=3],false) (kafka.controller.ControllerBrokerRequestBatch)
[2023-07-08 16:55:48,559] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-08 16:55:48,559] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:3,ISR:3,LeaderEpoch:7,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:3,ISR:3,LeaderEpoch:7,ControllerEpoch:4),__consumer_offsets-9 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-21 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:3,ISR:3,LeaderEpoch:7,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:3,ISR:3,LeaderEpoch:7,ControllerEpoch:4),__consumer_offsets-16 -> (Leader:3,ISR:3,LeaderEpoch:7,ControllerEpoch:4),__consumer_offsets-45 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:3,ISR:3,LeaderEpoch:7,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:3,ISR:3,LeaderEpoch:7,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:3,ISR:3,LeaderEpoch:7,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:3,ISR:3,LeaderEpoch:7,ControllerEpoch:4),__consumer_offsets-33 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),first_topic-0 -> (Leader:1,ISR:1,2,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:3,ISR:3,LeaderEpoch:7,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:3,ISR:3,LeaderEpoch:7,ControllerEpoch:4),__consumer_offsets-7 -> (Leader:3,ISR:3,LeaderEpoch:7,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:3,ISR:3,LeaderEpoch:7,ControllerEpoch:4),__consumer_offsets-3 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:3,ISR:3,LeaderEpoch:7,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:3,ISR:3,LeaderEpoch:7,ControllerEpoch:4),__consumer_offsets-22 -> (Leader:3,ISR:3,LeaderEpoch:7,ControllerEpoch:4),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-31 -> (Leader:3,ISR:3,LeaderEpoch:7,ControllerEpoch:4),__consumer_offsets-27 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-07-08 16:55:48,559] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-08 16:55:48,622] WARN [RequestSendThread controllerId=1] Controller 1 epoch 4 fails to send request (type=StopReplicaRequest, controllerId=1, controllerEpoch=4, deletePartitions=false, brokerEpoch=473, partitions=first_topic-0) to broker localhost:9094 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:249)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:48,732] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9094 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:288)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:242)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:48,841] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9094 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:288)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:242)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:48,951] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9094 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:288)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:242)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,061] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9094 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:288)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:242)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,174] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9094 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:288)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:242)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,282] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9094 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:288)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:242)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,392] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9094 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:288)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:242)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,502] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9094 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:288)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:242)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,612] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9094 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:288)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:242)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,674] INFO [ControllerEventThread controllerId=3] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-08 16:55:49,674] INFO [ControllerEventThread controllerId=3] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-08 16:55:49,674] INFO [ControllerEventThread controllerId=3] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-08 16:55:49,674] DEBUG [Controller id=3] Resigning (kafka.controller.KafkaController)
[2023-07-08 16:55:49,674] DEBUG [Controller id=3] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2023-07-08 16:55:49,690] INFO [PartitionStateMachine controllerId=3] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-07-08 16:55:49,690] INFO [ReplicaStateMachine controllerId=3] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-07-08 16:55:49,690] INFO [Controller id=3] Resigned (kafka.controller.KafkaController)
[2023-07-08 16:55:49,706] INFO [Controller id=1] Newly added brokers: , deleted brokers: 3, bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2023-07-08 16:55:49,706] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2023-07-08 16:55:49,706] TRACE [RequestSendThread controllerId=1] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2023-07-08 16:55:49,706] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2023-07-08 16:55:49,706] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2023-07-08 16:55:49,721] INFO [Controller id=1] Broker failure callback for 3 (kafka.controller.KafkaController)
[2023-07-08 16:55:49,721] INFO [Controller id=1] Removed 3 from list of shutting down brokers. (kafka.controller.KafkaController)
[2023-07-08 16:55:49,775] DEBUG [Controller id=1] Unregister BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2023-07-08 16:55:49,775] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 385, 2 -> 437) (kafka.controller.KafkaController)
[2023-07-08 16:55:59,263] INFO [Controller id=1] Shutting down broker 2 (kafka.controller.KafkaController)
[2023-07-08 16:55:59,263] DEBUG [Controller id=1] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2023-07-08 16:55:59,263] DEBUG [Controller id=1] Live brokers: 1 (kafka.controller.KafkaController)
[2023-07-08 16:55:59,263] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=first_topic,Partition=0,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2023-07-08 16:55:59,279] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=first_topic,Partition=0,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2023-07-08 16:55:59,279] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-9 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-21 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-16 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-45 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-33 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),first_topic-0 -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-7 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-3 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-22 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-31 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-27 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-07-08 16:56:00,221] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-08 16:56:00,221] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-08 16:56:00,221] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-08 16:56:00,221] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2023-07-08 16:56:00,221] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2023-07-08 16:56:00,221] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-07-08 16:56:00,221] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-07-08 16:56:00,221] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2023-07-08 16:56:00,237] INFO [Controller id=1] Newly added brokers: , deleted brokers: 2, bounced brokers: , all live brokers: 1 (kafka.controller.KafkaController)
[2023-07-08 16:56:00,237] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2023-07-08 16:56:00,237] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2023-07-08 16:56:00,237] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2023-07-08 16:56:00,252] INFO [Controller id=1] Broker failure callback for 2 (kafka.controller.KafkaController)
[2023-07-08 16:56:00,252] INFO [Controller id=1] Removed 2 from list of shutting down brokers. (kafka.controller.KafkaController)
[2023-07-08 16:56:00,299] DEBUG [Controller id=1] Unregister BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2023-07-08 16:56:00,299] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 385) (kafka.controller.KafkaController)
[2023-07-08 16:56:11,335] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2023-07-08 16:56:11,335] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2023-07-08 16:56:11,335] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2023-07-08 16:56:11,335] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-9 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-21 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-16 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-45 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-33 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),first_topic-0 -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-7 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-3 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-22 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-18 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-31 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-27 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-07-08 16:56:16,360] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2023-07-08 16:56:16,360] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2023-07-08 16:56:16,360] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2023-07-08 16:56:16,360] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-9 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-21 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-16 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-45 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-33 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),first_topic-0 -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-7 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-3 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-22 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-18 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-31 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-27 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-07-08 16:56:21,367] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2023-07-08 16:56:21,367] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2023-07-08 16:56:21,367] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2023-07-08 16:56:21,367] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-9 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-21 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-16 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-45 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-33 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),first_topic-0 -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-7 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-3 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-22 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-18 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-31 -> (Leader:-1,ISR:3,LeaderEpoch:8,ControllerEpoch:4),__consumer_offsets-27 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:-1,ISR:2,LeaderEpoch:6,ControllerEpoch:4),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-07-08 16:56:27,616] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-08 16:56:27,616] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-08 16:56:27,616] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-08 16:56:27,616] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2023-07-08 16:56:27,616] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-07-08 16:56:27,631] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-07-08 16:56:27,631] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-07-08 16:56:27,631] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2023-07-08 16:56:27,631] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2023-07-08 16:56:27,631] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2023-07-08 16:56:27,631] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
