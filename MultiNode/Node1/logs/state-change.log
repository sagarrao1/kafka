[2023-07-10 06:26:55,258] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@1a3869f4, name=log4j:logger=state.change.logger (state.change.logger)
[2023-07-10 06:28:34,816] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition my_topic-1 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,818] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition my_other_topic-1 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,819] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-37 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,819] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-41 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,821] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-49 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,821] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-5 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,822] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-21 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,823] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-15 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,824] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-1 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,825] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-9 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,825] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-45 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,826] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-17 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,826] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-19 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,827] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-3 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,827] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-7 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,828] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-43 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,828] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-11 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,833] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-35 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,834] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-27 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,835] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-25 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,836] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-29 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,836] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition my_topic-3 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,837] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-47 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,837] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-31 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,838] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-23 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,838] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-33 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,839] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-39 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,839] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition __consumer_offsets-13 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:28:34,845] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-15 (state.change.logger)
[2023-07-10 06:28:34,845] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-13 (state.change.logger)
[2023-07-10 06:28:34,845] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-11 (state.change.logger)
[2023-07-10 06:28:34,846] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-9 (state.change.logger)
[2023-07-10 06:28:34,846] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-23 (state.change.logger)
[2023-07-10 06:28:34,846] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-21 (state.change.logger)
[2023-07-10 06:28:34,846] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-19 (state.change.logger)
[2023-07-10 06:28:34,846] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-17 (state.change.logger)
[2023-07-10 06:28:34,846] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-7 (state.change.logger)
[2023-07-10 06:28:34,846] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_topic-1 (state.change.logger)
[2023-07-10 06:28:34,847] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-5 (state.change.logger)
[2023-07-10 06:28:34,847] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_other_topic-1 (state.change.logger)
[2023-07-10 06:28:34,847] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-3 (state.change.logger)
[2023-07-10 06:28:34,847] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-1 (state.change.logger)
[2023-07-10 06:28:34,847] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_topic-3 (state.change.logger)
[2023-07-10 06:28:34,847] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-47 (state.change.logger)
[2023-07-10 06:28:34,847] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-45 (state.change.logger)
[2023-07-10 06:28:34,847] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-43 (state.change.logger)
[2023-07-10 06:28:34,847] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-41 (state.change.logger)
[2023-07-10 06:28:34,847] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-49 (state.change.logger)
[2023-07-10 06:28:34,847] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-31 (state.change.logger)
[2023-07-10 06:28:34,847] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-29 (state.change.logger)
[2023-07-10 06:28:34,848] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-27 (state.change.logger)
[2023-07-10 06:28:34,848] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-25 (state.change.logger)
[2023-07-10 06:28:34,848] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-39 (state.change.logger)
[2023-07-10 06:28:34,848] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-37 (state.change.logger)
[2023-07-10 06:28:34,848] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-35 (state.change.logger)
[2023-07-10 06:28:34,848] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-33 (state.change.logger)
[2023-07-10 06:28:34,855] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-15 (state.change.logger)
[2023-07-10 06:28:34,855] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-13 (state.change.logger)
[2023-07-10 06:28:34,855] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-11 (state.change.logger)
[2023-07-10 06:28:34,855] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-9 (state.change.logger)
[2023-07-10 06:28:34,856] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-23 (state.change.logger)
[2023-07-10 06:28:34,856] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-21 (state.change.logger)
[2023-07-10 06:28:34,856] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-19 (state.change.logger)
[2023-07-10 06:28:34,857] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-17 (state.change.logger)
[2023-07-10 06:28:34,857] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-7 (state.change.logger)
[2023-07-10 06:28:34,857] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-1 (state.change.logger)
[2023-07-10 06:28:34,857] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-5 (state.change.logger)
[2023-07-10 06:28:34,857] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_other_topic-1 (state.change.logger)
[2023-07-10 06:28:34,857] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-3 (state.change.logger)
[2023-07-10 06:28:34,857] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-1 (state.change.logger)
[2023-07-10 06:28:34,858] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-3 (state.change.logger)
[2023-07-10 06:28:34,858] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-47 (state.change.logger)
[2023-07-10 06:28:34,858] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-45 (state.change.logger)
[2023-07-10 06:28:34,859] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-43 (state.change.logger)
[2023-07-10 06:28:34,859] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-41 (state.change.logger)
[2023-07-10 06:28:34,859] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-49 (state.change.logger)
[2023-07-10 06:28:34,859] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-31 (state.change.logger)
[2023-07-10 06:28:34,860] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-29 (state.change.logger)
[2023-07-10 06:28:34,860] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-27 (state.change.logger)
[2023-07-10 06:28:34,860] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-25 (state.change.logger)
[2023-07-10 06:28:34,860] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-39 (state.change.logger)
[2023-07-10 06:28:34,860] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-37 (state.change.logger)
[2023-07-10 06:28:34,861] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-35 (state.change.logger)
[2023-07-10 06:28:34,861] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-33 (state.change.logger)
[2023-07-10 06:28:35,061] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-22 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,061] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-30 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,061] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-46 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,062] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-38 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,063] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-48 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,063] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-26 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,063] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-34 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,064] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-8 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,064] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-4 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,064] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition my_topic-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,065] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-16 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,065] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-28 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,065] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-36 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,066] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition my_other_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,068] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-42 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,068] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-18 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,068] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition my_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,069] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-24 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,069] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,070] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-6 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,070] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-14 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,070] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-20 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,071] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,071] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-44 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,071] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition my_other_topic-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,071] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-12 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,071] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-10 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,072] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-32 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,072] TRACE [Controller id=1 epoch=3] Changed state of replica 2 for partition __consumer_offsets-40 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-10 06:28:35,073] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-48 (state.change.logger)
[2023-07-10 06:28:35,073] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-46 (state.change.logger)
[2023-07-10 06:28:35,073] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-44 (state.change.logger)
[2023-07-10 06:28:35,074] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-42 (state.change.logger)
[2023-07-10 06:28:35,074] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-32 (state.change.logger)
[2023-07-10 06:28:35,074] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-30 (state.change.logger)
[2023-07-10 06:28:35,074] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-28 (state.change.logger)
[2023-07-10 06:28:35,074] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-26 (state.change.logger)
[2023-07-10 06:28:35,074] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-40 (state.change.logger)
[2023-07-10 06:28:35,074] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-38 (state.change.logger)
[2023-07-10 06:28:35,074] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-36 (state.change.logger)
[2023-07-10 06:28:35,074] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-34 (state.change.logger)
[2023-07-10 06:28:35,075] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-16 (state.change.logger)
[2023-07-10 06:28:35,075] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-14 (state.change.logger)
[2023-07-10 06:28:35,075] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-12 (state.change.logger)
[2023-07-10 06:28:35,075] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-10 (state.change.logger)
[2023-07-10 06:28:35,075] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-24 (state.change.logger)
[2023-07-10 06:28:35,075] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-22 (state.change.logger)
[2023-07-10 06:28:35,075] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-20 (state.change.logger)
[2023-07-10 06:28:35,075] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-18 (state.change.logger)
[2023-07-10 06:28:35,075] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-0 (state.change.logger)
[2023-07-10 06:28:35,076] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition my_topic-0 (state.change.logger)
[2023-07-10 06:28:35,076] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-8 (state.change.logger)
[2023-07-10 06:28:35,076] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition my_other_topic-0 (state.change.logger)
[2023-07-10 06:28:35,076] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-6 (state.change.logger)
[2023-07-10 06:28:35,076] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition my_other_topic-2 (state.change.logger)
[2023-07-10 06:28:35,076] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-4 (state.change.logger)
[2023-07-10 06:28:35,076] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition my_topic-2 (state.change.logger)
[2023-07-10 06:28:35,076] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-2 (state.change.logger)
[2023-07-10 06:28:35,095] TRACE [Controller id=1 epoch=3] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-10 06:28:35,114] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,114] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,114] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,114] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,114] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,115] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,115] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,115] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,115] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,115] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,115] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,115] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,115] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,115] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,115] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,116] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,116] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,116] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,116] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,116] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,116] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,116] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,116] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,117] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,117] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,117] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,117] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,117] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:28:35,180] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,186] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,186] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,187] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,187] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,188] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,188] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,189] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,189] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,190] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition my_topic-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my_topic-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,190] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,191] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,191] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,192] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition my_other_topic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my_other_topic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,192] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,192] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,193] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition my_topic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my_topic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,193] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,194] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,195] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,197] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,197] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,199] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,200] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,201] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition my_other_topic-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my_other_topic-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,202] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,202] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,203] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,203] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-10 06:28:35,248] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-3 (state.change.logger)
[2023-07-10 06:28:35,248] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-37 (state.change.logger)
[2023-07-10 06:28:35,248] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-7 (state.change.logger)
[2023-07-10 06:28:35,248] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2023-07-10 06:28:35,248] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2023-07-10 06:28:35,248] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition my_other_topic-1 (state.change.logger)
[2023-07-10 06:28:35,248] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition my_topic-3 (state.change.logger)
[2023-07-10 06:28:35,248] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-33 (state.change.logger)
[2023-07-10 06:28:35,248] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-19 (state.change.logger)
[2023-07-10 06:28:35,248] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2023-07-10 06:28:35,248] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2023-07-10 06:28:35,248] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-45 (state.change.logger)
[2023-07-10 06:28:35,248] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-15 (state.change.logger)
[2023-07-10 06:28:35,248] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-49 (state.change.logger)
[2023-07-10 06:28:35,248] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2023-07-10 06:28:35,248] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2023-07-10 06:28:35,249] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-39 (state.change.logger)
[2023-07-10 06:28:35,249] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-9 (state.change.logger)
[2023-07-10 06:28:35,249] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-27 (state.change.logger)
[2023-07-10 06:28:35,249] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition my_topic-1 (state.change.logger)
[2023-07-10 06:28:35,249] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-31 (state.change.logger)
[2023-07-10 06:28:35,249] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-1 (state.change.logger)
[2023-07-10 06:28:35,249] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-21 (state.change.logger)
[2023-07-10 06:28:35,249] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-25 (state.change.logger)
[2023-07-10 06:28:35,249] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-43 (state.change.logger)
[2023-07-10 06:28:35,249] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-13 (state.change.logger)
[2023-07-10 06:28:35,249] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2023-07-10 06:28:35,249] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 3 starting the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2023-07-10 06:28:35,313] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-3 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,324] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-37 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,334] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-7 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,344] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-41 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,356] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-29 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,362] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition my_other_topic-1 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,366] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition my_topic-3 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,389] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-33 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,399] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-19 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,410] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-23 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,422] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-11 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,433] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-45 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,445] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-15 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,459] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-49 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,472] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-35 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,483] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-5 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,495] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-39 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,505] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-9 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,516] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-27 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,521] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition my_topic-1 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,531] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-31 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,544] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-1 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,555] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-21 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,568] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-25 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,574] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-43 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,589] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-13 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,601] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-47 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,610] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 1 for partition __consumer_offsets-17 (last update controller epoch 1) (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-3 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-37 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-7 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition my_other_topic-1 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition my_topic-3 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-33 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-19 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-45 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-15 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-49 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-39 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-9 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-27 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition my_topic-1 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-31 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-1 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-21 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-25 (state.change.logger)
[2023-07-10 06:28:35,612] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-43 (state.change.logger)
[2023-07-10 06:28:35,613] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-13 (state.change.logger)
[2023-07-10 06:28:35,613] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2023-07-10 06:28:35,613] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 3 for the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2023-07-10 06:28:35,670] TRACE [Controller id=1 epoch=3] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=15,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=13,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=19,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=7,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=3,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=43,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=49,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=31,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=25,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=37,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 1 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-10 06:28:35,691] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,691] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_topic-3 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,692] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_other_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,692] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,692] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,692] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,692] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,692] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,692] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,693] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,693] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,693] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,693] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,693] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,693] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,693] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,693] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,693] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,695] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,695] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,695] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,695] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,695] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,695] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,695] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,695] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,695] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,696] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-07-10 06:28:35,696] TRACE [Controller id=1 epoch=3] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 2 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-10 06:28:35,701] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition my_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,703] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition my_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,703] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition my_other_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,703] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition my_other_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,703] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,703] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,703] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,703] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,703] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,703] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,703] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,703] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,703] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,703] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,703] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,703] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,703] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,703] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,703] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,703] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,704] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,704] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,704] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,704] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,704] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,704] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,704] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,704] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,704] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=3, leader=-1, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 3 (state.change.logger)
[2023-07-10 06:28:35,706] TRACE [Controller id=1 epoch=3] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 3 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-10 06:29:10,783] TRACE [Controller id=1 epoch=3] Changed partition first_topic-0 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-10 06:29:10,786] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition first_topic-0 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-10 06:29:10,822] TRACE [Controller id=1 epoch=3] Changed partition first_topic-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-10 06:29:10,823] TRACE [Controller id=1 epoch=3] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition first_topic-0 (state.change.logger)
[2023-07-10 06:29:10,823] TRACE [Controller id=1 epoch=3] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition first_topic-0 (state.change.logger)
[2023-07-10 06:29:10,824] TRACE [Controller id=1 epoch=3] Changed state of replica 1 for partition first_topic-0 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-10 06:29:10,825] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 3 (state.change.logger)
[2023-07-10 06:29:10,826] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 3 starting the become-leader transition for partition first_topic-0 (state.change.logger)
[2023-07-10 06:29:10,915] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 3 with correlation id 4 for partition first_topic-0 (last update controller epoch 3) (state.change.logger)
[2023-07-10 06:29:10,919] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 3 for the become-leader transition for partition first_topic-0 (state.change.logger)
[2023-07-10 06:29:10,923] TRACE [Controller id=1 epoch=3] Received response {error_code=0,partition_errors=[{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 4 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-10 06:29:10,930] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 5 (state.change.logger)
[2023-07-10 06:29:10,936] TRACE [Controller id=1 epoch=3] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 5 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
