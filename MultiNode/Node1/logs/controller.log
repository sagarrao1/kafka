[2023-07-09 06:12:16,555] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@1a3869f4, name=log4j:logger=kafka.controller (kafka.controller)
[2023-07-09 06:14:09,275] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 06:14:09,325] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 5 and epoch zk version is now 5 (kafka.controller.KafkaController)
[2023-07-09 06:14:09,325] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2023-07-09 06:14:09,325] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-07-09 06:14:09,341] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-07-09 06:14:09,342] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2023-07-09 06:14:09,358] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 548) (kafka.controller.KafkaController)
[2023-07-09 06:14:09,362] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-07-09 06:14:09,425] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-07-09 06:14:09,444] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-07-09 06:14:09,446] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2023-07-09 06:14:09,446] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-09 06:14:09,446] INFO [Controller id=1] Current list of topics in the cluster: Set(first_topic, __consumer_offsets) (kafka.controller.KafkaController)
[2023-07-09 06:14:09,446] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-07-09 06:14:09,455] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-07-09 06:14:09,455] INFO [Controller id=1] List of topics ineligible for deletion: first_topic,__consumer_offsets (kafka.controller.KafkaController)
[2023-07-09 06:14:09,455] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-07-09 06:14:09,459] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(first_topic, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2023-07-09 06:14:09,459] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2023-07-09 06:14:09,473] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 06:14:09,485] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 06:14:09,493] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-09 06:14:09,514] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 06:14:09,641] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=3] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 06:14:09,641] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 06:14:09,657] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 06:14:09,735] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, first_topic-0 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 06:14:09,735] INFO [Controller id=1] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2023-07-09 06:14:09,742] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-07-09 06:14:09,742] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-07-09 06:14:09,742] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-07-09 06:14:09,742] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-07-09 06:14:09,742] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-07-09 06:14:09,751] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-07-09 06:14:14,770] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 06:14:14,770] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 06:14:14,770] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 06:14:14,770] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 06:14:14,770] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-30 -> List(2), __consumer_offsets-21 -> List(2), __consumer_offsets-33 -> List(2), __consumer_offsets-36 -> List(2), __consumer_offsets-48 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-45 -> List(2), __consumer_offsets-27 -> List(2), __consumer_offsets-9 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-3 -> List(2), __consumer_offsets-18 -> List(2), __consumer_offsets-15 -> List(2), __consumer_offsets-24 -> List(2), __consumer_offsets-39 -> List(2), __consumer_offsets-12 -> List(2)) (kafka.controller.KafkaController)
[2023-07-09 06:14:14,770] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 06:14:14,785] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 06:14:14,785] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-09 06:14:14,785] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 06:14:14,785] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 06:15:52,196] INFO [Controller id=1] New topics: [Set(my_other_topic)], deleted topics: [Set()], new partition replica assignment [Map(my_other_topic-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), my_other_topic-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), my_other_topic-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2023-07-09 06:15:52,196] INFO [Controller id=1] New partition creation callback for my_other_topic-0,my_other_topic-1,my_other_topic-2 (kafka.controller.KafkaController)
[2023-07-09 06:18:00,484] INFO [Controller id=1] New topics: [Set(my_topic)], deleted topics: [Set()], new partition replica assignment [Map(my_topic-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), my_topic-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), my_topic-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2023-07-09 06:18:00,484] INFO [Controller id=1] New partition creation callback for my_topic-0,my_topic-1,my_topic-2 (kafka.controller.KafkaController)
[2023-07-09 06:19:14,793] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 06:19:14,793] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 06:19:14,797] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 06:19:14,797] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 06:19:14,798] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-30 -> List(2), __consumer_offsets-21 -> List(2), __consumer_offsets-33 -> List(2), __consumer_offsets-36 -> List(2), __consumer_offsets-48 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-45 -> List(2), __consumer_offsets-27 -> List(2), __consumer_offsets-9 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-3 -> List(2), __consumer_offsets-18 -> List(2), __consumer_offsets-15 -> List(2), __consumer_offsets-24 -> List(2), __consumer_offsets-39 -> List(2), __consumer_offsets-12 -> List(2)) (kafka.controller.KafkaController)
[2023-07-09 06:19:14,798] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 06:19:14,799] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 06:19:14,799] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-09 06:19:14,800] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 06:19:14,800] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 06:24:14,812] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 06:24:14,812] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 06:24:14,812] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 06:24:14,812] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 06:24:14,812] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-30 -> List(2), __consumer_offsets-21 -> List(2), __consumer_offsets-33 -> List(2), __consumer_offsets-36 -> List(2), __consumer_offsets-48 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-45 -> List(2), __consumer_offsets-27 -> List(2), __consumer_offsets-9 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-3 -> List(2), __consumer_offsets-18 -> List(2), __consumer_offsets-15 -> List(2), __consumer_offsets-24 -> List(2), __consumer_offsets-39 -> List(2), __consumer_offsets-12 -> List(2)) (kafka.controller.KafkaController)
[2023-07-09 06:24:14,812] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 06:24:14,812] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 06:24:14,812] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-09 06:24:14,812] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 06:24:14,812] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 06:29:14,832] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 06:29:14,832] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 06:29:14,838] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 06:29:14,838] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 06:29:14,838] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-30 -> List(2), __consumer_offsets-21 -> List(2), __consumer_offsets-33 -> List(2), __consumer_offsets-36 -> List(2), __consumer_offsets-48 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-45 -> List(2), __consumer_offsets-27 -> List(2), __consumer_offsets-9 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-3 -> List(2), __consumer_offsets-18 -> List(2), __consumer_offsets-15 -> List(2), __consumer_offsets-24 -> List(2), __consumer_offsets-39 -> List(2), __consumer_offsets-12 -> List(2)) (kafka.controller.KafkaController)
[2023-07-09 06:29:14,838] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 06:29:14,838] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 06:29:14,841] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-09 06:29:14,841] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 06:29:14,841] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 06:34:14,854] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 06:34:14,854] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 06:34:14,854] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 06:34:14,854] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 06:34:14,854] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-30 -> List(2), __consumer_offsets-21 -> List(2), __consumer_offsets-33 -> List(2), __consumer_offsets-36 -> List(2), __consumer_offsets-48 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-45 -> List(2), __consumer_offsets-27 -> List(2), __consumer_offsets-9 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-3 -> List(2), __consumer_offsets-18 -> List(2), __consumer_offsets-15 -> List(2), __consumer_offsets-24 -> List(2), __consumer_offsets-39 -> List(2), __consumer_offsets-12 -> List(2)) (kafka.controller.KafkaController)
[2023-07-09 06:34:14,854] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 06:34:14,854] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 06:34:14,854] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-09 06:34:14,854] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 06:34:14,854] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 06:39:14,859] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 06:39:14,859] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 06:39:14,859] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 06:39:14,859] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 06:39:14,859] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-30 -> List(2), __consumer_offsets-21 -> List(2), __consumer_offsets-33 -> List(2), __consumer_offsets-36 -> List(2), __consumer_offsets-48 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-45 -> List(2), __consumer_offsets-27 -> List(2), __consumer_offsets-9 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-3 -> List(2), __consumer_offsets-18 -> List(2), __consumer_offsets-15 -> List(2), __consumer_offsets-24 -> List(2), __consumer_offsets-39 -> List(2), __consumer_offsets-12 -> List(2)) (kafka.controller.KafkaController)
[2023-07-09 06:39:14,859] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 06:39:14,859] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 06:39:14,859] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-09 06:39:14,859] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 06:39:14,859] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 06:44:14,875] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 06:44:14,876] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 06:44:14,878] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 06:44:14,878] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 06:44:14,879] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-30 -> List(2), __consumer_offsets-21 -> List(2), __consumer_offsets-33 -> List(2), __consumer_offsets-36 -> List(2), __consumer_offsets-48 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-45 -> List(2), __consumer_offsets-27 -> List(2), __consumer_offsets-9 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-3 -> List(2), __consumer_offsets-18 -> List(2), __consumer_offsets-15 -> List(2), __consumer_offsets-24 -> List(2), __consumer_offsets-39 -> List(2), __consumer_offsets-12 -> List(2)) (kafka.controller.KafkaController)
[2023-07-09 06:44:14,879] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 06:44:14,879] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 06:44:14,879] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-09 06:44:14,879] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 06:44:14,880] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 06:49:14,889] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 06:49:14,889] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 06:49:14,889] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 06:49:14,889] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 06:49:14,889] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-30 -> List(2), __consumer_offsets-21 -> List(2), __consumer_offsets-33 -> List(2), __consumer_offsets-36 -> List(2), __consumer_offsets-48 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-45 -> List(2), __consumer_offsets-27 -> List(2), __consumer_offsets-9 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-3 -> List(2), __consumer_offsets-18 -> List(2), __consumer_offsets-15 -> List(2), __consumer_offsets-24 -> List(2), __consumer_offsets-39 -> List(2), __consumer_offsets-12 -> List(2)) (kafka.controller.KafkaController)
[2023-07-09 06:49:14,889] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 06:49:14,889] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 06:49:14,889] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-09 06:49:14,889] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 06:49:14,889] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 06:53:45,275] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2023-07-09 06:53:45,275] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2023-07-09 06:53:45,291] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2023-07-09 06:53:45,307] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-46 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-9 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-21 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),my_other_topic-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:5),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-34 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-16 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-45 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-12 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-0 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),my_other_topic-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:5),__consumer_offsets-4 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-33 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),my_topic-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),first_topic-0 -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:5),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-7 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-40 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),my_topic-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:5),__consumer_offsets-3 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-36 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-10 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-22 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-18 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-31 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-27 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-39 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),my_topic-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:5),my_other_topic-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:5),__consumer_offsets-6 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-07-09 06:53:50,336] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2023-07-09 06:53:50,336] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2023-07-09 06:53:50,336] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2023-07-09 06:53:50,336] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-46 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-9 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-21 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),my_other_topic-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:5),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-34 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-16 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-45 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-12 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-0 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),my_other_topic-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:5),__consumer_offsets-4 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-33 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),my_topic-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),first_topic-0 -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:5),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-7 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-40 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),my_topic-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:5),__consumer_offsets-3 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-36 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-10 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-22 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-18 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-31 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-27 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-39 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),my_topic-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:5),my_other_topic-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:5),__consumer_offsets-6 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-07-09 06:53:55,364] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2023-07-09 06:53:55,364] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2023-07-09 06:53:55,364] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2023-07-09 06:53:55,380] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-46 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-9 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-21 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),my_other_topic-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:5),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-34 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-16 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-45 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-12 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-0 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),my_other_topic-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:5),__consumer_offsets-4 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-33 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),my_topic-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),first_topic-0 -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:5),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-7 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-40 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),my_topic-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:5),__consumer_offsets-3 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-36 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-10 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-22 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-18 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-31 -> (Leader:-1,ISR:3,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-27 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-39 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),my_topic-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:5),my_other_topic-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:5),__consumer_offsets-6 -> (Leader:-1,ISR:2,LeaderEpoch:7,ControllerEpoch:5),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-07-09 06:54:01,840] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 06:54:01,852] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 06:54:01,852] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 06:54:01,852] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2023-07-09 06:54:01,852] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-07-09 06:54:01,852] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 06:54:01,852] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 06:54:01,852] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2023-07-09 06:54:01,852] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2023-07-09 06:54:01,852] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2023-07-09 06:54:01,871] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2023-07-09 06:54:39,597] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@1a3869f4, name=log4j:logger=kafka.controller (kafka.controller)
[2023-07-09 06:55:07,219] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 06:55:07,283] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 6 and epoch zk version is now 6 (kafka.controller.KafkaController)
[2023-07-09 06:55:07,283] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2023-07-09 06:55:07,299] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-07-09 06:55:07,299] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-07-09 06:55:07,299] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2023-07-09 06:55:07,315] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 621) (kafka.controller.KafkaController)
[2023-07-09 06:55:07,340] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-07-09 06:55:07,401] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-07-09 06:55:07,414] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-07-09 06:55:07,424] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2023-07-09 06:55:07,424] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-09 06:55:07,426] INFO [Controller id=1] Current list of topics in the cluster: Set(my_topic, my_other_topic, first_topic, __consumer_offsets) (kafka.controller.KafkaController)
[2023-07-09 06:55:07,426] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-07-09 06:55:07,432] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-07-09 06:55:07,432] INFO [Controller id=1] List of topics ineligible for deletion: first_topic,__consumer_offsets (kafka.controller.KafkaController)
[2023-07-09 06:55:07,432] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-07-09 06:55:07,432] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(first_topic, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2023-07-09 06:55:07,440] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2023-07-09 06:55:07,450] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 06:55:07,459] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 06:55:07,459] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-09 06:55:07,505] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 06:55:07,664] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=my_other_topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OfflineReplica, [Topic=my_topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OfflineReplica, [Topic=my_topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OfflineReplica, [Topic=my_other_topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=my_topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=3] -> OfflineReplica, [Topic=my_other_topic,Partition=2,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 06:55:07,664] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 06:55:07,664] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 06:55:07,727] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, my_other_topic-1 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, my_other_topic-2 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, my_topic-2 -> OnlinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, first_topic-0 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, my_topic-1 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, my_topic-0 -> OnlinePartition, my_other_topic-0 -> OnlinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 06:55:07,740] INFO [Controller id=1] Ready to serve as the new controller with epoch 6 (kafka.controller.KafkaController)
[2023-07-09 06:55:07,747] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-07-09 06:55:07,747] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-07-09 06:55:07,747] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-07-09 06:55:07,747] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-07-09 06:55:07,747] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-07-09 06:55:07,760] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-07-09 06:55:12,788] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 06:55:12,788] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 06:55:12,804] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 06:55:12,804] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 06:55:12,804] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-30 -> List(2), __consumer_offsets-21 -> List(2), __consumer_offsets-33 -> List(2), __consumer_offsets-36 -> List(2), __consumer_offsets-48 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-45 -> List(2), __consumer_offsets-27 -> List(2), __consumer_offsets-9 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-3 -> List(2), __consumer_offsets-18 -> List(2), __consumer_offsets-15 -> List(2), __consumer_offsets-24 -> List(2), __consumer_offsets-39 -> List(2), __consumer_offsets-12 -> List(2)) (kafka.controller.KafkaController)
[2023-07-09 06:55:12,804] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 06:55:12,804] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 06:55:12,804] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-09 06:55:12,804] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 06:55:12,804] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 06:55:38,876] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2023-07-09 06:55:38,887] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-07-09 06:55:38,897] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-07-09 06:55:38,897] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2023-07-09 06:55:38,908] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-09 06:55:38,985] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2023-07-09 06:55:38,987] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 621, 2 -> 673) (kafka.controller.KafkaController)
[2023-07-09 06:55:38,997] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 06:55:39,017] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-07-09 06:55:47,026] DEBUG [Controller id=1] Sending MetadataRequest to Brokers: List(1, 2) for TopicPartitions: ArrayBuffer(first_topic-0) (kafka.controller.KafkaController)
[2023-07-09 07:00:12,823] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 07:00:12,823] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 07:00:12,823] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 07:00:12,823] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 07:00:12,823] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 07:00:12,823] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 07:00:12,823] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-09 07:00:12,823] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 07:00:12,823] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 07:05:12,844] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 07:05:12,845] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 07:05:12,845] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 07:05:12,845] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 07:05:12,845] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 07:05:12,845] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 07:05:12,845] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-09 07:05:12,845] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 07:05:12,845] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 07:10:12,862] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 07:10:12,862] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 07:10:12,862] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 07:10:12,862] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 07:10:12,862] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 07:10:12,862] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 07:10:12,862] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-09 07:10:12,862] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 07:10:12,862] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 07:15:11,134] INFO [Controller id=1] New topics: [HashSet(topicA)], deleted topics: [Set()], new partition replica assignment [Map(topicA-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2023-07-09 07:15:11,134] INFO [Controller id=1] New partition creation callback for topicA-0 (kafka.controller.KafkaController)
[2023-07-09 07:15:11,173] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-09 07:15:11,173] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-09 07:15:12,872] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 07:15:12,872] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 07:15:12,872] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 07:15:12,872] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 07:15:12,872] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 07:15:12,872] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 07:15:12,872] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-09 07:15:12,872] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 07:15:12,872] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 07:20:12,878] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 07:20:12,878] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 07:20:12,878] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 07:20:12,878] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 07:20:12,878] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 07:20:12,878] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 07:20:12,878] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-09 07:20:12,878] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 07:20:12,878] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 07:25:12,892] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 07:25:12,892] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 07:25:12,892] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 07:25:12,892] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 07:25:12,892] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 07:25:12,892] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 07:25:12,892] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-09 07:25:12,892] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 07:25:12,892] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 07:27:12,982] INFO [Controller id=1] New topics: [HashSet(topic01)], deleted topics: [HashSet()], new partition replica assignment [Map(topic01-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), topic01-1 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), topic01-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2023-07-09 07:27:12,997] INFO [Controller id=1] New partition creation callback for topic01-0,topic01-1,topic01-2 (kafka.controller.KafkaController)
[2023-07-09 07:27:13,031] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-09 07:27:13,031] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-09 07:30:12,903] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 07:30:12,903] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 07:30:12,903] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 07:30:12,903] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 07:30:12,903] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 07:30:12,903] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 07:30:12,903] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-09 07:30:12,903] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 07:30:12,903] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 07:33:39,079] INFO [Controller id=1] New topics: [HashSet(topic02)], deleted topics: [HashSet()], new partition replica assignment [Map(topic02-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), topic02-1 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), topic02-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2023-07-09 07:33:39,079] INFO [Controller id=1] New partition creation callback for topic02-0,topic02-1,topic02-2 (kafka.controller.KafkaController)
[2023-07-09 07:35:12,910] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 07:35:12,910] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 07:35:12,912] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 07:35:12,912] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 07:35:12,912] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 07:35:12,912] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 07:35:12,912] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-09 07:35:12,912] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 07:35:12,912] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 07:38:59,654] DEBUG [Controller id=1] Delete topics listener fired for topics my_topic to be deleted (kafka.controller.KafkaController)
[2023-07-09 07:38:59,654] INFO [Controller id=1] Starting topic deletion for topics my_topic (kafka.controller.KafkaController)
[2023-07-09 07:38:59,654] INFO [Topic Deletion Manager 1] Handling deletion for topics my_topic (kafka.controller.TopicDeletionManager)
[2023-07-09 07:38:59,654] INFO [Topic Deletion Manager 1] Deletion of topic my_topic (re)started (kafka.controller.TopicDeletionManager)
[2023-07-09 07:38:59,685] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=my_topic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=my_topic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=my_topic,Partition=2,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2023-07-09 07:38:59,685] DEBUG The stop replica request (delete = true) sent to broker 1 is StopReplicaRequestInfo([Topic=my_topic,Partition=0,Replica=1],true),StopReplicaRequestInfo([Topic=my_topic,Partition=1,Replica=1],true),StopReplicaRequestInfo([Topic=my_topic,Partition=2,Replica=1],true) (kafka.controller.ControllerBrokerRequestBatch)
[2023-07-09 07:38:59,763] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(my_topic-0 -> KAFKA_STORAGE_ERROR, my_topic-1 -> KAFKA_STORAGE_ERROR, my_topic-2 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2023-07-09 07:38:59,763] DEBUG [Topic Deletion Manager 1] Deletion failed for replicas [Topic=my_topic,Partition=0,Replica=1],[Topic=my_topic,Partition=1,Replica=1],[Topic=my_topic,Partition=2,Replica=1]. Halting deletion for topics Set(my_topic) (kafka.controller.TopicDeletionManager)
[2023-07-09 07:38:59,763] INFO [Topic Deletion Manager 1] Halted deletion of topics my_topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2023-07-09 07:38:59,763] INFO [Topic Deletion Manager 1] Handling deletion for topics my_topic (kafka.controller.TopicDeletionManager)
[2023-07-09 07:38:59,763] DEBUG [Topic Deletion Manager 1] Retrying deletion of topics my_topic since replicas [Topic=my_topic,Partition=1,Replica=1],[Topic=my_topic,Partition=0,Replica=1],[Topic=my_topic,Partition=2,Replica=1] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2023-07-09 07:38:59,795] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=my_topic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=my_topic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=my_topic,Partition=2,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2023-07-09 07:39:18,345] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 7 and epoch zk version is now 7 (kafka.controller.KafkaController)
[2023-07-09 07:39:18,345] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2023-07-09 07:39:18,361] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-07-09 07:39:18,361] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-07-09 07:39:18,361] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2023-07-09 07:39:18,376] INFO [Controller id=2] Initialized broker epochs cache: Map(2 -> 673) (kafka.controller.KafkaController)
[2023-07-09 07:39:18,388] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2023-07-09 07:39:18,439] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-07-09 07:39:18,455] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2023-07-09 07:39:18,455] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2023-07-09 07:39:18,455] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-09 07:39:18,455] INFO [Controller id=2] Current list of topics in the cluster: HashSet(topicA, my_topic, topic01, __consumer_offsets, first_topic, my_other_topic, topic02) (kafka.controller.KafkaController)
[2023-07-09 07:39:18,455] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-07-09 07:39:18,471] INFO [Controller id=2] List of topics to be deleted: my_topic (kafka.controller.KafkaController)
[2023-07-09 07:39:18,471] INFO [Controller id=2] List of topics ineligible for deletion: topicA,my_topic,topic01,__consumer_offsets,first_topic,my_other_topic,topic02 (kafka.controller.KafkaController)
[2023-07-09 07:39:18,471] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-07-09 07:39:18,471] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(my_topic), initial ineligible deletions: HashSet(topicA, my_topic, topic01, __consumer_offsets, first_topic, my_other_topic, topic02) (kafka.controller.TopicDeletionManager)
[2023-07-09 07:39:18,471] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2023-07-09 07:39:18,489] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 07:39:18,489] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-09 07:39:18,502] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 07:39:18,533] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 07:39:18,628] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=my_other_topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OnlineReplica, [Topic=topic01,Partition=1,Replica=2] -> OnlineReplica, [Topic=my_topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=topic02,Partition=2,Replica=1] -> OfflineReplica, [Topic=first_topic,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=first_topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OnlineReplica, [Topic=topic01,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OnlineReplica, [Topic=topic02,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OnlineReplica, [Topic=my_topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OnlineReplica, [Topic=topic01,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=topicA,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OnlineReplica, [Topic=my_other_topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=first_topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=my_topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=3] -> OfflineReplica, [Topic=topic02,Partition=1,Replica=2] -> OnlineReplica, [Topic=my_other_topic,Partition=2,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 07:39:18,628] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 07:39:18,643] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 07:39:18,722] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, my_other_topic-1 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, topic01-0 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, topic02-0 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, my_other_topic-2 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, my_topic-2 -> OfflinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, first_topic-0 -> OnlinePartition, __consumer_offsets-44 -> OfflinePartition, topic01-1 -> OnlinePartition, __consumer_offsets-23 -> OfflinePartition, topic02-1 -> OnlinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, my_topic-1 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, topic02-2 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, topicA-0 -> OfflinePartition, __consumer_offsets-27 -> OnlinePartition, topic01-2 -> OfflinePartition, __consumer_offsets-39 -> OnlinePartition, my_topic-0 -> OfflinePartition, my_other_topic-0 -> OfflinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 07:39:18,722] INFO [Controller id=2] Ready to serve as the new controller with epoch 7 (kafka.controller.KafkaController)
[2023-07-09 07:39:18,722] INFO [Topic Deletion Manager 2] Handling deletion for topics my_topic (kafka.controller.TopicDeletionManager)
[2023-07-09 07:39:18,737] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-07-09 07:39:18,737] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-07-09 07:39:18,737] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-07-09 07:39:18,737] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-07-09 07:39:18,737] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-07-09 07:39:18,753] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-07-09 07:39:23,777] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 07:39:23,777] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 07:39:23,777] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-8 -> List(1), my_other_topic-0 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), topic01-2 -> List(1), topic01-0 -> List(1), my_other_topic-2 -> List(1), __consumer_offsets-32 -> List(1), __consumer_offsets-35 -> List(1), my_other_topic-1 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-47 -> List(1), topicA-0 -> List(1), topic02-0 -> List(1), __consumer_offsets-38 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), topic02-2 -> List(1), __consumer_offsets-29 -> List(1)) (kafka.controller.KafkaController)
[2023-07-09 07:39:23,777] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 07:39:23,777] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 07:39:23,777] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 07:39:23,777] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 07:39:23,777] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-22 -> List(3), __consumer_offsets-4 -> List(3), __consumer_offsets-25 -> List(3), __consumer_offsets-49 -> List(3), __consumer_offsets-31 -> List(3), __consumer_offsets-37 -> List(3), first_topic-0 -> List(3, 2, 1), __consumer_offsets-19 -> List(3), __consumer_offsets-13 -> List(3), __consumer_offsets-43 -> List(3), __consumer_offsets-1 -> List(3), __consumer_offsets-34 -> List(3), __consumer_offsets-7 -> List(3), __consumer_offsets-46 -> List(3), __consumer_offsets-16 -> List(3), __consumer_offsets-28 -> List(3), __consumer_offsets-10 -> List(3), __consumer_offsets-40 -> List(3)) (kafka.controller.KafkaController)
[2023-07-09 07:39:23,777] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-07-09 07:39:23,777] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-09 07:41:07,390] INFO [Controller id=2] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2023-07-09 07:41:07,390] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-07-09 07:41:07,406] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2023-07-09 07:41:07,417] INFO [Controller id=2] New broker startup callback for 1 (kafka.controller.KafkaController)
[2023-07-09 07:41:07,422] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-09 07:41:07,501] INFO [Controller id=2] Some replicas [Topic=my_topic,Partition=2,Replica=1],[Topic=my_topic,Partition=1,Replica=1],[Topic=my_topic,Partition=0,Replica=1] for topics scheduled for deletion my_topic are on the newly restarted brokers 1. Signaling restart of topic deletion for these topics (kafka.controller.KafkaController)
[2023-07-09 07:41:07,501] INFO [Topic Deletion Manager 2] Handling deletion for topics my_topic (kafka.controller.TopicDeletionManager)
[2023-07-09 07:41:07,501] INFO [Topic Deletion Manager 2] Deletion of topic my_topic (re)started (kafka.controller.TopicDeletionManager)
[2023-07-09 07:41:07,517] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=my_topic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=my_topic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=my_topic,Partition=2,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2023-07-09 07:41:07,517] DEBUG The stop replica request (delete = true) sent to broker 1 is StopReplicaRequestInfo([Topic=my_topic,Partition=0,Replica=1],true),StopReplicaRequestInfo([Topic=my_topic,Partition=1,Replica=1],true),StopReplicaRequestInfo([Topic=my_topic,Partition=2,Replica=1],true) (kafka.controller.ControllerBrokerRequestBatch)
[2023-07-09 07:41:07,517] DEBUG [Controller id=2] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2023-07-09 07:41:07,532] INFO [Controller id=2] Updated broker epochs cache: Map(2 -> 673, 1 -> 791) (kafka.controller.KafkaController)
[2023-07-09 07:41:07,532] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 07:41:07,564] DEBUG [Controller id=1] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-07-09 07:41:08,693] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(my_topic-0 -> KAFKA_STORAGE_ERROR, my_topic-1 -> KAFKA_STORAGE_ERROR, my_topic-2 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2023-07-09 07:41:08,709] DEBUG [Topic Deletion Manager 2] Deletion failed for replicas [Topic=my_topic,Partition=0,Replica=1],[Topic=my_topic,Partition=1,Replica=1],[Topic=my_topic,Partition=2,Replica=1]. Halting deletion for topics Set(my_topic) (kafka.controller.TopicDeletionManager)
[2023-07-09 07:41:08,709] INFO [Topic Deletion Manager 2] Halted deletion of topics my_topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2023-07-09 07:41:08,709] INFO [Topic Deletion Manager 2] Handling deletion for topics my_topic (kafka.controller.TopicDeletionManager)
[2023-07-09 07:41:08,709] DEBUG [Topic Deletion Manager 2] Retrying deletion of topics my_topic since replicas [Topic=my_topic,Partition=1,Replica=1],[Topic=my_topic,Partition=0,Replica=1],[Topic=my_topic,Partition=2,Replica=1] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2023-07-09 07:41:08,725] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=my_topic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=my_topic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=my_topic,Partition=2,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2023-07-09 07:41:27,307] INFO [Controller id=2] Newly added brokers: , deleted brokers: 1, bounced brokers: , all live brokers: 2 (kafka.controller.KafkaController)
[2023-07-09 07:41:27,307] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2023-07-09 07:41:27,307] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2023-07-09 07:41:27,307] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2023-07-09 07:41:27,322] INFO [Controller id=2] Broker failure callback for 1 (kafka.controller.KafkaController)
[2023-07-09 07:41:27,385] DEBUG [Topic Deletion Manager 2] Deletion failed for replicas [Topic=my_topic,Partition=2,Replica=1],[Topic=my_topic,Partition=1,Replica=1],[Topic=my_topic,Partition=0,Replica=1]. Halting deletion for topics HashSet(my_topic) (kafka.controller.TopicDeletionManager)
[2023-07-09 07:41:27,385] INFO [Topic Deletion Manager 2] Halted deletion of topics my_topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2023-07-09 07:41:27,385] INFO [Topic Deletion Manager 2] Handling deletion for topics my_topic (kafka.controller.TopicDeletionManager)
[2023-07-09 07:41:27,385] DEBUG [Topic Deletion Manager 2] Retrying deletion of topics my_topic since replicas [Topic=my_topic,Partition=1,Replica=1],[Topic=my_topic,Partition=0,Replica=1],[Topic=my_topic,Partition=2,Replica=1] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2023-07-09 07:41:27,401] DEBUG [Controller id=2] Unregister BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2023-07-09 07:41:27,401] INFO [Controller id=2] Updated broker epochs cache: Map(2 -> 673) (kafka.controller.KafkaController)
[2023-07-09 07:41:57,196] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2023-07-09 07:41:57,196] DEBUG [Controller id=2] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2023-07-09 07:41:57,196] DEBUG [Controller id=2] Live brokers:  (kafka.controller.KafkaController)
[2023-07-09 07:41:57,211] TRACE [Controller id=2] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-46 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-9 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-21 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-17 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-26 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-5 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),my_other_topic-1 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-38 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-1 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-34 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-16 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-45 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-41 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),topic01-0 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),topic02-0 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-20 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-49 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-29 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-25 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-8 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-37 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),my_other_topic-2 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-4 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-33 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),my_topic-2 -> (Leader:-1,ISR:1,LeaderEpoch:6,ControllerEpoch:7),__consumer_offsets-15 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-11 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),first_topic-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:7),__consumer_offsets-44 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),topic01-1 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:6),__consumer_offsets-23 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),topic02-1 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:6),__consumer_offsets-19 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-32 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-28 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-7 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-40 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),my_topic-1 -> (Leader:-1,ISR:1,LeaderEpoch:6,ControllerEpoch:7),__consumer_offsets-3 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-47 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-14 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-43 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-10 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),topic02-2 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-22 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-31 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),topicA-0 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-27 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),topic01-2 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-39 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),my_topic-0 -> (Leader:-1,ISR:1,LeaderEpoch:6,ControllerEpoch:7),my_other_topic-0 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-35 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-2 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7) (kafka.controller.KafkaController)
[2023-07-09 07:42:02,225] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2023-07-09 07:42:02,225] DEBUG [Controller id=2] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2023-07-09 07:42:02,225] DEBUG [Controller id=2] Live brokers:  (kafka.controller.KafkaController)
[2023-07-09 07:42:02,240] TRACE [Controller id=2] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-46 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-9 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-21 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-17 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-26 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-5 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),my_other_topic-1 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-38 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-1 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-34 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-16 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-45 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-41 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),topic01-0 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),topic02-0 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-20 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-49 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-29 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-25 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-8 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-37 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),my_other_topic-2 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-4 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-33 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),my_topic-2 -> (Leader:-1,ISR:1,LeaderEpoch:6,ControllerEpoch:7),__consumer_offsets-15 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-11 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),first_topic-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:7),__consumer_offsets-44 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),topic01-1 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:6),__consumer_offsets-23 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),topic02-1 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:6),__consumer_offsets-19 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-32 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-28 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-7 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-40 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),my_topic-1 -> (Leader:-1,ISR:1,LeaderEpoch:6,ControllerEpoch:7),__consumer_offsets-3 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-47 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-14 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-43 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-10 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),topic02-2 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-22 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-31 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),topicA-0 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-27 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),topic01-2 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-39 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),my_topic-0 -> (Leader:-1,ISR:1,LeaderEpoch:6,ControllerEpoch:7),my_other_topic-0 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-35 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-2 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7) (kafka.controller.KafkaController)
[2023-07-09 07:42:07,247] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2023-07-09 07:42:07,247] DEBUG [Controller id=2] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2023-07-09 07:42:07,247] DEBUG [Controller id=2] Live brokers:  (kafka.controller.KafkaController)
[2023-07-09 07:42:07,247] TRACE [Controller id=2] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-46 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-9 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-21 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-17 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-26 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-5 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),my_other_topic-1 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-38 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-1 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-34 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-16 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-45 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-41 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),topic01-0 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),topic02-0 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-20 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-49 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-29 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-25 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-8 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-37 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),my_other_topic-2 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-4 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-33 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),my_topic-2 -> (Leader:-1,ISR:1,LeaderEpoch:6,ControllerEpoch:7),__consumer_offsets-15 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-11 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),first_topic-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:7),__consumer_offsets-44 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),topic01-1 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:6),__consumer_offsets-23 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),topic02-1 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:6),__consumer_offsets-19 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-32 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-28 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-7 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-40 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),my_topic-1 -> (Leader:-1,ISR:1,LeaderEpoch:6,ControllerEpoch:7),__consumer_offsets-3 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-47 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-14 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-43 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-10 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),topic02-2 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-22 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-31 -> (Leader:-1,ISR:3,LeaderEpoch:11,ControllerEpoch:7),topicA-0 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-27 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),topic01-2 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-39 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),my_topic-0 -> (Leader:-1,ISR:1,LeaderEpoch:6,ControllerEpoch:7),my_other_topic-0 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:6),__consumer_offsets-35 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7),__consumer_offsets-2 -> (Leader:-1,ISR:1,LeaderEpoch:3,ControllerEpoch:7) (kafka.controller.KafkaController)
[2023-07-09 07:42:13,366] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 07:42:13,381] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 07:42:13,381] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 07:42:13,381] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2023-07-09 07:42:13,381] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2023-07-09 07:42:13,381] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 07:42:13,381] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 07:42:13,381] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2023-07-09 07:42:13,381] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2023-07-09 07:42:13,381] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2023-07-09 07:42:13,381] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2023-07-09 07:43:44,058] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@1a3869f4, name=log4j:logger=kafka.controller (kafka.controller)
[2023-07-09 07:44:29,771] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 07:44:29,834] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 8 and epoch zk version is now 8 (kafka.controller.KafkaController)
[2023-07-09 07:44:29,834] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2023-07-09 07:44:29,837] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-07-09 07:44:29,837] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-07-09 07:44:29,850] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2023-07-09 07:44:29,866] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 866) (kafka.controller.KafkaController)
[2023-07-09 07:44:29,912] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-07-09 07:44:29,991] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-07-09 07:44:30,022] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-07-09 07:44:30,022] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2023-07-09 07:44:30,022] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-09 07:44:30,022] INFO [Controller id=1] Current list of topics in the cluster: HashSet(topicA, my_topic, topic01, __consumer_offsets, first_topic, my_other_topic, topic02) (kafka.controller.KafkaController)
[2023-07-09 07:44:30,022] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-07-09 07:44:30,053] INFO [Controller id=1] List of topics to be deleted: my_topic (kafka.controller.KafkaController)
[2023-07-09 07:44:30,053] INFO [Controller id=1] List of topics ineligible for deletion: topic01,__consumer_offsets,first_topic,topic02 (kafka.controller.KafkaController)
[2023-07-09 07:44:30,053] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-07-09 07:44:30,053] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(my_topic), initial ineligible deletions: HashSet(topic01, __consumer_offsets, first_topic, topic02) (kafka.controller.TopicDeletionManager)
[2023-07-09 07:44:30,053] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2023-07-09 07:44:30,085] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 07:44:30,100] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 07:44:30,100] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-09 07:44:30,163] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 07:44:30,320] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=my_other_topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OfflineReplica, [Topic=topic01,Partition=1,Replica=2] -> OfflineReplica, [Topic=my_topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=topic02,Partition=2,Replica=1] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OfflineReplica, [Topic=topic01,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OfflineReplica, [Topic=topic02,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OfflineReplica, [Topic=my_topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OfflineReplica, [Topic=topic01,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=topicA,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OfflineReplica, [Topic=my_other_topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=my_topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=3] -> OfflineReplica, [Topic=topic02,Partition=1,Replica=2] -> OfflineReplica, [Topic=my_other_topic,Partition=2,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 07:44:30,320] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 07:44:30,320] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 07:44:30,555] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, my_other_topic-1 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, topic01-0 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, topic02-0 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, my_other_topic-2 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, my_topic-2 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, first_topic-0 -> OfflinePartition, __consumer_offsets-44 -> OnlinePartition, topic01-1 -> OfflinePartition, __consumer_offsets-23 -> OnlinePartition, topic02-1 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, my_topic-1 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, topic02-2 -> OnlinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, topicA-0 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, topic01-2 -> OnlinePartition, __consumer_offsets-39 -> OfflinePartition, my_topic-0 -> OfflinePartition, my_other_topic-0 -> OnlinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 07:44:30,555] INFO [Controller id=1] Ready to serve as the new controller with epoch 8 (kafka.controller.KafkaController)
[2023-07-09 07:44:30,571] INFO [Topic Deletion Manager 1] Handling deletion for topics my_topic (kafka.controller.TopicDeletionManager)
[2023-07-09 07:44:30,571] INFO [Topic Deletion Manager 1] Deletion of topic my_topic (re)started (kafka.controller.TopicDeletionManager)
[2023-07-09 07:44:30,618] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=my_topic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=my_topic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=my_topic,Partition=2,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2023-07-09 07:44:30,618] DEBUG The stop replica request (delete = true) sent to broker 1 is StopReplicaRequestInfo([Topic=my_topic,Partition=0,Replica=1],true),StopReplicaRequestInfo([Topic=my_topic,Partition=1,Replica=1],true),StopReplicaRequestInfo([Topic=my_topic,Partition=2,Replica=1],true) (kafka.controller.ControllerBrokerRequestBatch)
[2023-07-09 07:44:30,634] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-07-09 07:44:30,634] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-07-09 07:44:30,639] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-07-09 07:44:30,639] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-07-09 07:44:30,639] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-07-09 07:44:30,665] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-07-09 07:44:31,058] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(my_topic-0 -> KAFKA_STORAGE_ERROR, my_topic-1 -> KAFKA_STORAGE_ERROR, my_topic-2 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2023-07-09 07:44:31,058] DEBUG [Topic Deletion Manager 1] Deletion failed for replicas [Topic=my_topic,Partition=0,Replica=1],[Topic=my_topic,Partition=1,Replica=1],[Topic=my_topic,Partition=2,Replica=1]. Halting deletion for topics Set(my_topic) (kafka.controller.TopicDeletionManager)
[2023-07-09 07:44:31,058] INFO [Topic Deletion Manager 1] Halted deletion of topics my_topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2023-07-09 07:44:31,073] INFO [Topic Deletion Manager 1] Handling deletion for topics my_topic (kafka.controller.TopicDeletionManager)
[2023-07-09 07:44:31,073] DEBUG [Topic Deletion Manager 1] Retrying deletion of topics my_topic since replicas [Topic=my_topic,Partition=1,Replica=1],[Topic=my_topic,Partition=0,Replica=1],[Topic=my_topic,Partition=2,Replica=1] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2023-07-09 07:44:31,105] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=my_topic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=my_topic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=my_topic,Partition=2,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2023-07-09 07:46:19,283] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 07:46:19,330] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 9 and epoch zk version is now 9 (kafka.controller.KafkaController)
[2023-07-09 07:46:19,330] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2023-07-09 07:46:19,330] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-07-09 07:46:19,346] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-07-09 07:46:19,346] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2023-07-09 07:46:19,361] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 952) (kafka.controller.KafkaController)
[2023-07-09 07:46:19,393] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-07-09 07:46:19,471] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-07-09 07:46:19,502] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-07-09 07:46:19,502] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2023-07-09 07:46:19,502] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-09 07:46:19,502] INFO [Controller id=1] Current list of topics in the cluster: HashSet(topicA, my_topic, topic01, __consumer_offsets, first_topic, my_other_topic, topic02) (kafka.controller.KafkaController)
[2023-07-09 07:46:19,502] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-07-09 07:46:19,534] INFO [Controller id=1] List of topics to be deleted: my_topic (kafka.controller.KafkaController)
[2023-07-09 07:46:19,534] INFO [Controller id=1] List of topics ineligible for deletion: topic01,__consumer_offsets,first_topic,topic02 (kafka.controller.KafkaController)
[2023-07-09 07:46:19,534] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-07-09 07:46:19,534] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(my_topic), initial ineligible deletions: HashSet(topic01, __consumer_offsets, first_topic, topic02) (kafka.controller.TopicDeletionManager)
[2023-07-09 07:46:19,534] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2023-07-09 07:46:19,565] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 07:46:19,580] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 07:46:19,587] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-09 07:46:19,659] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 07:46:19,816] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=my_other_topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OfflineReplica, [Topic=topic01,Partition=1,Replica=2] -> OfflineReplica, [Topic=my_topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=topic02,Partition=2,Replica=1] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OfflineReplica, [Topic=topic01,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OfflineReplica, [Topic=topic02,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OfflineReplica, [Topic=my_topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OfflineReplica, [Topic=topic01,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=topicA,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OfflineReplica, [Topic=my_other_topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=my_topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=3] -> OfflineReplica, [Topic=topic02,Partition=1,Replica=2] -> OfflineReplica, [Topic=my_other_topic,Partition=2,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 07:46:19,816] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 07:46:19,832] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 07:46:19,926] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, my_other_topic-1 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, topic01-0 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, topic02-0 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, my_other_topic-2 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, my_topic-2 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, first_topic-0 -> OfflinePartition, __consumer_offsets-44 -> OnlinePartition, topic01-1 -> OfflinePartition, __consumer_offsets-23 -> OnlinePartition, topic02-1 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, my_topic-1 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, topic02-2 -> OnlinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, topicA-0 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, topic01-2 -> OnlinePartition, __consumer_offsets-39 -> OfflinePartition, my_topic-0 -> OfflinePartition, my_other_topic-0 -> OnlinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 07:46:19,926] INFO [Controller id=1] Ready to serve as the new controller with epoch 9 (kafka.controller.KafkaController)
[2023-07-09 07:46:19,926] INFO [Topic Deletion Manager 1] Handling deletion for topics my_topic (kafka.controller.TopicDeletionManager)
[2023-07-09 07:46:19,926] INFO [Topic Deletion Manager 1] Deletion of topic my_topic (re)started (kafka.controller.TopicDeletionManager)
[2023-07-09 07:46:19,957] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=my_topic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=my_topic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=my_topic,Partition=2,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2023-07-09 07:46:19,957] DEBUG The stop replica request (delete = true) sent to broker 1 is StopReplicaRequestInfo([Topic=my_topic,Partition=0,Replica=1],true),StopReplicaRequestInfo([Topic=my_topic,Partition=1,Replica=1],true),StopReplicaRequestInfo([Topic=my_topic,Partition=2,Replica=1],true) (kafka.controller.ControllerBrokerRequestBatch)
[2023-07-09 07:46:19,973] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-07-09 07:46:19,973] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-07-09 07:46:19,973] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-07-09 07:46:19,973] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-07-09 07:46:19,973] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-07-09 07:46:19,989] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-07-09 07:46:20,589] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(my_topic-0 -> KAFKA_STORAGE_ERROR, my_topic-1 -> KAFKA_STORAGE_ERROR, my_topic-2 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2023-07-09 07:46:20,601] DEBUG [Topic Deletion Manager 1] Deletion failed for replicas [Topic=my_topic,Partition=0,Replica=1],[Topic=my_topic,Partition=1,Replica=1],[Topic=my_topic,Partition=2,Replica=1]. Halting deletion for topics Set(my_topic) (kafka.controller.TopicDeletionManager)
[2023-07-09 07:46:20,601] INFO [Topic Deletion Manager 1] Halted deletion of topics my_topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2023-07-09 07:46:20,601] INFO [Topic Deletion Manager 1] Handling deletion for topics my_topic (kafka.controller.TopicDeletionManager)
[2023-07-09 07:46:20,601] DEBUG [Topic Deletion Manager 1] Retrying deletion of topics my_topic since replicas [Topic=my_topic,Partition=1,Replica=1],[Topic=my_topic,Partition=0,Replica=1],[Topic=my_topic,Partition=2,Replica=1] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2023-07-09 07:46:20,632] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=my_topic,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=my_topic,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=my_topic,Partition=2,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2023-07-09 07:50:37,555] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@1a3869f4, name=log4j:logger=kafka.controller (kafka.controller)
[2023-07-09 07:51:15,632] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 07:51:15,695] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-07-09 07:51:15,695] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2023-07-09 07:51:15,711] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-07-09 07:51:15,711] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-07-09 07:51:15,727] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2023-07-09 07:51:15,795] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 24) (kafka.controller.KafkaController)
[2023-07-09 07:51:15,805] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-07-09 07:51:15,821] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-07-09 07:51:15,852] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-07-09 07:51:15,852] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2023-07-09 07:51:15,852] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-09 07:51:15,852] INFO [Controller id=1] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2023-07-09 07:51:15,852] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-07-09 07:51:15,852] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-07-09 07:51:15,868] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-07-09 07:51:15,868] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-07-09 07:51:15,868] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2023-07-09 07:51:15,868] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2023-07-09 07:51:15,883] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 07:51:15,883] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 07:51:15,895] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 07:51:15,895] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 07:51:15,895] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 07:51:15,895] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 07:51:15,899] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-09 07:51:15,899] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 07:51:15,899] INFO [Controller id=1] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-07-09 07:51:15,915] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-07-09 07:51:15,915] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-07-09 07:51:15,915] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-07-09 07:51:15,915] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-07-09 07:51:15,915] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-07-09 07:51:15,946] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-07-09 07:51:20,968] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 07:51:20,968] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 07:52:12,218] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2023-07-09 07:52:12,218] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-07-09 07:52:12,227] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-07-09 07:52:12,243] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2023-07-09 07:52:12,243] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-09 07:52:12,259] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2023-07-09 07:52:12,259] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 24, 2 -> 43) (kafka.controller.KafkaController)
[2023-07-09 07:52:12,337] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 07:52:12,368] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-07-09 07:52:59,763] INFO [Controller id=1] New topics: [Set(my_topic)], deleted topics: [Set()], new partition replica assignment [Map(my_topic-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), my_topic-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), my_topic-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2023-07-09 07:52:59,763] INFO [Controller id=1] New partition creation callback for my_topic-0,my_topic-1,my_topic-2 (kafka.controller.KafkaController)
[2023-07-09 07:54:44,092] INFO [Controller id=1] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2023-07-09 07:54:44,092] INFO [Controller id=1] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-07-09 07:56:20,975] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 07:56:20,975] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 07:56:20,975] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 07:56:20,975] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 07:56:20,975] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 07:56:20,975] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:01:20,992] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 08:01:20,992] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 08:01:20,992] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:01:20,992] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:01:20,992] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:01:20,992] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:03:25,470] INFO [Controller id=1] New topics: [Set(my_other_topic)], deleted topics: [Set()], new partition replica assignment [Map(my_other_topic-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), my_other_topic-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), my_other_topic-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2023-07-09 08:03:25,470] INFO [Controller id=1] New partition creation callback for my_other_topic-0,my_other_topic-1,my_other_topic-2 (kafka.controller.KafkaController)
[2023-07-09 08:06:21,009] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 08:06:21,009] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 08:06:21,009] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:06:21,009] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:06:21,009] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:06:21,009] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:11:21,022] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 08:11:21,023] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 08:11:21,024] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:11:21,024] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:11:21,024] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:11:21,024] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:16:21,038] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 08:16:21,038] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 08:16:21,040] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:16:21,041] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:16:21,041] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:16:21,041] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:21:21,056] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 08:21:21,056] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 08:21:21,057] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:21:21,057] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:21:21,057] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:21:21,057] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:26:21,058] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 08:26:21,058] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 08:26:21,058] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:26:21,058] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:26:21,058] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:26:21,058] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:31:21,071] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 08:31:21,071] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 08:31:21,073] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:31:21,073] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:31:21,074] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:31:21,074] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:36:21,087] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 08:36:21,088] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 08:36:21,088] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:36:21,089] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:36:21,089] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:36:21,089] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:41:21,102] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 08:41:21,102] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 08:41:21,102] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:41:21,102] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:41:21,102] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:41:21,102] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:43:07,910] INFO [Controller id=1] New partitions to be added Map(my_topic-3 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=)) (kafka.controller.KafkaController)
[2023-07-09 08:43:07,910] INFO [Controller id=1] New partition creation callback for my_topic-3 (kafka.controller.KafkaController)
[2023-07-09 08:43:07,941] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-09 08:43:07,941] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-09 08:46:21,112] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 08:46:21,112] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 08:46:21,113] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:46:21,113] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:46:21,113] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:46:21,113] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:51:21,129] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 08:51:21,129] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 08:51:21,130] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:51:21,130] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:51:21,130] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:51:21,130] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:56:21,138] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 08:56:21,138] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 08:56:21,138] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:56:21,138] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 08:56:21,138] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 08:56:21,138] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 09:01:21,141] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 09:01:21,141] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 09:01:21,141] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 09:01:21,141] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 09:01:21,141] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 09:01:21,141] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 09:06:21,151] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-09 09:06:21,151] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-09 09:06:21,152] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-09 09:06:21,152] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 09:06:21,152] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-09 09:06:21,152] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-09 09:06:23,923] INFO [Controller id=1] Shutting down broker 2 (kafka.controller.KafkaController)
[2023-07-09 09:06:23,923] DEBUG [Controller id=1] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2023-07-09 09:06:23,924] DEBUG [Controller id=1] Live brokers: 1 (kafka.controller.KafkaController)
[2023-07-09 09:06:23,930] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),my_other_topic-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),my_topic-3 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),my_other_topic-2 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),my_topic-2 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),my_topic-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),my_topic-0 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),my_other_topic-0 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-07-09 09:06:24,965] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 09:06:24,969] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 09:06:24,969] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 09:06:24,971] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2023-07-09 09:06:24,972] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2023-07-09 09:06:24,974] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 09:06:24,975] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 09:06:24,976] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2023-07-09 09:06:24,992] INFO [Controller id=1] Newly added brokers: , deleted brokers: 2, bounced brokers: , all live brokers: 1 (kafka.controller.KafkaController)
[2023-07-09 09:06:24,993] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2023-07-09 09:06:24,994] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2023-07-09 09:06:24,994] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2023-07-09 09:06:25,005] INFO [Controller id=1] Broker failure callback for 2 (kafka.controller.KafkaController)
[2023-07-09 09:06:25,008] INFO [Controller id=1] Removed 2 from list of shutting down brokers. (kafka.controller.KafkaController)
[2023-07-09 09:06:25,166] DEBUG [Controller id=1] Unregister BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2023-07-09 09:06:25,167] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 24) (kafka.controller.KafkaController)
[2023-07-09 09:06:25,169] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-09 09:07:03,824] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2023-07-09 09:07:03,824] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2023-07-09 09:07:03,824] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2023-07-09 09:07:03,824] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),my_other_topic-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),my_topic-3 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),my_other_topic-2 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),my_topic-2 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),my_topic-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),my_topic-0 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),my_other_topic-0 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-07-09 09:07:05,143] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 09:07:05,143] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 09:07:05,143] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-09 09:07:05,143] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2023-07-09 09:07:05,143] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-07-09 09:07:05,143] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-07-09 09:07:05,143] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-07-09 09:07:05,143] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2023-07-09 09:07:05,158] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2023-07-09 09:07:05,158] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2023-07-09 09:07:05,159] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
