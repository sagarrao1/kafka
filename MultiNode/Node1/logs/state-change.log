[2023-07-09 06:12:16,537] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@1a3869f4, name=log4j:logger=state.change.logger (state.change.logger)
[2023-07-09 06:14:09,504] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-11 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-35 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-29 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-32 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition first_topic-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-41 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-8 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-5 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-20 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-47 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-23 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-38 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-17 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-14 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-26 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-2 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-44 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition first_topic-0 (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 06:14:09,506] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 06:14:09,514] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 06:14:09,514] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 06:14:09,514] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 06:14:09,514] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers HashSet(1) for partition first_topic-0 (state.change.logger)
[2023-07-09 06:14:09,514] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 06:14:09,514] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 06:14:09,514] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 06:14:09,514] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 06:14:09,514] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 06:14:09,514] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 06:14:09,514] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 06:14:09,514] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 06:14:09,514] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 06:14:09,514] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 06:14:09,514] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 06:14:09,514] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 06:14:09,514] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 06:14:09,593] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-30 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,593] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-21 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,593] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-33 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,593] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-36 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,593] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition first_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,593] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-48 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,593] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-6 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,593] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,596] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-45 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,596] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-27 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,596] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-9 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,598] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-42 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,598] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-3 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,598] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-18 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,598] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-15 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,598] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-24 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,598] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-39 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,598] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-12 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition __consumer_offsets-22 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition __consumer_offsets-4 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition __consumer_offsets-25 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition __consumer_offsets-49 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition __consumer_offsets-31 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition __consumer_offsets-37 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition first_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition __consumer_offsets-19 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition __consumer_offsets-13 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition __consumer_offsets-43 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition __consumer_offsets-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition __consumer_offsets-34 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition __consumer_offsets-7 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition __consumer_offsets-46 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition __consumer_offsets-16 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition __consumer_offsets-28 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition __consumer_offsets-10 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Changed state of replica 3 for partition __consumer_offsets-40 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition first_topic-0 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-15 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-48 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-13 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-46 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers HashSet(1) for partition first_topic-0 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-9 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-42 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-21 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-19 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-30 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-28 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-7 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-40 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-3 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-36 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-1 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-34 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-16 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-45 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-43 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-12 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-10 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-24 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-22 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-49 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-18 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-31 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-0 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-27 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-25 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-39 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-37 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-6 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-4 (state.change.logger)
[2023-07-09 06:14:09,641] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-33 (state.change.logger)
[2023-07-09 06:14:09,657] TRACE [Controller id=1 epoch=5] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 06:14:09,672] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:14:09,672] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:14:09,672] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:14:09,672] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:14:09,672] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:14:09,672] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:14:09,672] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:14:09,672] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:14:09,672] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:14:09,672] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:14:09,672] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:14:09,672] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:14:09,672] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:14:09,672] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:14:09,672] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:14:09,672] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:14:09,672] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:14:09,704] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,704] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,704] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,704] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,704] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,704] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,704] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,704] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,704] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,704] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:14:09,719] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 06:14:09,719] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 06:14:09,719] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 06:14:09,719] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 06:14:09,719] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 06:14:09,719] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 06:14:09,719] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 06:14:09,719] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 06:14:09,719] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 06:14:09,735] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 06:14:09,735] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 06:14:09,735] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 06:14:09,735] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition first_topic-0 (state.change.logger)
[2023-07-09 06:14:09,735] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 06:14:09,735] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 06:14:09,735] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 06:14:09,766] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-35 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:14:09,784] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-5 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:14:09,792] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-20 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:14:09,797] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-41 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:14:09,813] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-29 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:14:09,813] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-44 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:14:09,829] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-14 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:14:09,846] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-2 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:14:09,855] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-23 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:14:09,870] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-38 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:14:09,881] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-8 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:14:09,890] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-11 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:14:09,902] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-26 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:14:09,910] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition first_topic-0 (last update controller epoch 4) (state.change.logger)
[2023-07-09 06:14:09,925] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-47 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:14:09,937] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-17 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:14:09,947] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-32 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:14:09,947] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 06:14:09,947] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 06:14:09,947] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 06:14:09,947] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 06:14:09,947] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 06:14:09,947] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 06:14:09,947] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 06:14:09,947] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 06:14:09,947] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 06:14:09,947] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 06:14:09,947] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 06:14:09,947] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 06:14:09,947] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 06:14:09,947] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition first_topic-0 (state.change.logger)
[2023-07-09 06:14:09,947] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 06:14:09,947] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 06:14:09,947] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 06:14:09,983] TRACE [Controller id=1 epoch=5] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=38,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 1 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 06:14:09,995] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-07-09 06:14:09,995] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-07-09 06:14:09,995] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-07-09 06:14:09,995] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-07-09 06:14:09,995] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-07-09 06:14:09,995] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-07-09 06:14:09,995] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-07-09 06:14:09,995] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-07-09 06:14:09,995] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-07-09 06:14:09,995] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-07-09 06:14:09,995] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-07-09 06:14:09,995] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-07-09 06:14:09,995] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-07-09 06:14:09,995] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-07-09 06:14:09,995] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-07-09 06:14:09,995] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-07-09 06:14:09,995] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-07-09 06:14:09,995] TRACE [Controller id=1 epoch=5] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 2 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:14:10,002] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition first_topic-0 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Controller id=1 epoch=5] Received response {error_code=0,partition_errors=[{topic_name=first_topic,partition_index=0,error_code=11,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 3 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=5, leader=-1, leaderEpoch=9, isr=[3], zkVersion=9, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,002] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=5, leader=-1, leaderEpoch=7, isr=[2], zkVersion=7, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-07-09 06:14:10,018] TRACE [Controller id=1 epoch=5] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 4 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 06:15:52,196] TRACE [Controller id=1 epoch=5] Changed partition my_other_topic-0 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 06:15:52,196] TRACE [Controller id=1 epoch=5] Changed partition my_other_topic-1 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 06:15:52,196] TRACE [Controller id=1 epoch=5] Changed partition my_other_topic-2 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 06:15:52,196] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition my_other_topic-0 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 06:15:52,196] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition my_other_topic-1 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 06:15:52,196] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition my_other_topic-2 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 06:15:52,227] TRACE [Controller id=1 epoch=5] Changed partition my_other_topic-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 06:15:52,227] TRACE [Controller id=1 epoch=5] Changed partition my_other_topic-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 06:15:52,227] TRACE [Controller id=1 epoch=5] Changed partition my_other_topic-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 06:15:52,227] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition my_other_topic-0 (state.change.logger)
[2023-07-09 06:15:52,227] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition my_other_topic-1 (state.change.logger)
[2023-07-09 06:15:52,227] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition my_other_topic-2 (state.change.logger)
[2023-07-09 06:15:52,227] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_other_topic-0 (state.change.logger)
[2023-07-09 06:15:52,227] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_other_topic-1 (state.change.logger)
[2023-07-09 06:15:52,227] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_other_topic-2 (state.change.logger)
[2023-07-09 06:15:52,243] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition my_other_topic-0 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:15:52,243] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition my_other_topic-1 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:15:52,243] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition my_other_topic-2 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:15:52,243] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:15:52,243] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:15:52,243] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:15:52,243] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 5 starting the become-leader transition for partition my_other_topic-2 (state.change.logger)
[2023-07-09 06:15:52,243] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 5 starting the become-leader transition for partition my_other_topic-1 (state.change.logger)
[2023-07-09 06:15:52,243] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 5 starting the become-leader transition for partition my_other_topic-0 (state.change.logger)
[2023-07-09 06:15:52,307] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 5 for partition my_other_topic-2 (last update controller epoch 5) (state.change.logger)
[2023-07-09 06:15:52,337] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 5 for partition my_other_topic-1 (last update controller epoch 5) (state.change.logger)
[2023-07-09 06:15:52,384] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 5 for partition my_other_topic-0 (last update controller epoch 5) (state.change.logger)
[2023-07-09 06:15:52,384] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 5 for the become-leader transition for partition my_other_topic-2 (state.change.logger)
[2023-07-09 06:15:52,384] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 5 for the become-leader transition for partition my_other_topic-1 (state.change.logger)
[2023-07-09 06:15:52,384] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 5 for the become-leader transition for partition my_other_topic-0 (state.change.logger)
[2023-07-09 06:15:52,391] TRACE [Controller id=1 epoch=5] Received response {error_code=0,partition_errors=[{topic_name=my_other_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 5 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 06:15:52,391] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_other_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2023-07-09 06:15:52,391] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_other_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2023-07-09 06:15:52,391] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_other_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2023-07-09 06:15:52,400] TRACE [Controller id=1 epoch=5] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 6 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 06:18:00,484] TRACE [Controller id=1 epoch=5] Changed partition my_topic-0 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 06:18:00,484] TRACE [Controller id=1 epoch=5] Changed partition my_topic-1 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 06:18:00,484] TRACE [Controller id=1 epoch=5] Changed partition my_topic-2 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 06:18:00,484] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition my_topic-0 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 06:18:00,484] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition my_topic-1 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 06:18:00,484] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition my_topic-2 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 06:18:00,510] TRACE [Controller id=1 epoch=5] Changed partition my_topic-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 06:18:00,510] TRACE [Controller id=1 epoch=5] Changed partition my_topic-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 06:18:00,510] TRACE [Controller id=1 epoch=5] Changed partition my_topic-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 06:18:00,510] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition my_topic-0 (state.change.logger)
[2023-07-09 06:18:00,510] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition my_topic-1 (state.change.logger)
[2023-07-09 06:18:00,510] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition my_topic-2 (state.change.logger)
[2023-07-09 06:18:00,510] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-0 (state.change.logger)
[2023-07-09 06:18:00,510] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-1 (state.change.logger)
[2023-07-09 06:18:00,510] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-2 (state.change.logger)
[2023-07-09 06:18:00,510] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition my_topic-0 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:18:00,510] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition my_topic-1 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:18:00,510] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition my_topic-2 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:18:00,510] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:18:00,510] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:18:00,510] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 5 (state.change.logger)
[2023-07-09 06:18:00,510] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 5 starting the become-leader transition for partition my_topic-2 (state.change.logger)
[2023-07-09 06:18:00,510] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 5 starting the become-leader transition for partition my_topic-1 (state.change.logger)
[2023-07-09 06:18:00,510] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 5 starting the become-leader transition for partition my_topic-0 (state.change.logger)
[2023-07-09 06:18:00,557] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 7 for partition my_topic-2 (last update controller epoch 5) (state.change.logger)
[2023-07-09 06:18:00,588] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 7 for partition my_topic-1 (last update controller epoch 5) (state.change.logger)
[2023-07-09 06:18:00,636] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 7 for partition my_topic-0 (last update controller epoch 5) (state.change.logger)
[2023-07-09 06:18:00,636] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 5 for the become-leader transition for partition my_topic-2 (state.change.logger)
[2023-07-09 06:18:00,636] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 5 for the become-leader transition for partition my_topic-1 (state.change.logger)
[2023-07-09 06:18:00,636] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 5 for the become-leader transition for partition my_topic-0 (state.change.logger)
[2023-07-09 06:18:00,636] TRACE [Controller id=1 epoch=5] Received response {error_code=0,partition_errors=[{topic_name=my_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 7 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 06:18:00,636] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2023-07-09 06:18:00,636] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2023-07-09 06:18:00,636] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2023-07-09 06:18:00,636] TRACE [Controller id=1 epoch=5] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 8 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 06:53:45,307] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition first_topic-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition first_topic-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:53:50,336] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition first_topic-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition first_topic-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:53:55,380] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition first_topic-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition first_topic-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:54:39,597] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@1a3869f4, name=log4j:logger=state.change.logger (state.change.logger)
[2023-07-09 06:55:07,492] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition __consumer_offsets-11 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition __consumer_offsets-35 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition my_other_topic-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition my_topic-1 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition __consumer_offsets-29 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition __consumer_offsets-32 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition my_other_topic-1 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition first_topic-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition __consumer_offsets-41 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition __consumer_offsets-8 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition __consumer_offsets-5 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition __consumer_offsets-20 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition __consumer_offsets-47 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition __consumer_offsets-23 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition __consumer_offsets-38 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition my_topic-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition __consumer_offsets-17 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition __consumer_offsets-14 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition __consumer_offsets-26 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition my_topic-2 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition __consumer_offsets-2 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,495] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition __consumer_offsets-44 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,501] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition my_other_topic-2 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:07,501] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 06:55:07,501] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 06:55:07,501] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 06:55:07,501] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition first_topic-0 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_topic-0 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_topic-1 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_other_topic-0 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_other_topic-1 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_other_topic-2 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_topic-2 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers HashSet(1) for partition first_topic-0 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-0 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-1 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_other_topic-0 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_other_topic-1 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_other_topic-2 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-2 (state.change.logger)
[2023-07-09 06:55:07,505] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 06:55:07,611] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-30 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,611] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-21 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,611] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-33 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,611] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-36 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,611] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition first_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,611] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-48 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,611] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-6 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,611] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,611] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-45 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,611] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-27 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,611] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-9 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,611] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-42 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,611] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-3 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,611] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-18 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,611] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-15 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,611] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-24 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,611] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-39 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,611] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-12 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,617] TRACE [Controller id=1 epoch=6] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,642] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Changed state of replica 3 for partition __consumer_offsets-22 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Changed state of replica 3 for partition __consumer_offsets-4 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Changed state of replica 3 for partition __consumer_offsets-25 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Changed state of replica 3 for partition __consumer_offsets-49 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Changed state of replica 3 for partition __consumer_offsets-31 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Changed state of replica 3 for partition __consumer_offsets-37 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Changed state of replica 3 for partition first_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Changed state of replica 3 for partition __consumer_offsets-19 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Changed state of replica 3 for partition __consumer_offsets-13 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Changed state of replica 3 for partition __consumer_offsets-43 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Changed state of replica 3 for partition __consumer_offsets-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Changed state of replica 3 for partition __consumer_offsets-34 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Changed state of replica 3 for partition __consumer_offsets-7 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Changed state of replica 3 for partition __consumer_offsets-46 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Changed state of replica 3 for partition __consumer_offsets-16 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Changed state of replica 3 for partition __consumer_offsets-28 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Changed state of replica 3 for partition __consumer_offsets-10 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Changed state of replica 3 for partition __consumer_offsets-40 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition first_topic-0 (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-15 (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-48 (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-13 (state.change.logger)
[2023-07-09 06:55:07,649] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-46 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers HashSet(1) for partition first_topic-0 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-9 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-42 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-21 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-19 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-30 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-28 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-7 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-40 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-3 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-36 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-1 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-34 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-16 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-45 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-43 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-12 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-10 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-24 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-22 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-49 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-18 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-31 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-0 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-27 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-25 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-39 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-37 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-6 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-4 (state.change.logger)
[2023-07-09 06:55:07,664] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-33 (state.change.logger)
[2023-07-09 06:55:07,712] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 06:55:07,712] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 06:55:07,712] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 06:55:07,712] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 06:55:07,712] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition my_topic-1 (state.change.logger)
[2023-07-09 06:55:07,712] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 06:55:07,712] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition my_other_topic-1 (state.change.logger)
[2023-07-09 06:55:07,712] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition my_topic-2 (state.change.logger)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition my_other_topic-2 (state.change.logger)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition first_topic-0 (state.change.logger)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition my_other_topic-0 (state.change.logger)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition my_topic-0 (state.change.logger)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,727] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:07,775] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition __consumer_offsets-35 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:55:07,791] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition __consumer_offsets-5 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:55:07,799] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition __consumer_offsets-20 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:55:07,807] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition __consumer_offsets-41 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:55:07,813] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition my_topic-1 (last update controller epoch 5) (state.change.logger)
[2023-07-09 06:55:07,827] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition __consumer_offsets-29 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:55:07,830] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition my_other_topic-1 (last update controller epoch 5) (state.change.logger)
[2023-07-09 06:55:07,839] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition __consumer_offsets-44 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:55:07,847] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition __consumer_offsets-14 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:55:07,856] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition __consumer_offsets-2 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:55:07,856] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition __consumer_offsets-23 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:55:07,870] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition __consumer_offsets-38 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:55:07,870] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition __consumer_offsets-8 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:55:07,886] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition __consumer_offsets-11 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:55:07,886] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition my_topic-2 (last update controller epoch 5) (state.change.logger)
[2023-07-09 06:55:07,902] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition __consumer_offsets-26 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:55:07,902] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition my_other_topic-2 (last update controller epoch 5) (state.change.logger)
[2023-07-09 06:55:07,917] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition first_topic-0 (last update controller epoch 4) (state.change.logger)
[2023-07-09 06:55:07,935] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition my_other_topic-0 (last update controller epoch 5) (state.change.logger)
[2023-07-09 06:55:07,941] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition __consumer_offsets-47 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:55:07,949] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition __consumer_offsets-17 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition my_topic-0 (last update controller epoch 5) (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 1 for partition __consumer_offsets-32 (last update controller epoch 1) (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition my_topic-1 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition my_other_topic-1 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition my_topic-2 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition my_other_topic-2 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition first_topic-0 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition my_other_topic-0 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition my_topic-0 (state.change.logger)
[2023-07-09 06:55:07,964] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 06:55:08,006] TRACE [Controller id=1 epoch=6] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=38,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 1 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_other_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_other_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_other_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:08,017] TRACE [Controller id=1 epoch=6] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 2 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 06:55:08,028] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:08,029] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 6 for partition first_topic-0 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2023-07-09 06:55:08,033] TRACE [Controller id=1 epoch=6] Received response {error_code=0,partition_errors=[{topic_name=first_topic,partition_index=0,error_code=11,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 3 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:08,034] TRACE [Controller id=1 epoch=6] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 4 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 06:55:38,906] TRACE [Controller id=1 epoch=6] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 5 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 06:55:38,906] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-13 (state.change.logger)
[2023-07-09 06:55:38,906] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-46 (state.change.logger)
[2023-07-09 06:55:38,906] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-9 (state.change.logger)
[2023-07-09 06:55:38,906] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-42 (state.change.logger)
[2023-07-09 06:55:38,906] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-21 (state.change.logger)
[2023-07-09 06:55:38,906] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 06:55:38,906] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-30 (state.change.logger)
[2023-07-09 06:55:38,906] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 06:55:38,906] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 06:55:38,906] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition my_other_topic-1 (state.change.logger)
[2023-07-09 06:55:38,907] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 06:55:38,907] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-1 (state.change.logger)
[2023-07-09 06:55:38,907] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-34 (state.change.logger)
[2023-07-09 06:55:38,907] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-16 (state.change.logger)
[2023-07-09 06:55:38,907] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-45 (state.change.logger)
[2023-07-09 06:55:38,907] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-12 (state.change.logger)
[2023-07-09 06:55:38,907] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 06:55:38,907] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-24 (state.change.logger)
[2023-07-09 06:55:38,907] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 06:55:38,907] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-49 (state.change.logger)
[2023-07-09 06:55:38,907] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-0 (state.change.logger)
[2023-07-09 06:55:38,907] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 06:55:38,907] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-25 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-37 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition my_other_topic-2 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-4 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-33 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition my_topic-2 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-15 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-48 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], offlineReplicas=[3]) to brokers HashSet(2) for partition first_topic-0 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-19 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-28 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-7 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-40 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition my_topic-1 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-3 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-36 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-43 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-10 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-22 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-18 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-31 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-27 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-39 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition my_topic-0 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition my_other_topic-0 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-6 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-21 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-15 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-48 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-18 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-36 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-30 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-24 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-39 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-6 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-42 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-0 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-3 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-27 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-33 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-9 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition first_topic-0 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:38,908] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-12 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition __consumer_offsets-45 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-15 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-48 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-45 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition first_topic-0 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-12 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-9 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-42 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-24 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-21 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-18 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-0 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-30 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-27 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-39 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-3 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-36 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-33 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-15 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-48 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition first_topic-0 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-9 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-42 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-21 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-30 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-3 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-36 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-45 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-12 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-24 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-18 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-0 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-27 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-39 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-33 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], offlineReplicas=[3]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 6 (state.change.logger)
[2023-07-09 06:55:38,922] TRACE [Controller id=1 epoch=6] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 6 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 06:55:38,969] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:38,969] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:38,969] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:38,969] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:38,969] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:38,969] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:38,969] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:38,969] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:38,969] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:38,969] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:38,969] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:38,969] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:38,969] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:38,969] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:38,978] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:38,978] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:38,978] ERROR [Controller id=1 epoch=6] Controller 1 epoch 6 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Changed partition __consumer_offsets-30 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), zkVersion=9) (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Changed partition __consumer_offsets-48 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), zkVersion=9) (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Changed partition __consumer_offsets-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), zkVersion=9) (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), zkVersion=9) (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), zkVersion=9) (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), zkVersion=9) (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), zkVersion=9) (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Changed partition __consumer_offsets-36 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), zkVersion=9) (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Changed partition __consumer_offsets-42 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), zkVersion=9) (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), zkVersion=9) (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Changed partition __consumer_offsets-18 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), zkVersion=9) (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), zkVersion=9) (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Changed partition __consumer_offsets-24 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), zkVersion=9) (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Changed partition __consumer_offsets-6 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), zkVersion=9) (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), zkVersion=9) (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Changed partition __consumer_offsets-12 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), zkVersion=9) (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), zkVersion=9) (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-15 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-48 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-45 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-12 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-9 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-42 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-24 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-21 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-18 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-0 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-30 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-27 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-39 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-6 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-3 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-36 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-33 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-15 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-48 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-45 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-12 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-9 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-42 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-24 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-21 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-18 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-0 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-30 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-27 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-39 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-6 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-3 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-36 (state.change.logger)
[2023-07-09 06:55:38,978] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-33 (state.change.logger)
[2023-07-09 06:55:38,985] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 7 (state.change.logger)
[2023-07-09 06:55:38,985] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 7 (state.change.logger)
[2023-07-09 06:55:38,985] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 7 (state.change.logger)
[2023-07-09 06:55:38,985] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 7 (state.change.logger)
[2023-07-09 06:55:38,985] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 7 (state.change.logger)
[2023-07-09 06:55:38,985] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 7 (state.change.logger)
[2023-07-09 06:55:38,985] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 7 (state.change.logger)
[2023-07-09 06:55:38,985] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 7 (state.change.logger)
[2023-07-09 06:55:38,985] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 7 (state.change.logger)
[2023-07-09 06:55:38,985] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 7 (state.change.logger)
[2023-07-09 06:55:38,985] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 7 (state.change.logger)
[2023-07-09 06:55:38,985] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 7 (state.change.logger)
[2023-07-09 06:55:38,985] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 7 (state.change.logger)
[2023-07-09 06:55:38,985] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 7 (state.change.logger)
[2023-07-09 06:55:38,985] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 7 (state.change.logger)
[2023-07-09 06:55:38,985] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 7 (state.change.logger)
[2023-07-09 06:55:38,985] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 7 (state.change.logger)
[2023-07-09 06:55:38,989] TRACE [Controller id=1 epoch=6] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 7 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 06:55:39,289] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], offlineReplicas=[3]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,289] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,289] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,289] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,289] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_other_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,289] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_other_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_other_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=6, leader=-1, leaderEpoch=10, isr=[3], zkVersion=10, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,294] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 0 (state.change.logger)
[2023-07-09 06:55:39,302] TRACE [Controller id=1 epoch=6] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 06:55:39,310] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,310] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,310] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,310] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,310] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,310] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,310] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,310] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,310] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,310] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,311] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,311] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,311] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,311] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,311] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,311] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,311] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,311] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,336] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-follower transition for partition __consumer_offsets-3 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,336] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-follower transition for partition __consumer_offsets-18 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,336] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-follower transition for partition __consumer_offsets-39 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,336] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-follower transition for partition __consumer_offsets-9 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,336] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-follower transition for partition __consumer_offsets-24 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,336] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-follower transition for partition __consumer_offsets-27 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,336] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-follower transition for partition __consumer_offsets-42 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,336] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-follower transition for partition __consumer_offsets-12 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,336] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-follower transition for partition __consumer_offsets-33 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,336] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-follower transition for partition __consumer_offsets-48 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,336] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-follower transition for partition __consumer_offsets-21 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,336] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-follower transition for partition __consumer_offsets-36 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,336] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-follower transition for partition __consumer_offsets-6 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,336] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-follower transition for partition __consumer_offsets-45 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,336] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-follower transition for partition first_topic-0 with leader 1 (state.change.logger)
[2023-07-09 06:55:39,336] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-follower transition for partition __consumer_offsets-15 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,336] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-follower transition for partition __consumer_offsets-30 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,336] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 6 starting the become-follower transition for partition __consumer_offsets-0 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,348] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 6 for partition __consumer_offsets-3 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 06:55:39,348] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 6 for partition __consumer_offsets-18 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 06:55:39,348] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 6 for partition __consumer_offsets-39 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 06:55:39,364] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 6 for partition __consumer_offsets-9 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 06:55:39,364] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 6 for partition __consumer_offsets-24 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 06:55:39,364] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 6 for partition __consumer_offsets-27 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 06:55:39,364] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 6 for partition __consumer_offsets-42 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 06:55:39,364] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 6 for partition __consumer_offsets-12 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 06:55:39,364] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 6 for partition __consumer_offsets-33 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 06:55:39,379] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 6 for partition __consumer_offsets-48 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 06:55:39,384] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 6 for partition __consumer_offsets-21 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 06:55:39,384] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 6 for partition __consumer_offsets-36 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 06:55:39,395] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 6 for partition __consumer_offsets-6 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 06:55:39,398] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 6 for partition __consumer_offsets-45 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 06:55:39,414] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 6 for partition __consumer_offsets-15 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 06:55:39,417] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 6 for partition __consumer_offsets-30 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 06:55:39,417] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 6 for partition __consumer_offsets-0 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 06:55:39,431] TRACE [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 6 with correlation id 1 for partition first_topic-0 with leader 1 (state.change.logger)
[2023-07-09 06:55:39,435] TRACE [Broker id=2] Truncated logs and checkpointed recovery boundaries for partition first_topic-0 as part of become-follower request with correlation id 1 from controller 1 epoch 6 with leader 1 (state.change.logger)
[2023-07-09 06:55:39,476] TRACE [Broker id=2] Started fetcher to new leader as part of become-follower request from controller 1 epoch 6 with correlation id 1 for partition first_topic-0 with leader BrokerEndPoint(id=1, host=localhost:9092) (state.change.logger)
[2023-07-09 06:55:39,476] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-follower transition for partition __consumer_offsets-3 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,476] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-follower transition for partition __consumer_offsets-18 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,476] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-follower transition for partition __consumer_offsets-39 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,476] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-follower transition for partition __consumer_offsets-9 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,476] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-follower transition for partition __consumer_offsets-24 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,476] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-follower transition for partition __consumer_offsets-27 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,476] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-follower transition for partition __consumer_offsets-42 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,476] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-follower transition for partition __consumer_offsets-12 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,476] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-follower transition for partition __consumer_offsets-33 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,476] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-follower transition for partition __consumer_offsets-48 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,476] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-follower transition for partition __consumer_offsets-21 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,476] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-follower transition for partition __consumer_offsets-36 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,476] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-follower transition for partition __consumer_offsets-6 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,476] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-follower transition for partition __consumer_offsets-45 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,476] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-follower transition for partition first_topic-0 with leader 1 (state.change.logger)
[2023-07-09 06:55:39,476] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-follower transition for partition __consumer_offsets-15 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,476] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-follower transition for partition __consumer_offsets-30 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,476] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 6 for the become-follower transition for partition __consumer_offsets-0 with leader -1 (state.change.logger)
[2023-07-09 06:55:39,505] TRACE [Controller id=1 epoch=6] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=15,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=48,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=0,_tagged_fields={}},{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=12,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=42,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=24,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=18,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=30,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=6,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=36,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 1 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], offlineReplicas=[3]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=-1, leaderEpoch=8, isr=[2], zkVersion=8, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 2 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Controller id=1 epoch=6] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 2 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,507] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 06:55:39,521] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-3 (state.change.logger)
[2023-07-09 06:55:39,521] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-18 (state.change.logger)
[2023-07-09 06:55:39,521] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-39 (state.change.logger)
[2023-07-09 06:55:39,521] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-9 (state.change.logger)
[2023-07-09 06:55:39,521] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2023-07-09 06:55:39,521] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-27 (state.change.logger)
[2023-07-09 06:55:39,521] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-42 (state.change.logger)
[2023-07-09 06:55:39,521] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2023-07-09 06:55:39,521] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-33 (state.change.logger)
[2023-07-09 06:55:39,521] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2023-07-09 06:55:39,521] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-21 (state.change.logger)
[2023-07-09 06:55:39,521] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2023-07-09 06:55:39,521] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-6 (state.change.logger)
[2023-07-09 06:55:39,521] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-45 (state.change.logger)
[2023-07-09 06:55:39,521] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-15 (state.change.logger)
[2023-07-09 06:55:39,521] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-30 (state.change.logger)
[2023-07-09 06:55:39,521] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 6 starting the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2023-07-09 06:55:39,557] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 3 for partition __consumer_offsets-3 (last update controller epoch 6) (state.change.logger)
[2023-07-09 06:55:39,571] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 3 for partition __consumer_offsets-18 (last update controller epoch 6) (state.change.logger)
[2023-07-09 06:55:39,575] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 3 for partition __consumer_offsets-39 (last update controller epoch 6) (state.change.logger)
[2023-07-09 06:55:39,585] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 3 for partition __consumer_offsets-9 (last update controller epoch 6) (state.change.logger)
[2023-07-09 06:55:39,596] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 3 for partition __consumer_offsets-24 (last update controller epoch 6) (state.change.logger)
[2023-07-09 06:55:39,602] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 3 for partition __consumer_offsets-27 (last update controller epoch 6) (state.change.logger)
[2023-07-09 06:55:39,607] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 3 for partition __consumer_offsets-42 (last update controller epoch 6) (state.change.logger)
[2023-07-09 06:55:39,618] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 3 for partition __consumer_offsets-12 (last update controller epoch 6) (state.change.logger)
[2023-07-09 06:55:39,618] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 3 for partition __consumer_offsets-33 (last update controller epoch 6) (state.change.logger)
[2023-07-09 06:55:39,632] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 3 for partition __consumer_offsets-48 (last update controller epoch 6) (state.change.logger)
[2023-07-09 06:55:39,632] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 3 for partition __consumer_offsets-21 (last update controller epoch 6) (state.change.logger)
[2023-07-09 06:55:39,655] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 3 for partition __consumer_offsets-36 (last update controller epoch 6) (state.change.logger)
[2023-07-09 06:55:39,664] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 3 for partition __consumer_offsets-6 (last update controller epoch 6) (state.change.logger)
[2023-07-09 06:55:39,685] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 3 for partition __consumer_offsets-45 (last update controller epoch 6) (state.change.logger)
[2023-07-09 06:55:39,685] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 3 for partition __consumer_offsets-15 (last update controller epoch 6) (state.change.logger)
[2023-07-09 06:55:39,695] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 3 for partition __consumer_offsets-30 (last update controller epoch 6) (state.change.logger)
[2023-07-09 06:55:39,711] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 3 for partition __consumer_offsets-0 (last update controller epoch 6) (state.change.logger)
[2023-07-09 06:55:39,711] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-3 (state.change.logger)
[2023-07-09 06:55:39,711] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-18 (state.change.logger)
[2023-07-09 06:55:39,711] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-39 (state.change.logger)
[2023-07-09 06:55:39,711] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-9 (state.change.logger)
[2023-07-09 06:55:39,711] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2023-07-09 06:55:39,711] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-27 (state.change.logger)
[2023-07-09 06:55:39,711] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-42 (state.change.logger)
[2023-07-09 06:55:39,711] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2023-07-09 06:55:39,711] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-33 (state.change.logger)
[2023-07-09 06:55:39,711] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2023-07-09 06:55:39,711] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-21 (state.change.logger)
[2023-07-09 06:55:39,711] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2023-07-09 06:55:39,711] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-6 (state.change.logger)
[2023-07-09 06:55:39,711] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-45 (state.change.logger)
[2023-07-09 06:55:39,711] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-15 (state.change.logger)
[2023-07-09 06:55:39,711] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-30 (state.change.logger)
[2023-07-09 06:55:39,711] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 6 for the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2023-07-09 06:55:39,727] TRACE [Controller id=1 epoch=6] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=15,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=48,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=12,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=42,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=24,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=18,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=30,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=6,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=36,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 3 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 06:55:39,727] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:39,727] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:39,727] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:39,727] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:39,727] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:39,727] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:39,727] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:39,727] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:39,727] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:39,727] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:39,727] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:39,727] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:39,727] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:39,727] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:39,727] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:39,727] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:39,727] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 4 (state.change.logger)
[2023-07-09 06:55:39,727] TRACE [Controller id=1 epoch=6] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 4 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 06:55:47,026] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1, 2], zkVersion=9, replicas=[3, 2, 1], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition first_topic-0 (state.change.logger)
[2023-07-09 06:55:47,029] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1, 2], zkVersion=9, replicas=[3, 2, 1], offlineReplicas=[3]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 8 (state.change.logger)
[2023-07-09 06:55:47,029] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1, 2], zkVersion=9, replicas=[3, 2, 1], offlineReplicas=[3]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 5 (state.change.logger)
[2023-07-09 06:55:47,032] TRACE [Controller id=1 epoch=6] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 8 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 06:55:47,032] TRACE [Controller id=1 epoch=6] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 5 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:15:11,135] TRACE [Controller id=1 epoch=6] Changed partition topicA-0 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:15:11,140] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition topicA-0 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:15:11,160] TRACE [Controller id=1 epoch=6] Changed partition topicA-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:15:11,160] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition topicA-0 (state.change.logger)
[2023-07-09 07:15:11,160] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition topicA-0 (state.change.logger)
[2023-07-09 07:15:11,160] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition topicA-0 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:15:11,179] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 9 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 07:15:11,173] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition topicA-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 6 (state.change.logger)
[2023-07-09 07:15:11,182] TRACE [Controller id=1 epoch=6] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 6 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:15:11,182] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 6 starting the become-leader transition for partition topicA-0 (state.change.logger)
[2023-07-09 07:15:11,256] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 9 for partition topicA-0 (last update controller epoch 6) (state.change.logger)
[2023-07-09 07:15:11,256] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 6 for the become-leader transition for partition topicA-0 (state.change.logger)
[2023-07-09 07:15:11,259] TRACE [Controller id=1 epoch=6] Received response {error_code=0,partition_errors=[{topic_name=topicA,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 9 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:15:11,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition topicA-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 10 (state.change.logger)
[2023-07-09 07:15:11,260] TRACE [Controller id=1 epoch=6] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 10 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:27:12,997] TRACE [Controller id=1 epoch=6] Changed partition topic01-0 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:27:12,997] TRACE [Controller id=1 epoch=6] Changed partition topic01-1 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:27:12,997] TRACE [Controller id=1 epoch=6] Changed partition topic01-2 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:27:12,997] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition topic01-0 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:27:12,997] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition topic01-2 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:27:12,997] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition topic01-1 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:27:13,018] TRACE [Controller id=1 epoch=6] Changed partition topic01-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:27:13,018] TRACE [Controller id=1 epoch=6] Changed partition topic01-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:27:13,018] TRACE [Controller id=1 epoch=6] Changed partition topic01-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:27:13,018] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition topic01-2 (state.change.logger)
[2023-07-09 07:27:13,018] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition topic01-0 (state.change.logger)
[2023-07-09 07:27:13,018] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition topic01-1 (state.change.logger)
[2023-07-09 07:27:13,018] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition topic01-1 (state.change.logger)
[2023-07-09 07:27:13,018] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition topic01-0 (state.change.logger)
[2023-07-09 07:27:13,018] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition topic01-2 (state.change.logger)
[2023-07-09 07:27:13,018] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition topic01-0 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:27:13,018] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition topic01-2 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:27:13,018] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition topic01-1 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:27:13,031] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 07:27:13,031] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 11 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 07:27:13,031] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 11 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 07:27:13,031] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 11 from controller 1 epoch 6 starting the become-leader transition for partition topic01-0 (state.change.logger)
[2023-07-09 07:27:13,031] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 11 from controller 1 epoch 6 starting the become-leader transition for partition topic01-2 (state.change.logger)
[2023-07-09 07:27:13,031] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 6 starting the become-leader transition for partition topic01-1 (state.change.logger)
[2023-07-09 07:27:13,084] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 11 for partition topic01-0 (last update controller epoch 6) (state.change.logger)
[2023-07-09 07:27:13,092] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 7 for partition topic01-1 (last update controller epoch 6) (state.change.logger)
[2023-07-09 07:27:13,092] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 6 for the become-leader transition for partition topic01-1 (state.change.logger)
[2023-07-09 07:27:13,096] TRACE [Controller id=1 epoch=6] Received response {error_code=0,partition_errors=[{topic_name=topic01,partition_index=1,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 7 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:27:13,098] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition topic01-1 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 8 (state.change.logger)
[2023-07-09 07:27:13,098] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition topic01-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 8 (state.change.logger)
[2023-07-09 07:27:13,098] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition topic01-2 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 8 (state.change.logger)
[2023-07-09 07:27:13,098] TRACE [Controller id=1 epoch=6] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 8 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:27:13,116] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 11 for partition topic01-2 (last update controller epoch 6) (state.change.logger)
[2023-07-09 07:27:13,116] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 11 from controller 1 epoch 6 for the become-leader transition for partition topic01-0 (state.change.logger)
[2023-07-09 07:27:13,116] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 11 from controller 1 epoch 6 for the become-leader transition for partition topic01-2 (state.change.logger)
[2023-07-09 07:27:13,118] TRACE [Controller id=1 epoch=6] Received response {error_code=0,partition_errors=[{topic_name=topic01,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=topic01,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 11 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:27:13,118] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition topic01-1 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 12 (state.change.logger)
[2023-07-09 07:27:13,118] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition topic01-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 12 (state.change.logger)
[2023-07-09 07:27:13,118] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition topic01-2 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 12 (state.change.logger)
[2023-07-09 07:27:13,129] TRACE [Controller id=1 epoch=6] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 12 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:33:39,079] TRACE [Controller id=1 epoch=6] Changed partition topic02-0 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:33:39,079] TRACE [Controller id=1 epoch=6] Changed partition topic02-1 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:33:39,079] TRACE [Controller id=1 epoch=6] Changed partition topic02-2 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:33:39,079] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition topic02-0 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:33:39,079] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition topic02-2 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:33:39,079] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition topic02-1 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:33:39,095] TRACE [Controller id=1 epoch=6] Changed partition topic02-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:33:39,095] TRACE [Controller id=1 epoch=6] Changed partition topic02-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:33:39,095] TRACE [Controller id=1 epoch=6] Changed partition topic02-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:33:39,111] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition topic02-2 (state.change.logger)
[2023-07-09 07:33:39,111] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition topic02-0 (state.change.logger)
[2023-07-09 07:33:39,111] TRACE [Controller id=1 epoch=6] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition topic02-1 (state.change.logger)
[2023-07-09 07:33:39,111] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition topic02-2 (state.change.logger)
[2023-07-09 07:33:39,111] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition topic02-1 (state.change.logger)
[2023-07-09 07:33:39,111] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition topic02-0 (state.change.logger)
[2023-07-09 07:33:39,111] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition topic02-0 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:33:39,111] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition topic02-2 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:33:39,111] TRACE [Controller id=1 epoch=6] Changed state of replica 2 for partition topic02-1 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:33:39,111] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 13 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 07:33:39,111] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 13 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 07:33:39,111] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 9 from controller 1 epoch 6 (state.change.logger)
[2023-07-09 07:33:39,111] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 13 from controller 1 epoch 6 starting the become-leader transition for partition topic02-0 (state.change.logger)
[2023-07-09 07:33:39,111] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 9 from controller 1 epoch 6 starting the become-leader transition for partition topic02-1 (state.change.logger)
[2023-07-09 07:33:39,111] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 13 from controller 1 epoch 6 starting the become-leader transition for partition topic02-2 (state.change.logger)
[2023-07-09 07:33:39,165] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 9 for partition topic02-1 (last update controller epoch 6) (state.change.logger)
[2023-07-09 07:33:39,165] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 9 from controller 1 epoch 6 for the become-leader transition for partition topic02-1 (state.change.logger)
[2023-07-09 07:33:39,165] TRACE [Controller id=1 epoch=6] Received response {error_code=0,partition_errors=[{topic_name=topic02,partition_index=1,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 9 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:33:39,165] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 13 for partition topic02-0 (last update controller epoch 6) (state.change.logger)
[2023-07-09 07:33:39,165] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition topic02-2 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 10 (state.change.logger)
[2023-07-09 07:33:39,165] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition topic02-1 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 10 (state.change.logger)
[2023-07-09 07:33:39,165] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition topic02-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 10 (state.change.logger)
[2023-07-09 07:33:39,165] TRACE [Controller id=1 epoch=6] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 10 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:33:39,190] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 6 with correlation id 13 for partition topic02-2 (last update controller epoch 6) (state.change.logger)
[2023-07-09 07:33:39,190] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 13 from controller 1 epoch 6 for the become-leader transition for partition topic02-0 (state.change.logger)
[2023-07-09 07:33:39,190] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 13 from controller 1 epoch 6 for the become-leader transition for partition topic02-2 (state.change.logger)
[2023-07-09 07:33:39,190] TRACE [Controller id=1 epoch=6] Received response {error_code=0,partition_errors=[{topic_name=topic02,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=topic02,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 13 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:33:39,190] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition topic02-2 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 14 (state.change.logger)
[2023-07-09 07:33:39,190] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition topic02-1 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 14 (state.change.logger)
[2023-07-09 07:33:39,190] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=6, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition topic02-0 in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 14 (state.change.logger)
[2023-07-09 07:33:39,205] TRACE [Controller id=1 epoch=6] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 14 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:38:59,654] TRACE [Controller id=1 epoch=6] Changed partition my_topic-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:38:59,654] TRACE [Controller id=1 epoch=6] Changed partition my_topic-1 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:38:59,654] TRACE [Controller id=1 epoch=6] Changed partition my_topic-2 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:38:59,669] TRACE [Controller id=1 epoch=6] Changed partition my_topic-0 state from OfflinePartition to NonExistentPartition (state.change.logger)
[2023-07-09 07:38:59,669] TRACE [Controller id=1 epoch=6] Changed partition my_topic-1 state from OfflinePartition to NonExistentPartition (state.change.logger)
[2023-07-09 07:38:59,669] TRACE [Controller id=1 epoch=6] Changed partition my_topic-2 state from OfflinePartition to NonExistentPartition (state.change.logger)
[2023-07-09 07:38:59,669] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=5, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:38:59,669] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=5, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:38:59,669] TRACE [Controller id=1 epoch=6] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=5, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:38:59,669] TRACE [Broker id=1] Deleted partition my_topic-2 from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 15 (state.change.logger)
[2023-07-09 07:38:59,669] TRACE [Broker id=1] Deleted partition my_topic-1 from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 15 (state.change.logger)
[2023-07-09 07:38:59,669] TRACE [Broker id=1] Deleted partition my_topic-0 from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 15 (state.change.logger)
[2023-07-09 07:38:59,669] TRACE [Broker id=2] Deleted partition my_topic-2 from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 11 (state.change.logger)
[2023-07-09 07:38:59,669] TRACE [Broker id=2] Deleted partition my_topic-1 from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 11 (state.change.logger)
[2023-07-09 07:38:59,669] TRACE [Broker id=2] Deleted partition my_topic-0 from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 6 with correlation id 11 (state.change.logger)
[2023-07-09 07:38:59,669] TRACE [Controller id=1 epoch=6] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 11 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:38:59,685] TRACE [Controller id=1 epoch=6] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 15 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:38:59,685] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition my_topic-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:38:59,685] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition my_topic-1 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:38:59,685] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition my_topic-2 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:38:59,685] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition my_topic-0 from OfflineReplica to ReplicaDeletionStarted (state.change.logger)
[2023-07-09 07:38:59,685] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition my_topic-1 from OfflineReplica to ReplicaDeletionStarted (state.change.logger)
[2023-07-09 07:38:59,685] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition my_topic-2 from OfflineReplica to ReplicaDeletionStarted (state.change.logger)
[2023-07-09 07:38:59,685] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:38:59,685] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:38:59,685] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:38:59,685] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:38:59,685] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:38:59,685] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:38:59,700] TRACE [Controller id=1 epoch=6] Received response {error_code=0,partition_errors=[{topic_name=my_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request STOP_REPLICA with correlation id 16 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:38:59,700] TRACE [Broker id=1] Handling stop replica (delete=true) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:38:59,732] ERROR [Broker id=1] Ignoring stop replica (delete=true) for partition my_topic-0 due to storage exception (state.change.logger)
org.apache.kafka.common.errors.KafkaStorageException: Error while renaming dir for my_topic-0 in log dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1
Caused by: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-0 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-0.5c38ecfde538491cbe9de75f4c515931-delete
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.Log.$anonfun$renameDir$2(Log.scala:965)
	at kafka.log.Log.renameDir(Log.scala:2318)
	at kafka.log.LogManager.asyncDelete(LogManager.scala:916)
	at kafka.cluster.Partition.$anonfun$delete$1(Partition.scala:461)
	at kafka.cluster.Partition.delete(Partition.scala:452)
	at kafka.server.ReplicaManager.stopReplica(ReplicaManager.scala:338)
	at kafka.server.ReplicaManager.$anonfun$stopReplicas$2(ReplicaManager.scala:382)
	at scala.collection.immutable.Set$Set3.foreach(Set.scala:206)
	at kafka.server.ReplicaManager.stopReplicas(ReplicaManager.scala:380)
	at kafka.server.KafkaApis.handleStopReplicaRequest(KafkaApis.scala:239)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:133)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.base/java.lang.Thread.run(Thread.java:834)
	Suppressed: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-0 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-0.5c38ecfde538491cbe9de75f4c515931-delete
		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 13 more
[2023-07-09 07:38:59,732] TRACE [Broker id=1] Handling stop replica (delete=true) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:38:59,748] ERROR [Broker id=1] Ignoring stop replica (delete=true) for partition my_topic-1 due to storage exception (state.change.logger)
org.apache.kafka.common.errors.KafkaStorageException: Error while renaming dir for my_topic-1 in log dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1
Caused by: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1.0b36426077ec4c9a936f4856c6ff8aa7-delete
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.Log.$anonfun$renameDir$2(Log.scala:965)
	at kafka.log.Log.renameDir(Log.scala:2318)
	at kafka.log.LogManager.asyncDelete(LogManager.scala:916)
	at kafka.cluster.Partition.$anonfun$delete$1(Partition.scala:461)
	at kafka.cluster.Partition.delete(Partition.scala:452)
	at kafka.server.ReplicaManager.stopReplica(ReplicaManager.scala:338)
	at kafka.server.ReplicaManager.$anonfun$stopReplicas$2(ReplicaManager.scala:382)
	at scala.collection.immutable.Set$Set3.foreach(Set.scala:206)
	at kafka.server.ReplicaManager.stopReplicas(ReplicaManager.scala:380)
	at kafka.server.KafkaApis.handleStopReplicaRequest(KafkaApis.scala:239)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:133)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.base/java.lang.Thread.run(Thread.java:834)
	Suppressed: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1.0b36426077ec4c9a936f4856c6ff8aa7-delete
		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 13 more
[2023-07-09 07:38:59,748] TRACE [Broker id=1] Handling stop replica (delete=true) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:38:59,763] ERROR [Broker id=1] Ignoring stop replica (delete=true) for partition my_topic-2 due to storage exception (state.change.logger)
org.apache.kafka.common.errors.KafkaStorageException: Error while renaming dir for my_topic-2 in log dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1
Caused by: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-2 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-2.6e5d311e20f34c4f800cc4f6c893106d-delete
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.Log.$anonfun$renameDir$2(Log.scala:965)
	at kafka.log.Log.renameDir(Log.scala:2318)
	at kafka.log.LogManager.asyncDelete(LogManager.scala:916)
	at kafka.cluster.Partition.$anonfun$delete$1(Partition.scala:461)
	at kafka.cluster.Partition.delete(Partition.scala:452)
	at kafka.server.ReplicaManager.stopReplica(ReplicaManager.scala:338)
	at kafka.server.ReplicaManager.$anonfun$stopReplicas$2(ReplicaManager.scala:382)
	at scala.collection.immutable.Set$Set3.foreach(Set.scala:206)
	at kafka.server.ReplicaManager.stopReplicas(ReplicaManager.scala:380)
	at kafka.server.KafkaApis.handleStopReplicaRequest(KafkaApis.scala:239)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:133)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.base/java.lang.Thread.run(Thread.java:834)
	Suppressed: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-2 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-2.6e5d311e20f34c4f800cc4f6c893106d-delete
		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 13 more
[2023-07-09 07:38:59,763] TRACE [Controller id=1 epoch=6] Received response {error_code=0,partition_errors=[{topic_name=my_topic,partition_index=0,error_code=56,_tagged_fields={}},{topic_name=my_topic,partition_index=1,error_code=56,_tagged_fields={}},{topic_name=my_topic,partition_index=2,error_code=56,_tagged_fields={}}],_tagged_fields={}} for request STOP_REPLICA with correlation id 17 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:38:59,763] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition my_topic-0 from ReplicaDeletionStarted to ReplicaDeletionIneligible (state.change.logger)
[2023-07-09 07:38:59,763] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition my_topic-1 from ReplicaDeletionStarted to ReplicaDeletionIneligible (state.change.logger)
[2023-07-09 07:38:59,763] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition my_topic-2 from ReplicaDeletionStarted to ReplicaDeletionIneligible (state.change.logger)
[2023-07-09 07:38:59,795] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition my_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:38:59,795] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition my_topic-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:38:59,795] TRACE [Controller id=1 epoch=6] Changed state of replica 1 for partition my_topic-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:38:59,795] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:38:59,795] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:38:59,795] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:38:59,795] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:38:59,795] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:38:59,795] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:38:59,795] TRACE [Controller id=1 epoch=6] Received response {error_code=0,partition_errors=[{topic_name=my_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request STOP_REPLICA with correlation id 18 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:39:18,489] TRACE [Controller id=2 epoch=7] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition __consumer_offsets-18 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition __consumer_offsets-48 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition __consumer_offsets-6 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition __consumer_offsets-30 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition __consumer_offsets-42 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition __consumer_offsets-15 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition __consumer_offsets-24 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition first_topic-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition __consumer_offsets-9 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition __consumer_offsets-45 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition __consumer_offsets-36 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition __consumer_offsets-33 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition __consumer_offsets-21 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition __consumer_offsets-12 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition __consumer_offsets-3 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition __consumer_offsets-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition topic01-1 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition __consumer_offsets-27 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition __consumer_offsets-39 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Changed state of replica 2 for partition topic02-1 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-15 (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-48 (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-45 (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1, 2], zkVersion=9, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition first_topic-0 (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-12 (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-9 (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-42 (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition topic01-1 (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition topic02-1 (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-24 (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-21 (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-18 (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-0 (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-30 (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-27 (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-39 (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-6 (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-3 (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-36 (state.change.logger)
[2023-07-09 07:39:18,518] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-33 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-15 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-48 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-45 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1, 2], zkVersion=9, replicas=[3, 2, 1], offlineReplicas=[3, 1]) to brokers HashSet(2) for partition first_topic-0 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-12 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-9 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-42 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition topic01-1 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition topic02-1 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-24 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-21 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-18 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-0 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-30 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-27 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-39 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-6 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-3 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-36 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-33 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1, 2], zkVersion=9, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition first_topic-0 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition topic01-1 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition topic02-1 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition __consumer_offsets-15 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition __consumer_offsets-48 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition __consumer_offsets-45 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition __consumer_offsets-12 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition __consumer_offsets-9 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition __consumer_offsets-42 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition __consumer_offsets-24 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition __consumer_offsets-21 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition __consumer_offsets-18 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition __consumer_offsets-0 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition __consumer_offsets-30 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition __consumer_offsets-27 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition __consumer_offsets-39 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition __consumer_offsets-6 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition __consumer_offsets-3 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition __consumer_offsets-36 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 7 for partition __consumer_offsets-33 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=15,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=48,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=11,_tagged_fields={}},{topic_name=first_topic,partition_index=0,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=12,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=42,error_code=11,_tagged_fields={}},{topic_name=topic01,partition_index=1,error_code=11,_tagged_fields={}},{topic_name=topic02,partition_index=1,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=24,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=18,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=0,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=30,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=6,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=36,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=11,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 1 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1, 2], zkVersion=9, replicas=[3, 2, 1], offlineReplicas=[3, 1]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition topic01-1 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition topic02-1 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:39:18,533] TRACE [Controller id=2 epoch=7] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 2 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_other_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition first_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-17 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-11 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition topic01-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition topic01-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_other_topic-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-32 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-8 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-35 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_other_topic-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-41 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-23 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-47 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition topicA-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition topic02-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-38 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-14 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-20 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-44 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-5 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-26 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition topic02-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,596] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-29 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Changed state of replica 3 for partition __consumer_offsets-22 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Changed state of replica 3 for partition __consumer_offsets-4 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Changed state of replica 3 for partition __consumer_offsets-25 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Changed state of replica 3 for partition __consumer_offsets-49 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Changed state of replica 3 for partition __consumer_offsets-31 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Changed state of replica 3 for partition __consumer_offsets-37 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Changed state of replica 3 for partition first_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Changed state of replica 3 for partition __consumer_offsets-19 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Changed state of replica 3 for partition __consumer_offsets-13 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Changed state of replica 3 for partition __consumer_offsets-43 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Changed state of replica 3 for partition __consumer_offsets-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Changed state of replica 3 for partition __consumer_offsets-34 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Changed state of replica 3 for partition __consumer_offsets-7 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Changed state of replica 3 for partition __consumer_offsets-46 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Changed state of replica 3 for partition __consumer_offsets-16 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Changed state of replica 3 for partition __consumer_offsets-28 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Changed state of replica 3 for partition __consumer_offsets-10 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Changed state of replica 3 for partition __consumer_offsets-40 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=6, isr=[2], zkVersion=10, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition first_topic-0 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-13 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-46 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=6, isr=[2], zkVersion=10, replicas=[3, 2, 1], offlineReplicas=[3, 1]) to brokers HashSet(2) for partition first_topic-0 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-19 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-28 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-7 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-40 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition my_other_topic-1 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-1 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-34 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=6, isr=[2], zkVersion=10, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-16 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-43 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-follower transition for partition first_topic-0 with leader -1 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:39:18,628] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 3 from controller 2 epoch 7 for partition first_topic-0 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-10 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition topic02-2 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition topic01-0 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-follower transition for partition first_topic-0 with leader -1 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition topic02-0 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-22 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-49 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-31 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition topicA-0 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-25 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition topic01-2 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition my_other_topic-0 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-37 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition my_other_topic-2 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Received response {error_code=0,partition_errors=[{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 3 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition topicA-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=6, isr=[2], zkVersion=10, replicas=[3, 2, 1], offlineReplicas=[3, 1]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition topic01-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition topic01-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition topic02-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition topic02-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition my_other_topic-1 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition my_other_topic-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition my_other_topic-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:39:18,628] TRACE [Controller id=2 epoch=7] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 4 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition topic01-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition topic01-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition my_other_topic-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my_other_topic-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition my_other_topic-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my_other_topic-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition topicA-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition topicA-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,706] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition my_other_topic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my_other_topic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition topic02-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition topic02-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition topic01-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition topic01-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition topic02-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition topic02-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1795)
	at kafka.controller.KafkaController.process(KafkaController.scala:1840)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:39:18,722] TRACE [Controller id=2 epoch=7] Changed partition first_topic-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=7, isr=List(2), zkVersion=11) (state.change.logger)
[2023-07-09 07:39:18,722] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition first_topic-0 (state.change.logger)
[2023-07-09 07:39:18,722] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[3, 2, 1], offlineReplicas=[3, 1]) to brokers HashSet(2) for partition first_topic-0 (state.change.logger)
[2023-07-09 07:39:18,722] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:39:18,722] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 7 starting the become-leader transition for partition first_topic-0 (state.change.logger)
[2023-07-09 07:39:18,737] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 5 for partition first_topic-0 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:39:18,737] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 7 for the become-leader transition for partition first_topic-0 (state.change.logger)
[2023-07-09 07:39:18,737] TRACE [Controller id=2 epoch=7] Received response {error_code=0,partition_errors=[{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 5 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:39:18,737] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[3, 2, 1], offlineReplicas=[3, 1]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 6 (state.change.logger)
[2023-07-09 07:39:18,737] TRACE [Controller id=2 epoch=7] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 6 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-13 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-46 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-9 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 7 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-42 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-21 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-30 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_other_topic-1 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-1 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-34 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-16 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-45 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-12 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topic01-0 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-24 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topic02-0 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-49 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-0 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-25 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-37 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_other_topic-2 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-4 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-33 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=7, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-15 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-48 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[3, 2, 1], offlineReplicas=[3]) to brokers HashSet(1) for partition first_topic-0 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1) for partition topic01-1 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1) for partition topic02-1 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-19 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-28 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-7 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-40 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=7, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-3 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-36 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-43 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-10 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topic02-2 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-22 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-18 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-31 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topicA-0 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-27 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topic01-2 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-39 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=7, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_other_topic-0 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-6 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-32 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-14 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-5 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-44 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition first_topic-0 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition topic02-0 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-35 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-20 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-8 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-2 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-29 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-11 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition topic01-2 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-47 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition topic01-0 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition topic02-2 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_other_topic-2 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-41 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-38 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,422] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_other_topic-1 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-23 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition topicA-0 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_other_topic-0 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-2 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-17 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-26 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-1 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-0 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition first_topic-0 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_topic-1 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_other_topic-1 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic02-2 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic01-0 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic02-0 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topicA-0 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic01-2 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_topic-0 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_other_topic-0 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_other_topic-2 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_topic-2 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[3, 2, 1], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition first_topic-0 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=7, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_other_topic-1 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition topic02-2 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition topic01-0 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition topic02-0 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition topicA-0 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition topic01-2 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=7, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_other_topic-0 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_other_topic-2 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=7, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition topicA-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[3, 2, 1], offlineReplicas=[3]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition topic01-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition topic01-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition topic02-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition topic02-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Deleted partition my_topic-1 from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Deleted partition my_topic-0 from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Deleted partition my_topic-2 from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition my_other_topic-1 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition my_other_topic-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition my_other_topic-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 8 (state.change.logger)
[2023-07-09 07:41:07,438] TRACE [Controller id=2 epoch=7] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 8 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:41:07,485] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:07,485] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:07,485] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:07,485] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:07,485] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:07,485] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:07,485] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:07,485] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:07,485] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:07,485] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:07,485] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:07,485] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:07,485] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:07,485] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:07,485] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:07,485] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:07,485] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-17 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition topic01-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition my_other_topic-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-8 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-35 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition my_other_topic-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-41 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-23 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-47 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition topicA-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition my_other_topic-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition topic02-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-38 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-11 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition topic01-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-14 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-20 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-44 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-5 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-26 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition topic02-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-29 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-32 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_other_topic-1 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic02-2 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic01-0 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic02-0 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topicA-0 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic01-2 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_other_topic-0 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_other_topic-2 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_other_topic-1 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:41:07,485] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:41:07,500] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:41:07,500] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition topic02-2 (state.change.logger)
[2023-07-09 07:41:07,500] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition topic01-0 (state.change.logger)
[2023-07-09 07:41:07,500] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition topic02-0 (state.change.logger)
[2023-07-09 07:41:07,500] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition topicA-0 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition topic01-2 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_other_topic-0 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_other_topic-2 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition topicA-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition topic01-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition topic01-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition topic02-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition topic02-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition my_other_topic-1 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition my_other_topic-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition my_other_topic-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 9 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Controller id=2 epoch=7] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 9 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Controller id=2 epoch=7] Changed partition my_topic-0 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Controller id=2 epoch=7] Changed partition my_topic-1 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Controller id=2 epoch=7] Changed partition my_topic-2 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Controller id=2 epoch=7] Changed partition my_topic-0 state from OfflinePartition to NonExistentPartition (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Controller id=2 epoch=7] Changed partition my_topic-1 state from OfflinePartition to NonExistentPartition (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Controller id=2 epoch=7] Changed partition my_topic-2 state from OfflinePartition to NonExistentPartition (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=7, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=7, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=7, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Deleted partition my_topic-2 from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 10 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Deleted partition my_topic-1 from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 10 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Broker id=2] Deleted partition my_topic-0 from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 10 (state.change.logger)
[2023-07-09 07:41:07,501] TRACE [Controller id=2 epoch=7] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 10 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:41:07,517] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:07,517] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-1 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:07,517] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-2 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:07,517] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-0 from OfflineReplica to ReplicaDeletionStarted (state.change.logger)
[2023-07-09 07:41:07,517] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-1 from OfflineReplica to ReplicaDeletionStarted (state.change.logger)
[2023-07-09 07:41:07,517] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-2 from OfflineReplica to ReplicaDeletionStarted (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition topicA-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[3, 2, 1], offlineReplicas=[3]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition topic01-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition topic01-1 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition topic01-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Deleted partition my_topic-2 from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Deleted partition my_topic-1 from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Deleted partition my_topic-0 from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition topic02-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=1, controllerEpoch=6, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition topic02-1 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition topic02-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition my_other_topic-1 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition my_other_topic-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition my_other_topic-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,018] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=7, leader=-1, leaderEpoch=11, isr=[3], zkVersion=11, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=6, leader=2, leaderEpoch=9, isr=[2], zkVersion=9, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 0 (state.change.logger)
[2023-07-09 07:41:08,034] TRACE [Controller id=2 epoch=7] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:41:08,050] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,050] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,065] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition __consumer_offsets-41 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition topic02-0 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition __consumer_offsets-29 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition my_other_topic-1 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition __consumer_offsets-44 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition __consumer_offsets-14 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition topicA-0 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition __consumer_offsets-23 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition __consumer_offsets-38 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition topic01-0 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition __consumer_offsets-8 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition __consumer_offsets-11 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition __consumer_offsets-26 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition first_topic-0 with leader 2 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition my_other_topic-0 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition my_topic-0 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition __consumer_offsets-35 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition __consumer_offsets-5 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition __consumer_offsets-20 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition topic01-2 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition my_topic-1 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition topic02-2 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition __consumer_offsets-2 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition my_topic-2 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition my_other_topic-2 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition __consumer_offsets-47 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition __consumer_offsets-17 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,128] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 7 starting the become-follower transition for partition __consumer_offsets-32 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,144] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition __consumer_offsets-41 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,159] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition topic02-0 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,159] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition __consumer_offsets-29 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,159] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition my_other_topic-1 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,159] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition __consumer_offsets-44 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,175] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition __consumer_offsets-14 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,175] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition topicA-0 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,175] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition __consumer_offsets-23 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,175] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition __consumer_offsets-38 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,191] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition topic01-0 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,191] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition __consumer_offsets-8 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,191] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition __consumer_offsets-11 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,191] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition __consumer_offsets-26 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,206] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition my_other_topic-0 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,219] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition my_topic-0 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,222] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition __consumer_offsets-35 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,222] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition __consumer_offsets-5 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,222] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition __consumer_offsets-20 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,222] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition topic01-2 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,238] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition my_topic-1 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,238] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition topic02-2 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,238] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition __consumer_offsets-2 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,254] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition my_topic-2 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,254] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition my_other_topic-2 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,254] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition __consumer_offsets-47 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,254] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition __consumer_offsets-17 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,269] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 7 for partition __consumer_offsets-32 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:41:08,269] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 2 epoch 7 with correlation id 1 for partition first_topic-0 with leader 2 (state.change.logger)
[2023-07-09 07:41:08,269] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition first_topic-0 as part of become-follower request with correlation id 1 from controller 2 epoch 7 with leader 2 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 2 epoch 7 with correlation id 1 for partition first_topic-0 with leader BrokerEndPoint(id=2, host=localhost:9093) (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition __consumer_offsets-41 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition topic02-0 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition __consumer_offsets-29 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition my_other_topic-1 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition __consumer_offsets-44 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition __consumer_offsets-14 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition topicA-0 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition __consumer_offsets-23 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition __consumer_offsets-38 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition topic01-0 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition __consumer_offsets-8 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition __consumer_offsets-11 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition __consumer_offsets-26 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition first_topic-0 with leader 2 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition my_other_topic-0 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition my_topic-0 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition __consumer_offsets-35 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition __consumer_offsets-5 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition __consumer_offsets-20 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition topic01-2 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition my_topic-1 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition topic02-2 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition __consumer_offsets-2 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition my_topic-2 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition my_other_topic-2 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition __consumer_offsets-47 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition __consumer_offsets-17 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,332] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 7 for the become-follower transition for partition __consumer_offsets-32 with leader -1 (state.change.logger)
[2023-07-09 07:41:08,348] TRACE [Controller id=2 epoch=7] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=38,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=topic02,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=topic01,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=topic02,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=0,_tagged_fields={}},{topic_name=topicA,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=topic01,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 1 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition topicA-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[3, 2, 1], offlineReplicas=[3]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition topic01-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition topic01-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition topic02-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition topic02-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Deleted partition my_topic-1 from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Deleted partition my_topic-0 from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Deleted partition my_topic-2 from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition my_other_topic-1 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition my_other_topic-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition my_other_topic-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Controller id=2 epoch=7] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 2 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition topic02-0 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition my_other_topic-1 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition topicA-0 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition topic01-0 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition my_other_topic-0 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition topic01-2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition topic02-2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition my_other_topic-2 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:41:08,363] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 7 starting the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:41:08,410] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition __consumer_offsets-41 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,419] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition topic02-0 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,426] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition __consumer_offsets-29 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,426] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition my_other_topic-1 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,442] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition __consumer_offsets-44 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,442] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition __consumer_offsets-14 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,458] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition topicA-0 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,458] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition __consumer_offsets-23 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,458] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition __consumer_offsets-38 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,473] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition topic01-0 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,473] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition __consumer_offsets-8 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,489] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition __consumer_offsets-11 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,489] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition __consumer_offsets-26 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,505] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition my_other_topic-0 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,505] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition __consumer_offsets-35 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,521] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition __consumer_offsets-5 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,521] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition __consumer_offsets-20 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,536] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition topic01-2 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,536] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition topic02-2 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,552] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition __consumer_offsets-2 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,552] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition my_other_topic-2 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,568] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition __consumer_offsets-47 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,568] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition __consumer_offsets-17 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,568] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 2 epoch 7 with correlation id 3 for partition __consumer_offsets-32 (last update controller epoch 7) (state.change.logger)
[2023-07-09 07:41:08,568] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:41:08,568] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition topic02-0 (state.change.logger)
[2023-07-09 07:41:08,568] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:41:08,568] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition my_other_topic-1 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition topicA-0 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition topic01-0 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition my_other_topic-0 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition topic01-2 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition topic02-2 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition my_other_topic-2 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 7 for the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:41:08,583] TRACE [Controller id=2 epoch=7] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=38,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=topic02,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=topic01,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=topic02,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=0,_tagged_fields={}},{topic_name=topicA,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=topic01,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 3 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition topicA-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition topic01-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition topic01-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition topic02-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition topic02-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition my_other_topic-1 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition my_other_topic-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition my_other_topic-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 4 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Controller id=2 epoch=7] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 4 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Deleted partition my_topic-2 from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 5 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Deleted partition my_topic-1 from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 5 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Broker id=1] Deleted partition my_topic-0 from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 5 (state.change.logger)
[2023-07-09 07:41:08,599] TRACE [Controller id=2 epoch=7] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 5 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:41:08,614] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:41:08,614] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:41:08,614] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:41:08,614] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:41:08,614] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:41:08,614] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:41:08,620] TRACE [Controller id=2 epoch=7] Received response {error_code=0,partition_errors=[{topic_name=my_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request STOP_REPLICA with correlation id 6 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:41:08,620] TRACE [Broker id=1] Handling stop replica (delete=true) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:41:08,662] ERROR [Broker id=1] Ignoring stop replica (delete=true) for partition my_topic-0 due to storage exception (state.change.logger)
org.apache.kafka.common.errors.KafkaStorageException: Error while renaming dir for my_topic-0 in log dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1
Caused by: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-0 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-0.e8f93fe026f24da09a7836364235e675-delete
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.Log.$anonfun$renameDir$2(Log.scala:965)
	at kafka.log.Log.renameDir(Log.scala:2318)
	at kafka.log.LogManager.asyncDelete(LogManager.scala:916)
	at kafka.cluster.Partition.$anonfun$delete$1(Partition.scala:461)
	at kafka.cluster.Partition.delete(Partition.scala:452)
	at kafka.server.ReplicaManager.stopReplica(ReplicaManager.scala:338)
	at kafka.server.ReplicaManager.$anonfun$stopReplicas$2(ReplicaManager.scala:382)
	at scala.collection.immutable.Set$Set3.foreach(Set.scala:206)
	at kafka.server.ReplicaManager.stopReplicas(ReplicaManager.scala:380)
	at kafka.server.KafkaApis.handleStopReplicaRequest(KafkaApis.scala:239)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:133)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.base/java.lang.Thread.run(Thread.java:834)
	Suppressed: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-0 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-0.e8f93fe026f24da09a7836364235e675-delete
		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 13 more
[2023-07-09 07:41:08,662] TRACE [Broker id=1] Handling stop replica (delete=true) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:41:08,677] ERROR [Broker id=1] Ignoring stop replica (delete=true) for partition my_topic-1 due to storage exception (state.change.logger)
org.apache.kafka.common.errors.KafkaStorageException: Error while renaming dir for my_topic-1 in log dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1
Caused by: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1.0bf02d92e34e4636ac7f8e28e19028b7-delete
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.Log.$anonfun$renameDir$2(Log.scala:965)
	at kafka.log.Log.renameDir(Log.scala:2318)
	at kafka.log.LogManager.asyncDelete(LogManager.scala:916)
	at kafka.cluster.Partition.$anonfun$delete$1(Partition.scala:461)
	at kafka.cluster.Partition.delete(Partition.scala:452)
	at kafka.server.ReplicaManager.stopReplica(ReplicaManager.scala:338)
	at kafka.server.ReplicaManager.$anonfun$stopReplicas$2(ReplicaManager.scala:382)
	at scala.collection.immutable.Set$Set3.foreach(Set.scala:206)
	at kafka.server.ReplicaManager.stopReplicas(ReplicaManager.scala:380)
	at kafka.server.KafkaApis.handleStopReplicaRequest(KafkaApis.scala:239)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:133)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.base/java.lang.Thread.run(Thread.java:834)
	Suppressed: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1.0bf02d92e34e4636ac7f8e28e19028b7-delete
		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 13 more
[2023-07-09 07:41:08,677] TRACE [Broker id=1] Handling stop replica (delete=true) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:41:08,693] ERROR [Broker id=1] Ignoring stop replica (delete=true) for partition my_topic-2 due to storage exception (state.change.logger)
org.apache.kafka.common.errors.KafkaStorageException: Error while renaming dir for my_topic-2 in log dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1
Caused by: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-2 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-2.7f6c73dbbce14776aa5392df9e4ead40-delete
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.Log.$anonfun$renameDir$2(Log.scala:965)
	at kafka.log.Log.renameDir(Log.scala:2318)
	at kafka.log.LogManager.asyncDelete(LogManager.scala:916)
	at kafka.cluster.Partition.$anonfun$delete$1(Partition.scala:461)
	at kafka.cluster.Partition.delete(Partition.scala:452)
	at kafka.server.ReplicaManager.stopReplica(ReplicaManager.scala:338)
	at kafka.server.ReplicaManager.$anonfun$stopReplicas$2(ReplicaManager.scala:382)
	at scala.collection.immutable.Set$Set3.foreach(Set.scala:206)
	at kafka.server.ReplicaManager.stopReplicas(ReplicaManager.scala:380)
	at kafka.server.KafkaApis.handleStopReplicaRequest(KafkaApis.scala:239)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:133)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.base/java.lang.Thread.run(Thread.java:834)
	Suppressed: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-2 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-2.7f6c73dbbce14776aa5392df9e4ead40-delete
		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 13 more
[2023-07-09 07:41:08,693] TRACE [Controller id=2 epoch=7] Received response {error_code=0,partition_errors=[{topic_name=my_topic,partition_index=0,error_code=56,_tagged_fields={}},{topic_name=my_topic,partition_index=1,error_code=56,_tagged_fields={}},{topic_name=my_topic,partition_index=2,error_code=56,_tagged_fields={}}],_tagged_fields={}} for request STOP_REPLICA with correlation id 7 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:41:08,709] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-0 from ReplicaDeletionStarted to ReplicaDeletionIneligible (state.change.logger)
[2023-07-09 07:41:08,709] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-1 from ReplicaDeletionStarted to ReplicaDeletionIneligible (state.change.logger)
[2023-07-09 07:41:08,709] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-2 from ReplicaDeletionStarted to ReplicaDeletionIneligible (state.change.logger)
[2023-07-09 07:41:08,725] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:41:08,725] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:41:08,725] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:41:08,725] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:41:08,725] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:41:08,725] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:41:08,740] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:41:08,740] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:41:08,740] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:41:08,740] TRACE [Controller id=2 epoch=7] Received response {error_code=0,partition_errors=[{topic_name=my_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request STOP_REPLICA with correlation id 8 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-13 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-46 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-11 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-44 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-23 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-19 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-17 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-32 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-28 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-26 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-7 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-40 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-5 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition my_other_topic-1 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-38 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-1 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-34 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-47 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-16 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-14 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-43 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-41 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-10 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition topic02-2 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition topic01-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition topic02-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-22 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-20 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-49 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-31 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition topicA-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-29 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-25 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition topic01-2 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-8 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition my_other_topic-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-37 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition my_other_topic-2 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-35 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-4 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,322] TRACE [Controller id=2 epoch=7] Changed partition __consumer_offsets-2 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:41:27,338] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,338] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,338] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,353] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,353] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition topic01-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition topic01-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,353] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition my_other_topic-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my_other_topic-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,353] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,353] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,353] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,353] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,353] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,353] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition my_other_topic-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my_other_topic-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,353] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,353] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,353] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,353] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,353] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,353] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,353] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition topicA-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition topicA-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition my_other_topic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my_other_topic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition topic02-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition topic02-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition topic01-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition topic01-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition topic02-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition topic02-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,356] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-8 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_other_topic-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition first_topic-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-17 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-11 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition topic01-2 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition topic01-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_other_topic-2 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-32 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-35 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_other_topic-1 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-41 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-23 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-47 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition topicA-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition topic02-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-38 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-2 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-14 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-20 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-44 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-5 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-26 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition topic02-2 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition __consumer_offsets-29 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition first_topic-0 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[3, 2, 1], offlineReplicas=[3, 1]) to brokers HashSet(2) for partition first_topic-0 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition my_other_topic-1 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition topic02-2 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition topic01-0 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition topic02-0 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition topicA-0 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition topic01-2 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 11 from controller 2 epoch 7 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition my_other_topic-0 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition my_other_topic-2 (state.change.logger)
[2023-07-09 07:41:27,385] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 7 for partition first_topic-0 since its associated leader epoch 7 matches the current leader epoch (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) to brokers HashSet(2) for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-2 from OfflineReplica to ReplicaDeletionIneligible (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-1 from OfflineReplica to ReplicaDeletionIneligible (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-0 from OfflineReplica to ReplicaDeletionIneligible (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Received response {error_code=0,partition_errors=[{topic_name=first_topic,partition_index=0,error_code=11,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 11 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition topicA-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[3, 2, 1], offlineReplicas=[3, 1]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition topic01-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition topic01-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition topic02-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition topic02-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition my_other_topic-1 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition my_other_topic-0 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition my_other_topic-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[1]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 2 epoch 7 with correlation id 12 (state.change.logger)
[2023-07-09 07:41:27,385] TRACE [Controller id=2 epoch=7] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 12 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:41:27,401] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,401] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:41:27,401] TRACE [Controller id=2 epoch=7] Changed state of replica 1 for partition my_topic-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:41:57,211] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition first_topic-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition first_topic-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:42:02,225] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition first_topic-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition first_topic-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:42:07,247] ERROR [Controller id=2 epoch=7] Controller 2 epoch 7 failed to change state for partition first_topic-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition first_topic-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:43:44,058] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@1a3869f4, name=log4j:logger=state.change.logger (state.change.logger)
[2023-07-09 07:44:30,131] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition my_topic-1 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,138] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition __consumer_offsets-32 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,138] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition my_other_topic-1 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,138] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition __consumer_offsets-41 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,138] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition __consumer_offsets-8 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,138] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition __consumer_offsets-5 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,138] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition __consumer_offsets-20 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,138] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition __consumer_offsets-17 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,138] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition topic01-2 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,138] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition my_topic-2 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,138] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition __consumer_offsets-44 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,138] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition topicA-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,138] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition __consumer_offsets-11 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,138] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition __consumer_offsets-35 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,138] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition topic02-2 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,138] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition my_other_topic-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,138] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition __consumer_offsets-29 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition first_topic-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition __consumer_offsets-47 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition __consumer_offsets-23 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition __consumer_offsets-38 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition topic01-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition my_topic-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition __consumer_offsets-14 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition __consumer_offsets-26 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition topic02-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition __consumer_offsets-2 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition my_other_topic-2 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition first_topic-0 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=6, isr=[1], zkVersion=6, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_topic-1 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_other_topic-1 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic02-2 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic01-0 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic02-0 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topicA-0 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic01-2 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=6, isr=[1], zkVersion=6, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_topic-0 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_other_topic-0 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_other_topic-2 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=6, isr=[1], zkVersion=6, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_topic-2 (state.change.logger)
[2023-07-09 07:44:30,147] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers HashSet(1) for partition first_topic-0 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=7, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_other_topic-1 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topic02-2 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topic01-0 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topic02-0 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topicA-0 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topic01-2 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=7, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_other_topic-0 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_other_topic-2 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=7, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:44:30,163] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:44:30,242] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition __consumer_offsets-30 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,242] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition __consumer_offsets-21 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,242] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition topic02-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,242] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition __consumer_offsets-33 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,242] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition __consumer_offsets-36 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,242] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition first_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,242] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition __consumer_offsets-48 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,242] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition __consumer_offsets-6 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,242] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition __consumer_offsets-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,242] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition __consumer_offsets-45 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,242] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition topic01-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,242] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition __consumer_offsets-27 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,242] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition __consumer_offsets-9 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,242] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition __consumer_offsets-42 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,242] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition __consumer_offsets-3 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,257] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition __consumer_offsets-18 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,257] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition __consumer_offsets-15 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,257] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition __consumer_offsets-24 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,257] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition __consumer_offsets-39 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,257] TRACE [Controller id=1 epoch=8] Changed state of replica 2 for partition __consumer_offsets-12 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,289] TRACE [Controller id=1 epoch=8] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Changed state of replica 3 for partition __consumer_offsets-22 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Changed state of replica 3 for partition __consumer_offsets-4 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Changed state of replica 3 for partition __consumer_offsets-25 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Changed state of replica 3 for partition __consumer_offsets-49 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Changed state of replica 3 for partition __consumer_offsets-31 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Changed state of replica 3 for partition __consumer_offsets-37 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=6, isr=[1], zkVersion=6, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=6, isr=[1], zkVersion=6, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=6, isr=[1], zkVersion=6, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Changed state of replica 3 for partition first_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Changed state of replica 3 for partition __consumer_offsets-19 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Changed state of replica 3 for partition __consumer_offsets-13 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Changed state of replica 3 for partition __consumer_offsets-43 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Changed state of replica 3 for partition __consumer_offsets-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Changed state of replica 3 for partition __consumer_offsets-34 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Changed state of replica 3 for partition __consumer_offsets-7 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Changed state of replica 3 for partition __consumer_offsets-46 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Changed state of replica 3 for partition __consumer_offsets-16 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Changed state of replica 3 for partition __consumer_offsets-28 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Changed state of replica 3 for partition __consumer_offsets-10 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Changed state of replica 3 for partition __consumer_offsets-40 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=8, leader=-1, leaderEpoch=8, isr=[2], zkVersion=12, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition first_topic-0 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-15 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-48 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-13 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-46 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=8, leader=-1, leaderEpoch=8, isr=[2], zkVersion=12, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers HashSet(1) for partition first_topic-0 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-9 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-42 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=1, controllerEpoch=8, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition topic01-1 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=1, controllerEpoch=8, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition topic02-1 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-21 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-19 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-30 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-28 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-7 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-40 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-3 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-36 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-1 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-34 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-16 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-45 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-43 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-12 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-10 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-24 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-22 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-49 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-18 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-31 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-0 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-27 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-25 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-39 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-37 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-6 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-4 (state.change.logger)
[2023-07-09 07:44:30,304] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-33 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition __consumer_offsets-41 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition topic02-0 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition __consumer_offsets-29 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition my_other_topic-1 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition __consumer_offsets-44 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition __consumer_offsets-14 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition topicA-0 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition __consumer_offsets-23 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition __consumer_offsets-38 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition topic01-0 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition __consumer_offsets-8 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition __consumer_offsets-11 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition __consumer_offsets-26 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition first_topic-0 with leader 2 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition my_other_topic-0 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition my_topic-0 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition __consumer_offsets-35 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition __consumer_offsets-5 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition __consumer_offsets-20 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition topic01-2 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition my_topic-1 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition topic02-2 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition __consumer_offsets-2 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition my_topic-2 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition my_other_topic-2 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition __consumer_offsets-47 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition __consumer_offsets-17 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,398] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 8 starting the become-follower transition for partition __consumer_offsets-32 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,414] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition __consumer_offsets-41 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,430] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition topic02-0 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,430] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition __consumer_offsets-29 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,439] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition my_other_topic-1 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,439] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition __consumer_offsets-44 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,446] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition __consumer_offsets-14 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,477] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition topicA-0 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,477] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition __consumer_offsets-23 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,493] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition __consumer_offsets-38 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,493] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition topic01-0 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,493] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,508] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition __consumer_offsets-8 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,508] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,508] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,508] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition first_topic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition first_topic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,508] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,508] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,508] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition __consumer_offsets-11 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,508] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,508] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,508] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,524] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,524] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition __consumer_offsets-26 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,524] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,524] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition topic02-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition topic02-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,524] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,524] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,524] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,524] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,524] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition first_topic-0 (last update controller epoch 7) but cannot become follower since the new leader 2 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,524] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,524] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,524] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,524] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,540] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,540] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,540] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,540] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition my_other_topic-0 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,540] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,540] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,540] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,540] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,540] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,540] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,540] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition my_topic-0 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,540] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,540] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,540] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,540] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,540] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,540] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,540] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition topic01-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition topic01-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,540] ERROR [Controller id=1 epoch=8] Controller 1 epoch 8 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:44:30,540] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition __consumer_offsets-35 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition topic01-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition __consumer_offsets-8 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition __consumer_offsets-5 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition __consumer_offsets-35 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition my_other_topic-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition __consumer_offsets-41 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition __consumer_offsets-23 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition __consumer_offsets-47 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition topicA-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition my_other_topic-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition topic02-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition __consumer_offsets-38 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition __consumer_offsets-17 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition __consumer_offsets-11 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition topic01-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition __consumer_offsets-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition __consumer_offsets-14 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition __consumer_offsets-20 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition __consumer_offsets-44 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition my_other_topic-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition __consumer_offsets-5 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition __consumer_offsets-26 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition topic02-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition __consumer_offsets-29 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Changed partition __consumer_offsets-32 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), zkVersion=4) (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_other_topic-1 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic02-2 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic01-0 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic02-0 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topicA-0 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic01-2 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_other_topic-0 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_other_topic-2 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:44:30,555] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition __consumer_offsets-20 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_other_topic-1 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topic02-2 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topic01-0 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topic02-0 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topicA-0 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topic01-2 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_other_topic-0 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_other_topic-2 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:44:30,555] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:44:30,555] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition topic01-2 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,571] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition my_topic-1 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,571] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition topic02-2 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,571] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition __consumer_offsets-2 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,587] TRACE [Controller id=1 epoch=8] Changed partition my_topic-0 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:44:30,587] TRACE [Controller id=1 epoch=8] Changed partition my_topic-1 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:44:30,587] TRACE [Controller id=1 epoch=8] Changed partition my_topic-2 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:44:30,587] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition my_topic-2 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,587] TRACE [Controller id=1 epoch=8] Changed partition my_topic-0 state from OfflinePartition to NonExistentPartition (state.change.logger)
[2023-07-09 07:44:30,587] TRACE [Controller id=1 epoch=8] Changed partition my_topic-1 state from OfflinePartition to NonExistentPartition (state.change.logger)
[2023-07-09 07:44:30,587] TRACE [Controller id=1 epoch=8] Changed partition my_topic-2 state from OfflinePartition to NonExistentPartition (state.change.logger)
[2023-07-09 07:44:30,587] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=7, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:44:30,587] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=7, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:44:30,587] TRACE [Controller id=1 epoch=8] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=7, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:44:30,587] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition my_other_topic-2 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,587] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition __consumer_offsets-47 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,602] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition __consumer_offsets-17 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,602] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 8 for partition __consumer_offsets-32 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,618] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition my_topic-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,618] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition my_topic-1 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,618] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition my_topic-2 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:44:30,618] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition my_topic-0 from OfflineReplica to ReplicaDeletionStarted (state.change.logger)
[2023-07-09 07:44:30,618] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition my_topic-1 from OfflineReplica to ReplicaDeletionStarted (state.change.logger)
[2023-07-09 07:44:30,618] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition my_topic-2 from OfflineReplica to ReplicaDeletionStarted (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition __consumer_offsets-41 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition topic02-0 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition __consumer_offsets-29 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition my_other_topic-1 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition __consumer_offsets-44 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition __consumer_offsets-14 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition topicA-0 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition __consumer_offsets-23 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition __consumer_offsets-38 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition topic01-0 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition __consumer_offsets-8 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition __consumer_offsets-11 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition __consumer_offsets-26 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition first_topic-0 with leader 2 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition my_other_topic-0 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition my_topic-0 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition __consumer_offsets-35 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition __consumer_offsets-5 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition __consumer_offsets-20 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition topic01-2 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition my_topic-1 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition topic02-2 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition __consumer_offsets-2 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition my_topic-2 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition my_other_topic-2 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition __consumer_offsets-47 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition __consumer_offsets-17 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,639] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 8 for the become-follower transition for partition __consumer_offsets-32 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,665] TRACE [Controller id=1 epoch=8] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=38,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=topic02,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=topic01,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=topic02,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=0,_tagged_fields={}},{topic_name=topicA,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=topic01,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 1 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition topicA-0 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=7, leader=2, leaderEpoch=7, isr=[2], zkVersion=11, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition topic01-0 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition topic01-2 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition topic02-2 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition topic02-0 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Deleted partition my_topic-1 from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Deleted partition my_topic-0 from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Deleted partition my_topic-2 from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition my_other_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition my_other_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition my_other_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=7, leader=-1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 2 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Controller id=1 epoch=8] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 2 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=8, leader=-1, leaderEpoch=8, isr=[2], zkVersion=12, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,681] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 8 starting the become-follower transition for partition first_topic-0 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,681] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 8 for partition first_topic-0 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 8 for the become-follower transition for partition first_topic-0 with leader -1 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Controller id=1 epoch=8] Received response {error_code=0,partition_errors=[{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 3 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=8, leader=-1, leaderEpoch=8, isr=[2], zkVersion=12, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=1, controllerEpoch=8, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition topic01-1 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=1, controllerEpoch=8, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition topic02-1 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=8, leader=-1, leaderEpoch=12, isr=[3], zkVersion=12, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=8, leader=-1, leaderEpoch=10, isr=[2], zkVersion=10, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 4 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Controller id=1 epoch=8] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 4 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,697] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 5 from controller 1 epoch 8 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition topic02-0 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition my_other_topic-1 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition topicA-0 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition topic01-0 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition my_other_topic-0 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition topic01-2 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition topic02-2 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition my_other_topic-2 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:44:30,712] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 8 starting the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:44:30,744] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition __consumer_offsets-41 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,760] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition topic02-0 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,760] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition __consumer_offsets-29 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,775] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition my_other_topic-1 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,775] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition __consumer_offsets-44 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,791] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition __consumer_offsets-14 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,791] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition topicA-0 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,806] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition __consumer_offsets-23 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,806] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition __consumer_offsets-38 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,822] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition topic01-0 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,822] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition __consumer_offsets-8 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,822] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition __consumer_offsets-11 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,840] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition __consumer_offsets-26 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,854] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition my_other_topic-0 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,854] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition __consumer_offsets-35 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,854] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition __consumer_offsets-5 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,869] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition __consumer_offsets-20 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,869] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition topic01-2 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,885] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition topic02-2 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,885] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition __consumer_offsets-2 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,901] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition my_other_topic-2 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,901] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition __consumer_offsets-47 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition __consumer_offsets-17 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 8 with correlation id 5 for partition __consumer_offsets-32 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition topic02-0 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition my_other_topic-1 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition topicA-0 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition topic01-0 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition my_other_topic-0 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition topic01-2 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition topic02-2 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition my_other_topic-2 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:44:30,916] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 8 for the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:44:30,940] TRACE [Controller id=1 epoch=8] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=38,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=topic02,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=topic01,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=topic02,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=0,_tagged_fields={}},{topic_name=topicA,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=topic01,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 5 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition topicA-0 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition topic01-0 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition topic01-2 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition topic02-2 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition topic02-0 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition my_other_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition my_other_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition my_other_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 6 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Controller id=1 epoch=8] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 6 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Deleted partition my_topic-0 from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 7 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Deleted partition my_topic-1 from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 7 (state.change.logger)
[2023-07-09 07:44:30,948] TRACE [Broker id=1] Deleted partition my_topic-2 from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 8 with correlation id 7 (state.change.logger)
[2023-07-09 07:44:30,964] TRACE [Controller id=1 epoch=8] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 7 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:44:30,964] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:44:30,964] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:44:30,964] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:44:30,964] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:44:30,964] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:44:30,964] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:44:30,979] TRACE [Controller id=1 epoch=8] Received response {error_code=0,partition_errors=[{topic_name=my_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request STOP_REPLICA with correlation id 8 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:44:30,979] TRACE [Broker id=1] Handling stop replica (delete=true) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:44:31,011] ERROR [Broker id=1] Ignoring stop replica (delete=true) for partition my_topic-0 due to storage exception (state.change.logger)
org.apache.kafka.common.errors.KafkaStorageException: Error while renaming dir for my_topic-0 in log dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1
Caused by: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-0 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-0.e07d57865bea424988db21b33e834511-delete
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.Log.$anonfun$renameDir$2(Log.scala:965)
	at kafka.log.Log.renameDir(Log.scala:2318)
	at kafka.log.LogManager.asyncDelete(LogManager.scala:916)
	at kafka.cluster.Partition.$anonfun$delete$1(Partition.scala:461)
	at kafka.cluster.Partition.delete(Partition.scala:452)
	at kafka.server.ReplicaManager.stopReplica(ReplicaManager.scala:338)
	at kafka.server.ReplicaManager.$anonfun$stopReplicas$2(ReplicaManager.scala:382)
	at scala.collection.immutable.Set$Set3.foreach(Set.scala:206)
	at kafka.server.ReplicaManager.stopReplicas(ReplicaManager.scala:380)
	at kafka.server.KafkaApis.handleStopReplicaRequest(KafkaApis.scala:239)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:133)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.base/java.lang.Thread.run(Thread.java:834)
	Suppressed: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-0 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-0.e07d57865bea424988db21b33e834511-delete
		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 13 more
[2023-07-09 07:44:31,011] TRACE [Broker id=1] Handling stop replica (delete=true) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:44:31,040] ERROR [Broker id=1] Ignoring stop replica (delete=true) for partition my_topic-1 due to storage exception (state.change.logger)
org.apache.kafka.common.errors.KafkaStorageException: Error while renaming dir for my_topic-1 in log dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1
Caused by: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1.d1e4df9b87ae48b3b44d8711d318883b-delete
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.Log.$anonfun$renameDir$2(Log.scala:965)
	at kafka.log.Log.renameDir(Log.scala:2318)
	at kafka.log.LogManager.asyncDelete(LogManager.scala:916)
	at kafka.cluster.Partition.$anonfun$delete$1(Partition.scala:461)
	at kafka.cluster.Partition.delete(Partition.scala:452)
	at kafka.server.ReplicaManager.stopReplica(ReplicaManager.scala:338)
	at kafka.server.ReplicaManager.$anonfun$stopReplicas$2(ReplicaManager.scala:382)
	at scala.collection.immutable.Set$Set3.foreach(Set.scala:206)
	at kafka.server.ReplicaManager.stopReplicas(ReplicaManager.scala:380)
	at kafka.server.KafkaApis.handleStopReplicaRequest(KafkaApis.scala:239)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:133)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.base/java.lang.Thread.run(Thread.java:834)
	Suppressed: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1.d1e4df9b87ae48b3b44d8711d318883b-delete
		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 13 more
[2023-07-09 07:44:31,040] TRACE [Broker id=1] Handling stop replica (delete=true) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:44:31,042] ERROR [Broker id=1] Ignoring stop replica (delete=true) for partition my_topic-2 due to storage exception (state.change.logger)
org.apache.kafka.common.errors.KafkaStorageException: Error while renaming dir for my_topic-2 in log dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1
Caused by: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-2 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-2.1000dd483e7e45ee8cb4f84adfe77185-delete
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.Log.$anonfun$renameDir$2(Log.scala:965)
	at kafka.log.Log.renameDir(Log.scala:2318)
	at kafka.log.LogManager.asyncDelete(LogManager.scala:916)
	at kafka.cluster.Partition.$anonfun$delete$1(Partition.scala:461)
	at kafka.cluster.Partition.delete(Partition.scala:452)
	at kafka.server.ReplicaManager.stopReplica(ReplicaManager.scala:338)
	at kafka.server.ReplicaManager.$anonfun$stopReplicas$2(ReplicaManager.scala:382)
	at scala.collection.immutable.Set$Set3.foreach(Set.scala:206)
	at kafka.server.ReplicaManager.stopReplicas(ReplicaManager.scala:380)
	at kafka.server.KafkaApis.handleStopReplicaRequest(KafkaApis.scala:239)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:133)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.base/java.lang.Thread.run(Thread.java:834)
	Suppressed: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-2 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-2.1000dd483e7e45ee8cb4f84adfe77185-delete
		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 13 more
[2023-07-09 07:44:31,058] TRACE [Controller id=1 epoch=8] Received response {error_code=0,partition_errors=[{topic_name=my_topic,partition_index=0,error_code=56,_tagged_fields={}},{topic_name=my_topic,partition_index=1,error_code=56,_tagged_fields={}},{topic_name=my_topic,partition_index=2,error_code=56,_tagged_fields={}}],_tagged_fields={}} for request STOP_REPLICA with correlation id 9 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:44:31,058] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition my_topic-0 from ReplicaDeletionStarted to ReplicaDeletionIneligible (state.change.logger)
[2023-07-09 07:44:31,058] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition my_topic-1 from ReplicaDeletionStarted to ReplicaDeletionIneligible (state.change.logger)
[2023-07-09 07:44:31,058] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition my_topic-2 from ReplicaDeletionStarted to ReplicaDeletionIneligible (state.change.logger)
[2023-07-09 07:44:31,105] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition my_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:31,105] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition my_topic-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:31,105] TRACE [Controller id=1 epoch=8] Changed state of replica 1 for partition my_topic-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:44:31,120] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:44:31,120] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:44:31,120] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:44:31,120] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:44:31,120] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:44:31,120] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:44:31,120] TRACE [Controller id=1 epoch=8] Received response {error_code=0,partition_errors=[{topic_name=my_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request STOP_REPLICA with correlation id 10 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:46:19,612] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition my_topic-1 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,612] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition __consumer_offsets-32 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition my_other_topic-1 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition __consumer_offsets-41 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition __consumer_offsets-8 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition __consumer_offsets-5 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition __consumer_offsets-20 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition __consumer_offsets-17 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition topic01-2 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition my_topic-2 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition __consumer_offsets-44 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition topicA-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition __consumer_offsets-11 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition __consumer_offsets-35 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition topic02-2 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition my_other_topic-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition __consumer_offsets-29 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition first_topic-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition __consumer_offsets-47 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition __consumer_offsets-23 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition __consumer_offsets-38 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition topic01-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition my_topic-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition __consumer_offsets-14 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition __consumer_offsets-26 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition topic02-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition __consumer_offsets-2 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,628] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition my_other_topic-2 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=8, leader=-1, leaderEpoch=8, isr=[2], zkVersion=12, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition first_topic-0 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=8, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_topic-1 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_other_topic-1 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic02-2 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic01-0 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic02-0 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topicA-0 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition topic01-2 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=8, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_topic-0 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_other_topic-0 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_other_topic-2 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=8, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition my_topic-2 (state.change.logger)
[2023-07-09 07:46:19,643] TRACE [Controller id=1 epoch=9] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=8, leader=-1, leaderEpoch=8, isr=[2], zkVersion=12, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers HashSet(1) for partition first_topic-0 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=8, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_other_topic-1 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topic02-2 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topic01-0 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topic02-0 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topicA-0 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition topic01-2 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=8, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_other_topic-0 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_other_topic-2 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=8, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:46:19,659] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition __consumer_offsets-30 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition __consumer_offsets-21 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition topic02-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition __consumer_offsets-33 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition __consumer_offsets-36 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition first_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition __consumer_offsets-48 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition __consumer_offsets-6 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition __consumer_offsets-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition __consumer_offsets-45 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition topic01-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition __consumer_offsets-27 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition __consumer_offsets-9 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition __consumer_offsets-42 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition __consumer_offsets-3 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition __consumer_offsets-18 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition __consumer_offsets-15 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition __consumer_offsets-24 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition __consumer_offsets-39 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,753] TRACE [Controller id=1 epoch=9] Changed state of replica 2 for partition __consumer_offsets-12 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,801] TRACE [Controller id=1 epoch=9] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Changed state of replica 3 for partition __consumer_offsets-22 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Changed state of replica 3 for partition __consumer_offsets-4 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Changed state of replica 3 for partition __consumer_offsets-25 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Changed state of replica 3 for partition __consumer_offsets-49 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Changed state of replica 3 for partition __consumer_offsets-31 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Changed state of replica 3 for partition __consumer_offsets-37 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Changed state of replica 3 for partition first_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Changed state of replica 3 for partition __consumer_offsets-19 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Changed state of replica 3 for partition __consumer_offsets-13 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Changed state of replica 3 for partition __consumer_offsets-43 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=8, leader=-1, leaderEpoch=8, isr=[2], zkVersion=12, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Changed state of replica 3 for partition __consumer_offsets-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Changed state of replica 3 for partition __consumer_offsets-34 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=8, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=8, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Changed state of replica 3 for partition __consumer_offsets-7 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=8, leader=-1, leaderEpoch=8, isr=[1], zkVersion=8, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Changed state of replica 3 for partition __consumer_offsets-46 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Changed state of replica 3 for partition __consumer_offsets-16 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Changed state of replica 3 for partition __consumer_offsets-28 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Changed state of replica 3 for partition __consumer_offsets-10 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Changed state of replica 3 for partition __consumer_offsets-40 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=9, leader=-1, leaderEpoch=9, isr=[2], zkVersion=13, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition first_topic-0 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-15 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-48 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-13 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-46 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=9, leader=-1, leaderEpoch=9, isr=[2], zkVersion=13, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers HashSet(1) for partition first_topic-0 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-9 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-42 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic01', partitionIndex=1, controllerEpoch=9, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition topic01-1 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='topic02', partitionIndex=1, controllerEpoch=9, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition topic02-1 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-21 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-19 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-30 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-28 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-7 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-40 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-3 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-36 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-1 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-34 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-16 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-45 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-43 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-12 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-10 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-24 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-22 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-49 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-18 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-31 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-0 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-27 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-25 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-39 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-37 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-6 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-4 (state.change.logger)
[2023-07-09 07:46:19,816] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-33 (state.change.logger)
[2023-07-09 07:46:19,895] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,895] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,895] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,895] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition first_topic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition first_topic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,895] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,895] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,895] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,895] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,895] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,895] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition topic02-0 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition topic02-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition topic02-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition my_other_topic-1 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition topicA-0 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition topic01-0 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition my_other_topic-0 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition topic01-2 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition topic02-2 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition my_other_topic-2 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition topic01-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition topic01-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:46:19,910] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 07:46:19,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:46:19,926] TRACE [Controller id=1 epoch=9] Changed partition my_topic-0 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:46:19,926] TRACE [Controller id=1 epoch=9] Changed partition my_topic-1 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:46:19,926] TRACE [Controller id=1 epoch=9] Changed partition my_topic-2 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-09 07:46:19,926] TRACE [Controller id=1 epoch=9] Changed partition my_topic-0 state from OfflinePartition to NonExistentPartition (state.change.logger)
[2023-07-09 07:46:19,926] TRACE [Controller id=1 epoch=9] Changed partition my_topic-1 state from OfflinePartition to NonExistentPartition (state.change.logger)
[2023-07-09 07:46:19,926] TRACE [Controller id=1 epoch=9] Changed partition my_topic-2 state from OfflinePartition to NonExistentPartition (state.change.logger)
[2023-07-09 07:46:19,926] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=8, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:46:19,926] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=8, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:46:19,926] TRACE [Controller id=1 epoch=9] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=8, leader=-2, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:46:19,957] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition my_topic-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,957] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition my_topic-1 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,957] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition my_topic-2 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 07:46:19,957] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition my_topic-0 from OfflineReplica to ReplicaDeletionStarted (state.change.logger)
[2023-07-09 07:46:19,957] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition my_topic-1 from OfflineReplica to ReplicaDeletionStarted (state.change.logger)
[2023-07-09 07:46:19,957] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition my_topic-2 from OfflineReplica to ReplicaDeletionStarted (state.change.logger)
[2023-07-09 07:46:19,973] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition __consumer_offsets-41 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:19,989] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition topic02-0 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,005] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition __consumer_offsets-29 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,051] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition my_other_topic-1 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,067] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition __consumer_offsets-44 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,083] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition __consumer_offsets-14 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,088] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition topicA-0 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,099] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition __consumer_offsets-23 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,114] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition __consumer_offsets-38 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,130] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition topic01-0 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,146] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition __consumer_offsets-8 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,161] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition __consumer_offsets-11 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,177] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition __consumer_offsets-26 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,209] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition my_other_topic-0 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,209] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition __consumer_offsets-35 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,224] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition __consumer_offsets-5 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,240] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition __consumer_offsets-20 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,240] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition topic01-2 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,255] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition topic02-2 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,271] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition __consumer_offsets-2 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,289] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition my_other_topic-2 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,303] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition __consumer_offsets-47 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,303] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition __consumer_offsets-17 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 9 with correlation id 1 for partition __consumer_offsets-32 (last update controller epoch 8) (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition topic02-0 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition my_other_topic-1 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition topicA-0 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition topic01-0 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition my_other_topic-0 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition topic01-2 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition topic02-2 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition my_other_topic-2 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-follower transition for partition my_topic-2 with leader -1 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-follower transition for partition my_topic-1 with leader -1 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-follower transition for partition first_topic-0 with leader -1 (state.change.logger)
[2023-07-09 07:46:20,318] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 9 starting the become-follower transition for partition my_topic-0 with leader -1 (state.change.logger)
[2023-07-09 07:46:20,334] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition my_topic-2 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:46:20,350] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition my_topic-1 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:46:20,365] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition first_topic-0 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:46:20,365] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition my_topic-0 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:46:20,397] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-follower transition for partition my_topic-2 with leader -1 (state.change.logger)
[2023-07-09 07:46:20,397] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-follower transition for partition my_topic-1 with leader -1 (state.change.logger)
[2023-07-09 07:46:20,397] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-follower transition for partition first_topic-0 with leader -1 (state.change.logger)
[2023-07-09 07:46:20,397] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 9 for the become-follower transition for partition my_topic-0 with leader -1 (state.change.logger)
[2023-07-09 07:46:20,428] TRACE [Controller id=1 epoch=9] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=38,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=topic02,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=topic01,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=topic02,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=0,_tagged_fields={}},{topic_name=topicA,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=topic01,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 1 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topicA', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition topicA-0 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=8, leader=-1, leaderEpoch=8, isr=[2], zkVersion=12, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition topic01-0 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition topic01-2 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition topic02-2 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition topic02-0 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Deleted partition my_topic-1 from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Deleted partition my_topic-0 from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Deleted partition my_topic-2 from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition my_other_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition my_other_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition my_other_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,444] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,459] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,459] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,459] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,459] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,459] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,459] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=8, leader=1, leaderEpoch=4, isr=[1], zkVersion=4, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-07-09 07:46:20,459] TRACE [Controller id=1 epoch=9] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 2 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:46:20,459] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=9, leader=-1, leaderEpoch=9, isr=[2], zkVersion=13, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 9 (state.change.logger)
[2023-07-09 07:46:20,459] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 9 starting the become-follower transition for partition first_topic-0 with leader -1 (state.change.logger)
[2023-07-09 07:46:20,459] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 9 for partition first_topic-0 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-09 07:46:20,459] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 9 for the become-follower transition for partition first_topic-0 with leader -1 (state.change.logger)
[2023-07-09 07:46:20,459] TRACE [Controller id=1 epoch=9] Received response {error_code=0,partition_errors=[{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 3 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=9, leader=-1, leaderEpoch=9, isr=[2], zkVersion=13, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic01', partitionIndex=1, controllerEpoch=9, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition topic01-1 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='topic02', partitionIndex=1, controllerEpoch=9, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition topic02-1 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=9, leader=-1, leaderEpoch=13, isr=[3], zkVersion=13, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=9, leader=-1, leaderEpoch=11, isr=[2], zkVersion=11, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Controller id=1 epoch=9] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 4 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Deleted partition my_topic-0 from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 5 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Deleted partition my_topic-1 from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 5 (state.change.logger)
[2023-07-09 07:46:20,475] TRACE [Broker id=1] Deleted partition my_topic-2 from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 5 (state.change.logger)
[2023-07-09 07:46:20,489] TRACE [Controller id=1 epoch=9] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 5 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:46:20,491] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:46:20,491] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:46:20,491] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:46:20,491] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:46:20,491] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:46:20,491] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:46:20,491] TRACE [Controller id=1 epoch=9] Received response {error_code=0,partition_errors=[{topic_name=my_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request STOP_REPLICA with correlation id 6 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:46:20,507] TRACE [Broker id=1] Handling stop replica (delete=true) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:46:20,538] ERROR [Broker id=1] Ignoring stop replica (delete=true) for partition my_topic-0 due to storage exception (state.change.logger)
org.apache.kafka.common.errors.KafkaStorageException: Error while renaming dir for my_topic-0 in log dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1
Caused by: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-0 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-0.3948e7b566c348f7be93127c6a2d5d13-delete
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.Log.$anonfun$renameDir$2(Log.scala:965)
	at kafka.log.Log.renameDir(Log.scala:2318)
	at kafka.log.LogManager.asyncDelete(LogManager.scala:916)
	at kafka.cluster.Partition.$anonfun$delete$1(Partition.scala:461)
	at kafka.cluster.Partition.delete(Partition.scala:452)
	at kafka.server.ReplicaManager.stopReplica(ReplicaManager.scala:338)
	at kafka.server.ReplicaManager.$anonfun$stopReplicas$2(ReplicaManager.scala:382)
	at scala.collection.immutable.Set$Set3.foreach(Set.scala:206)
	at kafka.server.ReplicaManager.stopReplicas(ReplicaManager.scala:380)
	at kafka.server.KafkaApis.handleStopReplicaRequest(KafkaApis.scala:239)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:133)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.base/java.lang.Thread.run(Thread.java:834)
	Suppressed: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-0 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-0.3948e7b566c348f7be93127c6a2d5d13-delete
		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 13 more
[2023-07-09 07:46:20,538] TRACE [Broker id=1] Handling stop replica (delete=true) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:46:20,554] ERROR [Broker id=1] Ignoring stop replica (delete=true) for partition my_topic-1 due to storage exception (state.change.logger)
org.apache.kafka.common.errors.KafkaStorageException: Error while renaming dir for my_topic-1 in log dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1
Caused by: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1.4a970a599f594dcda2465c7171eb8b91-delete
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.Log.$anonfun$renameDir$2(Log.scala:965)
	at kafka.log.Log.renameDir(Log.scala:2318)
	at kafka.log.LogManager.asyncDelete(LogManager.scala:916)
	at kafka.cluster.Partition.$anonfun$delete$1(Partition.scala:461)
	at kafka.cluster.Partition.delete(Partition.scala:452)
	at kafka.server.ReplicaManager.stopReplica(ReplicaManager.scala:338)
	at kafka.server.ReplicaManager.$anonfun$stopReplicas$2(ReplicaManager.scala:382)
	at scala.collection.immutable.Set$Set3.foreach(Set.scala:206)
	at kafka.server.ReplicaManager.stopReplicas(ReplicaManager.scala:380)
	at kafka.server.KafkaApis.handleStopReplicaRequest(KafkaApis.scala:239)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:133)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.base/java.lang.Thread.run(Thread.java:834)
	Suppressed: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1.4a970a599f594dcda2465c7171eb8b91-delete
		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 13 more
[2023-07-09 07:46:20,554] TRACE [Broker id=1] Handling stop replica (delete=true) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:46:20,585] ERROR [Broker id=1] Ignoring stop replica (delete=true) for partition my_topic-2 due to storage exception (state.change.logger)
org.apache.kafka.common.errors.KafkaStorageException: Error while renaming dir for my_topic-2 in log dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1
Caused by: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-2 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-2.94ea996c38254adf95767140dd0a6b5a-delete
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.Log.$anonfun$renameDir$2(Log.scala:965)
	at kafka.log.Log.renameDir(Log.scala:2318)
	at kafka.log.LogManager.asyncDelete(LogManager.scala:916)
	at kafka.cluster.Partition.$anonfun$delete$1(Partition.scala:461)
	at kafka.cluster.Partition.delete(Partition.scala:452)
	at kafka.server.ReplicaManager.stopReplica(ReplicaManager.scala:338)
	at kafka.server.ReplicaManager.$anonfun$stopReplicas$2(ReplicaManager.scala:382)
	at scala.collection.immutable.Set$Set3.foreach(Set.scala:206)
	at kafka.server.ReplicaManager.stopReplicas(ReplicaManager.scala:380)
	at kafka.server.KafkaApis.handleStopReplicaRequest(KafkaApis.scala:239)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:133)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:70)
	at java.base/java.lang.Thread.run(Thread.java:834)
	Suppressed: java.nio.file.AccessDeniedException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-2 -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-2.94ea996c38254adf95767140dd0a6b5a-delete
		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 13 more
[2023-07-09 07:46:20,589] TRACE [Controller id=1 epoch=9] Received response {error_code=0,partition_errors=[{topic_name=my_topic,partition_index=0,error_code=56,_tagged_fields={}},{topic_name=my_topic,partition_index=1,error_code=56,_tagged_fields={}},{topic_name=my_topic,partition_index=2,error_code=56,_tagged_fields={}}],_tagged_fields={}} for request STOP_REPLICA with correlation id 7 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:46:20,601] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition my_topic-0 from ReplicaDeletionStarted to ReplicaDeletionIneligible (state.change.logger)
[2023-07-09 07:46:20,601] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition my_topic-1 from ReplicaDeletionStarted to ReplicaDeletionIneligible (state.change.logger)
[2023-07-09 07:46:20,601] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition my_topic-2 from ReplicaDeletionStarted to ReplicaDeletionIneligible (state.change.logger)
[2023-07-09 07:46:20,632] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition my_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:20,632] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition my_topic-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:20,632] TRACE [Controller id=1 epoch=9] Changed state of replica 1 for partition my_topic-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-09 07:46:20,648] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:46:20,648] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:46:20,648] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:46:20,648] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:46:20,648] TRACE [Broker id=1] Handling stop replica (delete=false) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:46:20,648] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:46:20,648] TRACE [Controller id=1 epoch=9] Received response {error_code=0,partition_errors=[{topic_name=my_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request STOP_REPLICA with correlation id 8 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:50:37,555] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@1a3869f4, name=log4j:logger=state.change.logger (state.change.logger)
[2023-07-09 07:51:16,072] TRACE [Controller id=1 epoch=1] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:52:12,243] TRACE [Controller id=1 epoch=1] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 1 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:52:12,745] TRACE [Controller id=1 epoch=1] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:52:59,778] TRACE [Controller id=1 epoch=1] Changed partition my_topic-0 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:52:59,778] TRACE [Controller id=1 epoch=1] Changed partition my_topic-1 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:52:59,778] TRACE [Controller id=1 epoch=1] Changed partition my_topic-2 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:52:59,778] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition my_topic-1 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:52:59,778] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition my_topic-0 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:52:59,778] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition my_topic-2 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:52:59,825] TRACE [Controller id=1 epoch=1] Changed partition my_topic-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:52:59,825] TRACE [Controller id=1 epoch=1] Changed partition my_topic-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:52:59,825] TRACE [Controller id=1 epoch=1] Changed partition my_topic-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:52:59,825] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition my_topic-1 (state.change.logger)
[2023-07-09 07:52:59,825] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition my_topic-0 (state.change.logger)
[2023-07-09 07:52:59,825] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition my_topic-2 (state.change.logger)
[2023-07-09 07:52:59,825] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_topic-0 (state.change.logger)
[2023-07-09 07:52:59,825] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_topic-1 (state.change.logger)
[2023-07-09 07:52:59,825] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_topic-2 (state.change.logger)
[2023-07-09 07:52:59,825] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition my_topic-1 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:52:59,841] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition my_topic-0 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:52:59,841] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition my_topic-2 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:52:59,841] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 2 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:52:59,841] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 1 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:52:59,841] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 1 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:52:59,872] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 2 from controller 1 epoch 1 starting the become-leader transition for partition my_topic-1 (state.change.logger)
[2023-07-09 07:52:59,872] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition my_topic-2 (state.change.logger)
[2023-07-09 07:52:59,872] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition my_topic-0 (state.change.logger)
[2023-07-09 07:53:00,060] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 2 for partition my_topic-1 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:53:00,060] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 2 from controller 1 epoch 1 for the become-leader transition for partition my_topic-1 (state.change.logger)
[2023-07-09 07:53:00,076] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 1 for partition my_topic-2 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:53:00,076] TRACE [Controller id=1 epoch=1] Received response {error_code=0,partition_errors=[{topic_name=my_topic,partition_index=1,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 2 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:53:00,092] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition my_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 3 (state.change.logger)
[2023-07-09 07:53:00,092] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 3 (state.change.logger)
[2023-07-09 07:53:00,092] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition my_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 3 (state.change.logger)
[2023-07-09 07:53:00,110] TRACE [Controller id=1 epoch=1] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 3 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:53:00,110] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 1 for partition my_topic-0 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:53:00,110] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition my_topic-2 (state.change.logger)
[2023-07-09 07:53:00,110] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition my_topic-0 (state.change.logger)
[2023-07-09 07:53:00,139] TRACE [Controller id=1 epoch=1] Received response {error_code=0,partition_errors=[{topic_name=my_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=my_topic,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 1 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:53:00,155] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition my_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
[2023-07-09 07:53:00,155] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
[2023-07-09 07:53:00,155] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition my_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
[2023-07-09 07:53:00,155] TRACE [Controller id=1 epoch=1] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 2 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-22 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-30 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-25 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-35 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-37 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-38 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-13 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-8 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-21 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-4 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-27 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-7 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-9 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-46 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-41 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-33 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-23 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-49 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-47 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-16 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-28 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-31 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-36 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-42 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-3 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-18 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-15 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-24 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-17 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-48 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-19 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-11 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-2 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-43 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-6 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-14 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-20 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-0 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-44 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-39 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-12 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-45 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-1 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-5 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-26 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-29 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-34 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-10 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-32 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-40 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-1 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-47 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-9 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-49 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-21 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-5 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-29 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-11 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-37 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-13 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-35 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-39 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-27 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-45 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-19 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-41 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-7 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-43 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-33 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-25 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-31 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-23 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-17 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-15 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-3 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-2 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-18 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-36 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-26 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-20 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-4 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-22 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-38 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-42 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-0 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-28 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-46 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-16 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-48 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-40 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-30 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-34 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-44 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-24 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-32 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-10 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-6 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-8 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-14 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,092] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-12 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-22 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-30 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-25 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-35 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-37 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-38 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-13 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-8 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-21 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-27 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-7 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-9 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-46 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-41 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-33 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-23 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-49 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-47 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-16 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-28 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-31 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-36 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-42 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-18 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-15 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-24 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-17 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-48 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-19 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-11 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-43 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-6 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-14 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-20 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-44 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-39 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-12 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-45 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-5 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-26 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-29 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-34 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-10 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-32 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-40 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-15 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-13 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-9 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-21 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-19 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-7 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-3 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-1 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-45 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-43 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-49 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-31 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-27 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-25 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-39 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-37 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-33 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-48 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-46 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-42 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-30 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-28 (state.change.logger)
[2023-07-09 07:54:44,233] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-40 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-36 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-34 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-16 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-12 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-10 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-24 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-22 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-18 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-0 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-6 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-4 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-13 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-46 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-9 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-42 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-21 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-30 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-34 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-16 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-45 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-12 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-24 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-49 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-0 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-25 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-37 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-4 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-33 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-15 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-48 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-19 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-28 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-7 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-40 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-3 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-36 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-43 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-10 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-22 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-18 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-31 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-27 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-39 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-6 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:54:44,249] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-1 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-47 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-9 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-49 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-21 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-5 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-29 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-11 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-37 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-13 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-35 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-39 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-27 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-45 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-19 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-41 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-7 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-43 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-33 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-25 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-31 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-23 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-17 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-15 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-3 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-2 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-18 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-36 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-26 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-20 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-4 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-22 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-38 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-42 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-0 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-28 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-46 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-16 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-48 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-40 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-30 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-34 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-44 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-24 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-32 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-10 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-6 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-8 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-14 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,264] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-12 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-18 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-22 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-10 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-34 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-30 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-42 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-46 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-6 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:54:44,311] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-3 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-37 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-7 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-33 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-19 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-45 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-15 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-49 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-39 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-9 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-27 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-31 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-1 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-21 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-25 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-43 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-13 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:54:44,316] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:54:44,374] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-18 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,374] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-3 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,422] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-22 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,422] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-37 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,469] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-10 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,469] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-7 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,500] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-41 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,516] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-44 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,563] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-14 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,563] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-29 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,610] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-48 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,610] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-33 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,642] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-34 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,657] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-19 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,689] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-4 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,704] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-23 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,736] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-38 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,783] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-11 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,783] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-8 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,830] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-26 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,830] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-45 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,877] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-30 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,877] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-15 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,908] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-0 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,917] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-49 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,940] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-20 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,956] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-35 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:44,987] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-24 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,002] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-5 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,034] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-42 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,065] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-39 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,065] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-12 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,112] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-9 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,118] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-46 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,144] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-27 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,144] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-16 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,175] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-31 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,191] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-2 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,238] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-1 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,238] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-36 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,269] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-6 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,269] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-21 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,301] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-40 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,301] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-25 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,332] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-28 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,348] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-43 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 3 for partition __consumer_offsets-32 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-18 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-22 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-10 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-34 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-30 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-42 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-46 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-6 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
[2023-07-09 07:54:45,379] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 07:54:45,395] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-13 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,395] TRACE [Controller id=1 epoch=1] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=48,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=46,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=42,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=30,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=28,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=40,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=38,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=36,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=34,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=16,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=12,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=10,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=24,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=22,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=18,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=6,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=4,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 3 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,410] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,418] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,418] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,418] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,418] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,418] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,418] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,418] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,418] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-07-09 07:54:45,418] TRACE [Controller id=1 epoch=1] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 4 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 07:54:45,426] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-47 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 4 for partition __consumer_offsets-17 (last update controller epoch 1) (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-3 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-37 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-7 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-33 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-19 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-45 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-15 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-49 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-39 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-9 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-27 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-31 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-1 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-21 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-25 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-43 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-13 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2023-07-09 07:54:45,473] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Controller id=1 epoch=1] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=15,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=13,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=19,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=7,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=43,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=49,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=31,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=25,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=37,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 4 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,489] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,505] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,505] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,505] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,505] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,505] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,505] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,505] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,505] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,505] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,505] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,505] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,505] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,505] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,505] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,505] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,505] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,505] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,505] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-07-09 07:54:45,505] TRACE [Controller id=1 epoch=1] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 5 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 08:03:25,470] TRACE [Controller id=1 epoch=1] Changed partition my_other_topic-0 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 08:03:25,470] TRACE [Controller id=1 epoch=1] Changed partition my_other_topic-1 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 08:03:25,470] TRACE [Controller id=1 epoch=1] Changed partition my_other_topic-2 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-07-09 08:03:25,470] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition my_other_topic-1 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 08:03:25,470] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition my_other_topic-0 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 08:03:25,470] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition my_other_topic-2 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 08:03:25,486] TRACE [Controller id=1 epoch=1] Changed partition my_other_topic-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 08:03:25,486] TRACE [Controller id=1 epoch=1] Changed partition my_other_topic-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 08:03:25,486] TRACE [Controller id=1 epoch=1] Changed partition my_other_topic-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), zkVersion=0) (state.change.logger)
[2023-07-09 08:03:25,486] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition my_other_topic-1 (state.change.logger)
[2023-07-09 08:03:25,486] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition my_other_topic-0 (state.change.logger)
[2023-07-09 08:03:25,486] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition my_other_topic-2 (state.change.logger)
[2023-07-09 08:03:25,486] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_other_topic-1 (state.change.logger)
[2023-07-09 08:03:25,486] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_other_topic-2 (state.change.logger)
[2023-07-09 08:03:25,486] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_other_topic-0 (state.change.logger)
[2023-07-09 08:03:25,486] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition my_other_topic-1 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 08:03:25,486] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition my_other_topic-0 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 08:03:25,486] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition my_other_topic-2 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 08:03:25,486] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 08:03:25,502] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 6 from controller 1 epoch 1 starting the become-leader transition for partition my_other_topic-1 (state.change.logger)
[2023-07-09 08:03:25,486] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 08:03:25,502] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 08:03:25,502] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-leader transition for partition my_other_topic-2 (state.change.logger)
[2023-07-09 08:03:25,502] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-leader transition for partition my_other_topic-0 (state.change.logger)
[2023-07-09 08:03:25,549] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 6 for partition my_other_topic-1 (last update controller epoch 1) (state.change.logger)
[2023-07-09 08:03:25,549] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 6 from controller 1 epoch 1 for the become-leader transition for partition my_other_topic-1 (state.change.logger)
[2023-07-09 08:03:25,549] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 5 for partition my_other_topic-2 (last update controller epoch 1) (state.change.logger)
[2023-07-09 08:03:25,549] TRACE [Controller id=1 epoch=1] Received response {error_code=0,partition_errors=[{topic_name=my_other_topic,partition_index=1,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 6 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 08:03:25,549] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_other_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 7 (state.change.logger)
[2023-07-09 08:03:25,549] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition my_other_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 7 (state.change.logger)
[2023-07-09 08:03:25,549] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition my_other_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 7 (state.change.logger)
[2023-07-09 08:03:25,549] TRACE [Controller id=1 epoch=1] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 7 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 08:03:25,565] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 5 for partition my_other_topic-0 (last update controller epoch 1) (state.change.logger)
[2023-07-09 08:03:25,565] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-leader transition for partition my_other_topic-2 (state.change.logger)
[2023-07-09 08:03:25,565] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-leader transition for partition my_other_topic-0 (state.change.logger)
[2023-07-09 08:03:25,580] TRACE [Controller id=1 epoch=1] Received response {error_code=0,partition_errors=[{topic_name=my_other_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=my_other_topic,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 5 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 08:03:25,580] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_other_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2023-07-09 08:03:25,580] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition my_other_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2023-07-09 08:03:25,580] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2], zkVersion=0, replicas=[2], offlineReplicas=[]) for partition my_other_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2023-07-09 08:03:25,580] TRACE [Controller id=1 epoch=1] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 6 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 08:43:07,910] TRACE [Controller id=1 epoch=1] Changed partition my_topic-3 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-07-09 08:43:07,910] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition my_topic-3 from NonExistentReplica to NewReplica (state.change.logger)
[2023-07-09 08:43:07,925] TRACE [Controller id=1 epoch=1] Changed partition my_topic-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger)
[2023-07-09 08:43:07,925] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition my_topic-3 (state.change.logger)
[2023-07-09 08:43:07,925] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1, 2) for partition my_topic-3 (state.change.logger)
[2023-07-09 08:43:07,925] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition my_topic-3 from NewReplica to OnlineReplica (state.change.logger)
[2023-07-09 08:43:07,941] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my_topic', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2023-07-09 08:43:07,941] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_topic-3 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 7 (state.change.logger)
[2023-07-09 08:43:07,941] TRACE [Controller id=1 epoch=1] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 7 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-09 08:43:07,941] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-leader transition for partition my_topic-3 (state.change.logger)
[2023-07-09 08:43:07,988] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 1 with correlation id 8 for partition my_topic-3 (last update controller epoch 1) (state.change.logger)
[2023-07-09 08:43:07,988] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-leader transition for partition my_topic-3 (state.change.logger)
[2023-07-09 08:43:07,988] TRACE [Controller id=1 epoch=1] Received response {error_code=0,partition_errors=[{topic_name=my_topic,partition_index=3,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 8 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 08:43:07,988] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my_topic-3 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2023-07-09 08:43:07,988] TRACE [Controller id=1 epoch=1] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 9 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-09 09:06:25,012] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-48 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,014] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-46 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,014] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-44 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,014] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-42 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,014] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-32 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,014] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-30 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,014] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-28 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,014] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-26 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,014] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-40 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,014] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-38 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,014] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-36 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,014] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-34 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,014] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-16 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,014] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-14 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,014] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-12 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,014] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-10 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,014] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-24 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,014] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-22 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,014] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-20 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,015] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-18 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,015] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,015] TRACE [Controller id=1 epoch=1] Changed partition my_topic-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,015] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-8 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,015] TRACE [Controller id=1 epoch=1] Changed partition my_other_topic-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,015] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-6 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,015] TRACE [Controller id=1 epoch=1] Changed partition my_other_topic-2 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,015] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-4 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,015] TRACE [Controller id=1 epoch=1] Changed partition my_topic-2 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,015] TRACE [Controller id=1 epoch=1] Changed partition __consumer_offsets-2 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-09 09:06:25,055] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,071] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,072] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,072] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,072] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,073] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,073] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,074] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,074] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,075] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition my_topic-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my_topic-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,075] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,075] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,076] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,076] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition my_other_topic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my_other_topic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,077] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,077] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,077] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition my_topic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my_topic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,078] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,078] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,079] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,080] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,081] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,081] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,082] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,082] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition my_other_topic-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my_other_topic-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,083] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,083] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,083] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,084] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-09 09:06:25,155] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-22 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,155] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-30 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,155] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-46 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,155] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-38 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,155] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-48 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,156] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-26 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,156] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-34 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,156] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-8 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,156] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-4 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,156] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition my_topic-2 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,156] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-16 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,156] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-28 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,156] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-36 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,156] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition my_other_topic-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,156] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-42 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,156] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-18 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,156] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition my_topic-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,156] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-24 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,157] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-2 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,157] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-6 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,157] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-14 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,157] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-20 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,157] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,157] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-44 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,157] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition my_other_topic-2 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,157] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-12 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,157] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-10 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,157] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-32 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,158] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-40 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-09 09:06:25,159] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-48 (state.change.logger)
[2023-07-09 09:06:25,160] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-46 (state.change.logger)
[2023-07-09 09:06:25,160] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-44 (state.change.logger)
[2023-07-09 09:06:25,160] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-42 (state.change.logger)
[2023-07-09 09:06:25,160] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-32 (state.change.logger)
[2023-07-09 09:06:25,160] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-30 (state.change.logger)
[2023-07-09 09:06:25,160] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-28 (state.change.logger)
[2023-07-09 09:06:25,160] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-26 (state.change.logger)
[2023-07-09 09:06:25,160] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-40 (state.change.logger)
[2023-07-09 09:06:25,160] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-38 (state.change.logger)
[2023-07-09 09:06:25,160] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-36 (state.change.logger)
[2023-07-09 09:06:25,160] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-34 (state.change.logger)
[2023-07-09 09:06:25,160] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-16 (state.change.logger)
[2023-07-09 09:06:25,161] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-14 (state.change.logger)
[2023-07-09 09:06:25,161] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-12 (state.change.logger)
[2023-07-09 09:06:25,161] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-10 (state.change.logger)
[2023-07-09 09:06:25,161] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-24 (state.change.logger)
[2023-07-09 09:06:25,161] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-22 (state.change.logger)
[2023-07-09 09:06:25,161] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-20 (state.change.logger)
[2023-07-09 09:06:25,161] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-18 (state.change.logger)
[2023-07-09 09:06:25,161] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-0 (state.change.logger)
[2023-07-09 09:06:25,161] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition my_topic-0 (state.change.logger)
[2023-07-09 09:06:25,161] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-8 (state.change.logger)
[2023-07-09 09:06:25,161] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition my_other_topic-0 (state.change.logger)
[2023-07-09 09:06:25,161] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-6 (state.change.logger)
[2023-07-09 09:06:25,162] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition my_other_topic-2 (state.change.logger)
[2023-07-09 09:06:25,162] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-4 (state.change.logger)
[2023-07-09 09:06:25,162] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition my_topic-2 (state.change.logger)
[2023-07-09 09:06:25,162] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-2 (state.change.logger)
[2023-07-09 09:06:25,171] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=0, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition my_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,171] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_topic', partitionIndex=2, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition my_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,171] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=0, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition my_other_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,171] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='my_other_topic', partitionIndex=2, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition my_other_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,171] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,172] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,173] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,173] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,173] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,173] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 10 (state.change.logger)
[2023-07-09 09:06:25,174] TRACE [Controller id=1 epoch=1] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 10 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
