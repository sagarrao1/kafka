[2023-07-08 13:49:04,233] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@1a3869f4, name=log4j:logger=state.change.logger (state.change.logger)
[2023-07-08 13:50:03,860] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-11 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 13:50:03,863] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-35 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 13:50:03,864] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-29 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 13:50:03,864] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-32 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 13:50:03,866] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition first_topic-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 13:50:03,866] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-41 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 13:50:03,867] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-8 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 13:50:03,868] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-5 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 13:50:03,869] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-20 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 13:50:03,869] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-47 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 13:50:03,870] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-23 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 13:50:03,870] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-38 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 13:50:03,871] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-17 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 13:50:03,871] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-14 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 13:50:03,871] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-26 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 13:50:03,872] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-2 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 13:50:03,872] TRACE [Controller id=1 epoch=2] Changed state of replica 1 for partition __consumer_offsets-44 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 13:50:03,876] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-47 (state.change.logger)
[2023-07-08 13:50:03,876] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-14 (state.change.logger)
[2023-07-08 13:50:03,877] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-11 (state.change.logger)
[2023-07-08 13:50:03,877] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition first_topic-0 (state.change.logger)
[2023-07-08 13:50:03,877] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-44 (state.change.logger)
[2023-07-08 13:50:03,877] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-41 (state.change.logger)
[2023-07-08 13:50:03,877] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-23 (state.change.logger)
[2023-07-08 13:50:03,877] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-20 (state.change.logger)
[2023-07-08 13:50:03,877] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-17 (state.change.logger)
[2023-07-08 13:50:03,878] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-32 (state.change.logger)
[2023-07-08 13:50:03,878] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-29 (state.change.logger)
[2023-07-08 13:50:03,878] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-26 (state.change.logger)
[2023-07-08 13:50:03,878] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-8 (state.change.logger)
[2023-07-08 13:50:03,878] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-5 (state.change.logger)
[2023-07-08 13:50:03,878] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-38 (state.change.logger)
[2023-07-08 13:50:03,878] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-35 (state.change.logger)
[2023-07-08 13:50:03,878] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-2 (state.change.logger)
[2023-07-08 13:50:03,884] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-47 (state.change.logger)
[2023-07-08 13:50:03,884] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-14 (state.change.logger)
[2023-07-08 13:50:03,884] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-11 (state.change.logger)
[2023-07-08 13:50:03,884] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers HashSet(1) for partition first_topic-0 (state.change.logger)
[2023-07-08 13:50:03,885] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-44 (state.change.logger)
[2023-07-08 13:50:03,885] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-41 (state.change.logger)
[2023-07-08 13:50:03,885] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-23 (state.change.logger)
[2023-07-08 13:50:03,885] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-20 (state.change.logger)
[2023-07-08 13:50:03,886] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-17 (state.change.logger)
[2023-07-08 13:50:03,886] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-32 (state.change.logger)
[2023-07-08 13:50:03,886] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-29 (state.change.logger)
[2023-07-08 13:50:03,886] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-26 (state.change.logger)
[2023-07-08 13:50:03,886] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-8 (state.change.logger)
[2023-07-08 13:50:03,886] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-5 (state.change.logger)
[2023-07-08 13:50:03,887] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-38 (state.change.logger)
[2023-07-08 13:50:03,887] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-35 (state.change.logger)
[2023-07-08 13:50:03,887] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-2 (state.change.logger)
[2023-07-08 13:50:03,993] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-30 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:03,993] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-21 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:03,994] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-33 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:03,994] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-36 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:03,995] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition first_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:03,995] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-48 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:03,995] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-6 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:03,996] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:03,997] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-45 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:03,997] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-27 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:03,997] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-9 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:03,998] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-42 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:03,998] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-3 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:03,998] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-18 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:03,999] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-15 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:03,999] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-24 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:03,999] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-39 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:03,999] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-12 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:04,047] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-22 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:04,048] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-4 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:04,048] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-25 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:04,049] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-49 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:04,049] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-31 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:04,049] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-37 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:04,050] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition first_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:04,050] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-19 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:04,050] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-13 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:04,051] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-43 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:04,051] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:04,051] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-34 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:04,051] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-7 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:04,052] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-46 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:04,052] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-16 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:04,053] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-28 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:04,053] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-10 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:04,053] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-40 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 13:50:04,054] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=2, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition first_topic-0 (state.change.logger)
[2023-07-08 13:50:04,054] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-15 (state.change.logger)
[2023-07-08 13:50:04,054] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-48 (state.change.logger)
[2023-07-08 13:50:04,054] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-13 (state.change.logger)
[2023-07-08 13:50:04,054] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-46 (state.change.logger)
[2023-07-08 13:50:04,054] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=2, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers HashSet(1) for partition first_topic-0 (state.change.logger)
[2023-07-08 13:50:04,055] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-9 (state.change.logger)
[2023-07-08 13:50:04,055] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-42 (state.change.logger)
[2023-07-08 13:50:04,055] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-21 (state.change.logger)
[2023-07-08 13:50:04,055] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-19 (state.change.logger)
[2023-07-08 13:50:04,055] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-30 (state.change.logger)
[2023-07-08 13:50:04,055] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-28 (state.change.logger)
[2023-07-08 13:50:04,055] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-7 (state.change.logger)
[2023-07-08 13:50:04,055] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-40 (state.change.logger)
[2023-07-08 13:50:04,056] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-3 (state.change.logger)
[2023-07-08 13:50:04,056] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-36 (state.change.logger)
[2023-07-08 13:50:04,056] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-1 (state.change.logger)
[2023-07-08 13:50:04,056] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-34 (state.change.logger)
[2023-07-08 13:50:04,056] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-16 (state.change.logger)
[2023-07-08 13:50:04,056] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-45 (state.change.logger)
[2023-07-08 13:50:04,056] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-43 (state.change.logger)
[2023-07-08 13:50:04,056] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-12 (state.change.logger)
[2023-07-08 13:50:04,056] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-10 (state.change.logger)
[2023-07-08 13:50:04,057] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-24 (state.change.logger)
[2023-07-08 13:50:04,057] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-22 (state.change.logger)
[2023-07-08 13:50:04,057] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-49 (state.change.logger)
[2023-07-08 13:50:04,057] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-18 (state.change.logger)
[2023-07-08 13:50:04,057] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-31 (state.change.logger)
[2023-07-08 13:50:04,057] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-0 (state.change.logger)
[2023-07-08 13:50:04,057] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-27 (state.change.logger)
[2023-07-08 13:50:04,057] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-25 (state.change.logger)
[2023-07-08 13:50:04,057] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-39 (state.change.logger)
[2023-07-08 13:50:04,058] TRACE [Controller id=1 epoch=2] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 13:50:04,058] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-37 (state.change.logger)
[2023-07-08 13:50:04,059] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-6 (state.change.logger)
[2023-07-08 13:50:04,059] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-4 (state.change.logger)
[2023-07-08 13:50:04,059] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-33 (state.change.logger)
[2023-07-08 13:50:04,068] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 2 (state.change.logger)
[2023-07-08 13:50:04,068] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 2 (state.change.logger)
[2023-07-08 13:50:04,068] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 2 (state.change.logger)
[2023-07-08 13:50:04,068] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 2 (state.change.logger)
[2023-07-08 13:50:04,069] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 2 (state.change.logger)
[2023-07-08 13:50:04,069] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 2 (state.change.logger)
[2023-07-08 13:50:04,069] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 2 (state.change.logger)
[2023-07-08 13:50:04,069] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 2 (state.change.logger)
[2023-07-08 13:50:04,069] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 2 (state.change.logger)
[2023-07-08 13:50:04,069] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 2 (state.change.logger)
[2023-07-08 13:50:04,069] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 2 (state.change.logger)
[2023-07-08 13:50:04,069] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 2 (state.change.logger)
[2023-07-08 13:50:04,069] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 2 (state.change.logger)
[2023-07-08 13:50:04,069] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 2 (state.change.logger)
[2023-07-08 13:50:04,069] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 2 (state.change.logger)
[2023-07-08 13:50:04,069] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 2 (state.change.logger)
[2023-07-08 13:50:04,069] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 2 (state.change.logger)
[2023-07-08 13:50:04,127] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,133] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,133] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,134] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,135] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,135] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,136] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,136] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,137] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2023-07-08 13:50:04,137] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,137] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2023-07-08 13:50:04,138] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,138] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2023-07-08 13:50:04,138] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,138] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2023-07-08 13:50:04,139] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,139] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2023-07-08 13:50:04,140] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,140] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2023-07-08 13:50:04,140] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,140] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2023-07-08 13:50:04,141] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,141] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2023-07-08 13:50:04,142] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,142] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2023-07-08 13:50:04,142] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,142] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2023-07-08 13:50:04,143] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,143] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2023-07-08 13:50:04,143] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,143] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2023-07-08 13:50:04,144] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,144] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2023-07-08 13:50:04,146] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,146] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-leader transition for partition first_topic-0 (state.change.logger)
[2023-07-08 13:50:04,146] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,146] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2023-07-08 13:50:04,147] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,147] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2023-07-08 13:50:04,147] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,147] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2023-07-08 13:50:04,148] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,148] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,148] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,149] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,150] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,150] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,151] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,151] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,152] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,152] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:50:04,201] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 1 for partition __consumer_offsets-35 (last update controller epoch 1) (state.change.logger)
[2023-07-08 13:50:04,217] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 1 for partition __consumer_offsets-5 (last update controller epoch 1) (state.change.logger)
[2023-07-08 13:50:04,224] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 1 for partition __consumer_offsets-20 (last update controller epoch 1) (state.change.logger)
[2023-07-08 13:50:04,234] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 1 for partition __consumer_offsets-41 (last update controller epoch 1) (state.change.logger)
[2023-07-08 13:50:04,247] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 1 for partition __consumer_offsets-29 (last update controller epoch 1) (state.change.logger)
[2023-07-08 13:50:04,259] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 1 for partition __consumer_offsets-44 (last update controller epoch 1) (state.change.logger)
[2023-07-08 13:50:04,270] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 1 for partition __consumer_offsets-14 (last update controller epoch 1) (state.change.logger)
[2023-07-08 13:50:04,282] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 1 for partition __consumer_offsets-2 (last update controller epoch 1) (state.change.logger)
[2023-07-08 13:50:04,295] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 1 for partition __consumer_offsets-23 (last update controller epoch 1) (state.change.logger)
[2023-07-08 13:50:04,307] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 1 for partition __consumer_offsets-38 (last update controller epoch 1) (state.change.logger)
[2023-07-08 13:50:04,319] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 1 for partition __consumer_offsets-8 (last update controller epoch 1) (state.change.logger)
[2023-07-08 13:50:04,330] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 1 for partition __consumer_offsets-11 (last update controller epoch 1) (state.change.logger)
[2023-07-08 13:50:04,345] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 1 for partition __consumer_offsets-26 (last update controller epoch 1) (state.change.logger)
[2023-07-08 13:50:04,367] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 1 for partition first_topic-0 (last update controller epoch 1) (state.change.logger)
[2023-07-08 13:50:04,378] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 1 for partition __consumer_offsets-47 (last update controller epoch 1) (state.change.logger)
[2023-07-08 13:50:04,391] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 1 for partition __consumer_offsets-17 (last update controller epoch 1) (state.change.logger)
[2023-07-08 13:50:04,401] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 1 for partition __consumer_offsets-32 (last update controller epoch 1) (state.change.logger)
[2023-07-08 13:50:04,402] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2023-07-08 13:50:04,402] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2023-07-08 13:50:04,402] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2023-07-08 13:50:04,402] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2023-07-08 13:50:04,402] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2023-07-08 13:50:04,402] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2023-07-08 13:50:04,402] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2023-07-08 13:50:04,402] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2023-07-08 13:50:04,402] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2023-07-08 13:50:04,402] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2023-07-08 13:50:04,403] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2023-07-08 13:50:04,403] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2023-07-08 13:50:04,403] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2023-07-08 13:50:04,403] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-leader transition for partition first_topic-0 (state.change.logger)
[2023-07-08 13:50:04,403] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2023-07-08 13:50:04,403] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2023-07-08 13:50:04,403] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2023-07-08 13:50:04,435] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=38,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 1 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 13:50:04,450] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-07-08 13:50:04,450] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-07-08 13:50:04,450] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-07-08 13:50:04,450] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-07-08 13:50:04,450] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-07-08 13:50:04,450] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-07-08 13:50:04,450] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-07-08 13:50:04,451] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-07-08 13:50:04,451] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-07-08 13:50:04,451] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-07-08 13:50:04,451] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-07-08 13:50:04,451] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-07-08 13:50:04,451] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-07-08 13:50:04,451] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-07-08 13:50:04,451] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-07-08 13:50:04,451] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-07-08 13:50:04,451] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-07-08 13:50:04,453] TRACE [Controller id=1 epoch=2] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 2 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 13:50:04,457] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=2, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 2 (state.change.logger)
[2023-07-08 13:50:04,461] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 2 for partition first_topic-0 since its associated leader epoch 3 matches the current leader epoch (state.change.logger)
[2023-07-08 13:50:04,464] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partition_errors=[{topic_name=first_topic,partition_index=0,error_code=11,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 3 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 13:50:04,470] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=2, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,470] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,470] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,470] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,470] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,471] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,472] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,472] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,472] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,472] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,472] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,472] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,472] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,472] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,472] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,472] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,473] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,473] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,473] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,473] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,473] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,473] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,473] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,473] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,473] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,473] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,473] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,473] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,473] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,473] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,473] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,473] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,473] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,473] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=2, leader=-1, leaderEpoch=4, isr=[3], zkVersion=4, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,473] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=2, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-07-08 13:50:04,474] TRACE [Controller id=1 epoch=2] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 4 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 13:52:54,840] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition first_topic-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition first_topic-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:52:59,879] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition first_topic-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition first_topic-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 13:53:04,894] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition first_topic-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition first_topic-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
