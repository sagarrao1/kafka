[2023-07-08 16:28:39,828] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@1a3869f4, name=log4j:logger=state.change.logger (state.change.logger)
[2023-07-08 16:29:15,615] TRACE [Controller id=1 epoch=4] Changed state of replica 1 for partition __consumer_offsets-11 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:29:15,620] TRACE [Controller id=1 epoch=4] Changed state of replica 1 for partition __consumer_offsets-35 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:29:15,620] TRACE [Controller id=1 epoch=4] Changed state of replica 1 for partition __consumer_offsets-29 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:29:15,621] TRACE [Controller id=1 epoch=4] Changed state of replica 1 for partition __consumer_offsets-32 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:29:15,624] TRACE [Controller id=1 epoch=4] Changed state of replica 1 for partition first_topic-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:29:15,625] TRACE [Controller id=1 epoch=4] Changed state of replica 1 for partition __consumer_offsets-41 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:29:15,625] TRACE [Controller id=1 epoch=4] Changed state of replica 1 for partition __consumer_offsets-8 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:29:15,627] TRACE [Controller id=1 epoch=4] Changed state of replica 1 for partition __consumer_offsets-5 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:29:15,627] TRACE [Controller id=1 epoch=4] Changed state of replica 1 for partition __consumer_offsets-20 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:29:15,628] TRACE [Controller id=1 epoch=4] Changed state of replica 1 for partition __consumer_offsets-47 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:29:15,628] TRACE [Controller id=1 epoch=4] Changed state of replica 1 for partition __consumer_offsets-23 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:29:15,629] TRACE [Controller id=1 epoch=4] Changed state of replica 1 for partition __consumer_offsets-38 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:29:15,629] TRACE [Controller id=1 epoch=4] Changed state of replica 1 for partition __consumer_offsets-17 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:29:15,629] TRACE [Controller id=1 epoch=4] Changed state of replica 1 for partition __consumer_offsets-14 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:29:15,630] TRACE [Controller id=1 epoch=4] Changed state of replica 1 for partition __consumer_offsets-26 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:29:15,630] TRACE [Controller id=1 epoch=4] Changed state of replica 1 for partition __consumer_offsets-2 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:29:15,630] TRACE [Controller id=1 epoch=4] Changed state of replica 1 for partition __consumer_offsets-44 from OnlineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:29:15,634] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-47 (state.change.logger)
[2023-07-08 16:29:15,634] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-14 (state.change.logger)
[2023-07-08 16:29:15,634] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-11 (state.change.logger)
[2023-07-08 16:29:15,635] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition first_topic-0 (state.change.logger)
[2023-07-08 16:29:15,635] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-44 (state.change.logger)
[2023-07-08 16:29:15,635] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-41 (state.change.logger)
[2023-07-08 16:29:15,635] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-23 (state.change.logger)
[2023-07-08 16:29:15,635] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-20 (state.change.logger)
[2023-07-08 16:29:15,635] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-17 (state.change.logger)
[2023-07-08 16:29:15,635] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-32 (state.change.logger)
[2023-07-08 16:29:15,635] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-29 (state.change.logger)
[2023-07-08 16:29:15,636] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-26 (state.change.logger)
[2023-07-08 16:29:15,636] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-8 (state.change.logger)
[2023-07-08 16:29:15,636] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-5 (state.change.logger)
[2023-07-08 16:29:15,636] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-38 (state.change.logger)
[2023-07-08 16:29:15,637] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-35 (state.change.logger)
[2023-07-08 16:29:15,637] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-2 (state.change.logger)
[2023-07-08 16:29:15,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-47 (state.change.logger)
[2023-07-08 16:29:15,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-14 (state.change.logger)
[2023-07-08 16:29:15,645] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-11 (state.change.logger)
[2023-07-08 16:29:15,645] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers HashSet(1) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:29:15,645] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-44 (state.change.logger)
[2023-07-08 16:29:15,645] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-41 (state.change.logger)
[2023-07-08 16:29:15,645] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-23 (state.change.logger)
[2023-07-08 16:29:15,645] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-20 (state.change.logger)
[2023-07-08 16:29:15,645] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-17 (state.change.logger)
[2023-07-08 16:29:15,645] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-32 (state.change.logger)
[2023-07-08 16:29:15,646] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-29 (state.change.logger)
[2023-07-08 16:29:15,646] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-26 (state.change.logger)
[2023-07-08 16:29:15,646] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-8 (state.change.logger)
[2023-07-08 16:29:15,646] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-5 (state.change.logger)
[2023-07-08 16:29:15,646] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-38 (state.change.logger)
[2023-07-08 16:29:15,646] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-35 (state.change.logger)
[2023-07-08 16:29:15,646] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(1) for partition __consumer_offsets-2 (state.change.logger)
[2023-07-08 16:29:15,748] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-30 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,748] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-21 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,749] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-33 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,749] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-36 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,751] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition first_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,751] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-48 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,751] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-6 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,752] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,752] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-45 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,752] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-27 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,752] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-9 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,753] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-42 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,753] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-3 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,753] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-18 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,753] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-15 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,753] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-24 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,754] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-39 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,754] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-12 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,810] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-22 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,810] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-4 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,810] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-25 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,811] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-49 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,811] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-31 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,811] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-37 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,811] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition first_topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,811] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-19 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,812] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-13 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,812] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-43 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,812] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,812] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-34 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,812] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-7 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,812] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-46 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,813] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-16 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,813] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-28 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,813] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-10 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,813] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-40 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2023-07-08 16:29:15,813] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition first_topic-0 (state.change.logger)
[2023-07-08 16:29:15,814] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-15 (state.change.logger)
[2023-07-08 16:29:15,814] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-48 (state.change.logger)
[2023-07-08 16:29:15,814] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-13 (state.change.logger)
[2023-07-08 16:29:15,814] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-46 (state.change.logger)
[2023-07-08 16:29:15,814] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers HashSet(1) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:29:15,814] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-9 (state.change.logger)
[2023-07-08 16:29:15,814] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-42 (state.change.logger)
[2023-07-08 16:29:15,814] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-21 (state.change.logger)
[2023-07-08 16:29:15,814] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-19 (state.change.logger)
[2023-07-08 16:29:15,815] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-30 (state.change.logger)
[2023-07-08 16:29:15,815] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-28 (state.change.logger)
[2023-07-08 16:29:15,815] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-7 (state.change.logger)
[2023-07-08 16:29:15,815] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-40 (state.change.logger)
[2023-07-08 16:29:15,815] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-3 (state.change.logger)
[2023-07-08 16:29:15,815] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-36 (state.change.logger)
[2023-07-08 16:29:15,815] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-1 (state.change.logger)
[2023-07-08 16:29:15,815] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-34 (state.change.logger)
[2023-07-08 16:29:15,815] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-16 (state.change.logger)
[2023-07-08 16:29:15,815] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-45 (state.change.logger)
[2023-07-08 16:29:15,816] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-43 (state.change.logger)
[2023-07-08 16:29:15,816] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-12 (state.change.logger)
[2023-07-08 16:29:15,816] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-10 (state.change.logger)
[2023-07-08 16:29:15,816] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-24 (state.change.logger)
[2023-07-08 16:29:15,816] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-22 (state.change.logger)
[2023-07-08 16:29:15,816] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-49 (state.change.logger)
[2023-07-08 16:29:15,816] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-18 (state.change.logger)
[2023-07-08 16:29:15,816] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-31 (state.change.logger)
[2023-07-08 16:29:15,816] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-0 (state.change.logger)
[2023-07-08 16:29:15,817] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-27 (state.change.logger)
[2023-07-08 16:29:15,817] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-25 (state.change.logger)
[2023-07-08 16:29:15,817] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-39 (state.change.logger)
[2023-07-08 16:29:15,817] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-37 (state.change.logger)
[2023-07-08 16:29:15,817] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-6 (state.change.logger)
[2023-07-08 16:29:15,817] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1) for partition __consumer_offsets-4 (state.change.logger)
[2023-07-08 16:29:15,817] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-33 (state.change.logger)
[2023-07-08 16:29:15,824] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:29:15,834] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:29:15,835] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:29:15,835] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:29:15,835] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:29:15,835] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:29:15,835] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:29:15,835] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:29:15,835] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:29:15,835] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:29:15,835] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:29:15,835] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:29:15,835] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:29:15,835] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:29:15,835] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:29:15,835] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:29:15,836] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:29:15,836] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:29:15,902] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,906] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2023-07-08 16:29:15,908] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,908] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2023-07-08 16:29:15,909] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,909] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2023-07-08 16:29:15,910] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,910] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2023-07-08 16:29:15,911] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,911] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2023-07-08 16:29:15,911] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,911] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2023-07-08 16:29:15,912] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,912] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2023-07-08 16:29:15,913] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,913] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2023-07-08 16:29:15,913] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,913] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2023-07-08 16:29:15,914] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,914] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2023-07-08 16:29:15,915] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,915] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2023-07-08 16:29:15,915] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,915] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2023-07-08 16:29:15,916] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,916] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2023-07-08 16:29:15,917] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,917] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-leader transition for partition first_topic-0 (state.change.logger)
[2023-07-08 16:29:15,917] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,917] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2023-07-08 16:29:15,918] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,918] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2023-07-08 16:29:15,919] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2023-07-08 16:29:15,918] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,920] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,921] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,921] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,923] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,924] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,924] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,925] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,926] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,927] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,927] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,928] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,928] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,929] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,930] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,930] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,931] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,931] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:29:15,976] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 1 for partition __consumer_offsets-35 (last update controller epoch 1) (state.change.logger)
[2023-07-08 16:29:15,996] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 1 for partition __consumer_offsets-5 (last update controller epoch 1) (state.change.logger)
[2023-07-08 16:29:16,005] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 1 for partition __consumer_offsets-20 (last update controller epoch 1) (state.change.logger)
[2023-07-08 16:29:16,030] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 1 for partition __consumer_offsets-41 (last update controller epoch 1) (state.change.logger)
[2023-07-08 16:29:16,051] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 1 for partition __consumer_offsets-29 (last update controller epoch 1) (state.change.logger)
[2023-07-08 16:29:16,061] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 1 for partition __consumer_offsets-44 (last update controller epoch 1) (state.change.logger)
[2023-07-08 16:29:16,073] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 1 for partition __consumer_offsets-14 (last update controller epoch 1) (state.change.logger)
[2023-07-08 16:29:16,088] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 1 for partition __consumer_offsets-2 (last update controller epoch 1) (state.change.logger)
[2023-07-08 16:29:16,100] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 1 for partition __consumer_offsets-23 (last update controller epoch 1) (state.change.logger)
[2023-07-08 16:29:16,115] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 1 for partition __consumer_offsets-38 (last update controller epoch 1) (state.change.logger)
[2023-07-08 16:29:16,131] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 1 for partition __consumer_offsets-8 (last update controller epoch 1) (state.change.logger)
[2023-07-08 16:29:16,146] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 1 for partition __consumer_offsets-11 (last update controller epoch 1) (state.change.logger)
[2023-07-08 16:29:16,156] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 1 for partition __consumer_offsets-26 (last update controller epoch 1) (state.change.logger)
[2023-07-08 16:29:16,163] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 1 for partition first_topic-0 (last update controller epoch 1) (state.change.logger)
[2023-07-08 16:29:16,175] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 1 for partition __consumer_offsets-47 (last update controller epoch 1) (state.change.logger)
[2023-07-08 16:29:16,186] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 1 for partition __consumer_offsets-17 (last update controller epoch 1) (state.change.logger)
[2023-07-08 16:29:16,198] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 1 for partition __consumer_offsets-32 (last update controller epoch 1) (state.change.logger)
[2023-07-08 16:29:16,200] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2023-07-08 16:29:16,200] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2023-07-08 16:29:16,200] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2023-07-08 16:29:16,200] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2023-07-08 16:29:16,200] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2023-07-08 16:29:16,200] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2023-07-08 16:29:16,200] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2023-07-08 16:29:16,200] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2023-07-08 16:29:16,200] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2023-07-08 16:29:16,200] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2023-07-08 16:29:16,200] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2023-07-08 16:29:16,200] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2023-07-08 16:29:16,200] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2023-07-08 16:29:16,201] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-leader transition for partition first_topic-0 (state.change.logger)
[2023-07-08 16:29:16,201] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2023-07-08 16:29:16,201] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2023-07-08 16:29:16,201] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2023-07-08 16:29:16,238] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=38,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 1 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:29:16,255] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:29:16,255] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:29:16,255] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:29:16,255] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:29:16,255] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:29:16,255] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:29:16,255] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:29:16,255] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:29:16,255] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:29:16,255] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:29:16,255] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:29:16,255] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:29:16,255] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:29:16,255] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:29:16,255] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:29:16,255] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:29:16,255] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:29:16,256] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 2 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:29:16,258] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:29:16,260] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 4 for partition first_topic-0 since its associated leader epoch 3 matches the current leader epoch (state.change.logger)
[2023-07-08 16:29:16,263] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=first_topic,partition_index=0,error_code=11,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 3 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:29:16,269] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,269] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,269] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,269] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,269] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,269] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,270] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,270] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,270] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,270] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,270] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,271] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,271] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,271] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,271] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,271] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,271] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,271] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,271] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,271] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,271] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,271] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,271] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,271] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,271] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,273] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,273] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,273] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,273] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,273] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,273] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,273] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,273] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,273] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,273] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:29:16,274] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 4 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-13 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-46 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-9 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-42 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-21 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-17 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-30 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-26 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-5 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-38 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-1 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 5 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-34 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-16 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-45 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-12 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-41 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-24 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-20 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-49 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-0 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-29 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-25 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-8 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-37 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-4 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-33 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-15 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-48 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-11 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3]) to brokers HashSet(2) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-44 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-23 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-19 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-32 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-28 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-7 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-40 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-3 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-36 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-47 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-14 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-43 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-10 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-22 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-18 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) to brokers HashSet(2) for partition __consumer_offsets-31 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-27 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-39 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-6 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-35 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(2) for partition __consumer_offsets-2 (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-21 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-15 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-48 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-18 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-36 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-30 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-24 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-39 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-6 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-42 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-0 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-3 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-27 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-33 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:30:00,248] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-9 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition first_topic-0 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-12 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-45 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-15 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-48 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-45 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition first_topic-0 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-12 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-9 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-42 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-24 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-21 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-18 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-0 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-30 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-27 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-39 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-6 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-3 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-36 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-33 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-15 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-48 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-9 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-42 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-21 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-30 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-3 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-36 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-45 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-12 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-24 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-18 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-0 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-27 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-39 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-6 (state.change.logger)
[2023-07-08 16:30:00,264] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-33 (state.change.logger)
[2023-07-08 16:30:00,280] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-07-08 16:30:00,280] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-07-08 16:30:00,280] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-07-08 16:30:00,280] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-07-08 16:30:00,280] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-07-08 16:30:00,280] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-07-08 16:30:00,280] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-07-08 16:30:00,280] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-07-08 16:30:00,280] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-07-08 16:30:00,280] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-07-08 16:30:00,280] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-07-08 16:30:00,280] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-07-08 16:30:00,280] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-07-08 16:30:00,280] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-07-08 16:30:00,280] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-07-08 16:30:00,280] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-07-08 16:30:00,280] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-07-08 16:30:00,280] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2023-07-08 16:30:00,280] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 6 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:30:00,326] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:30:00,326] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:30:00,326] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:30:00,326] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:30:00,326] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:30:00,326] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:30:00,326] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:30:00,326] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:30:00,326] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:30:00,326] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:30:00,326] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:30:00,326] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:30:00,326] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:30:00,326] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:30:00,326] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:30:00,326] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:30:00,326] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-30 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=5, isr=List(2), zkVersion=5) (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-48 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=5, isr=List(2), zkVersion=5) (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=5, isr=List(2), zkVersion=5) (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=5, isr=List(2), zkVersion=5) (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=5, isr=List(2), zkVersion=5) (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=5, isr=List(2), zkVersion=5) (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=5, isr=List(2), zkVersion=5) (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-36 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=5, isr=List(2), zkVersion=5) (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-42 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=5, isr=List(2), zkVersion=5) (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=5, isr=List(2), zkVersion=5) (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-18 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=5, isr=List(2), zkVersion=5) (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=5, isr=List(2), zkVersion=5) (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-24 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=5, isr=List(2), zkVersion=5) (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-6 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=5, isr=List(2), zkVersion=5) (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=5, isr=List(2), zkVersion=5) (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-12 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=5, isr=List(2), zkVersion=5) (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=5, isr=List(2), zkVersion=5) (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-15 (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-48 (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-45 (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-12 (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-9 (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-42 (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-24 (state.change.logger)
[2023-07-08 16:30:00,326] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-21 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-18 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-0 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-30 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-27 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-39 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-6 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-3 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-36 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-33 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-15 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-48 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-45 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-12 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-9 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-42 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-24 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-21 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-18 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-0 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-30 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-27 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-39 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-6 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-3 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-36 (state.change.logger)
[2023-07-08 16:30:00,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(1, 2) for partition __consumer_offsets-33 (state.change.logger)
[2023-07-08 16:30:00,347] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:30:00,347] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:30:00,347] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:30:00,347] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:30:00,347] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:30:00,347] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:30:00,347] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:30:00,347] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:30:00,347] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:30:00,347] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:30:00,347] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:30:00,347] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:30:00,347] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:30:00,347] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:30:00,347] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:30:00,347] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:30:00,347] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:30:00,347] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 7 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,876] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:30:00,892] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-08 16:30:00,907] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:00,907] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:00,907] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:00,907] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:00,907] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:00,907] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:00,907] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:00,907] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:00,907] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:00,907] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:00,907] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:00,907] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:00,907] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:00,907] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:00,907] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:00,907] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:00,907] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:00,907] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:00,970] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-3 with leader -1 (state.change.logger)
[2023-07-08 16:30:00,970] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-18 with leader -1 (state.change.logger)
[2023-07-08 16:30:00,970] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-39 with leader -1 (state.change.logger)
[2023-07-08 16:30:00,970] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-9 with leader -1 (state.change.logger)
[2023-07-08 16:30:00,970] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-24 with leader -1 (state.change.logger)
[2023-07-08 16:30:00,970] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-27 with leader -1 (state.change.logger)
[2023-07-08 16:30:00,970] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-42 with leader -1 (state.change.logger)
[2023-07-08 16:30:00,970] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-12 with leader -1 (state.change.logger)
[2023-07-08 16:30:00,970] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-33 with leader -1 (state.change.logger)
[2023-07-08 16:30:00,970] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-48 with leader -1 (state.change.logger)
[2023-07-08 16:30:00,970] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-21 with leader -1 (state.change.logger)
[2023-07-08 16:30:00,970] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-36 with leader -1 (state.change.logger)
[2023-07-08 16:30:00,970] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-6 with leader -1 (state.change.logger)
[2023-07-08 16:30:00,970] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-45 with leader -1 (state.change.logger)
[2023-07-08 16:30:00,970] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition first_topic-0 with leader 1 (state.change.logger)
[2023-07-08 16:30:00,970] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-15 with leader -1 (state.change.logger)
[2023-07-08 16:30:00,970] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-30 with leader -1 (state.change.logger)
[2023-07-08 16:30:00,970] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-0 with leader -1 (state.change.logger)
[2023-07-08 16:30:00,986] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-3 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:30:00,986] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-18 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:30:00,986] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-39 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:30:01,001] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-9 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:30:01,001] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-24 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:30:01,001] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-27 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:30:01,017] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-42 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:30:01,017] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-12 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:30:01,017] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-33 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:30:01,017] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-48 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:30:01,033] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-21 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:30:01,046] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-36 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:30:01,048] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-6 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:30:01,048] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-45 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:30:01,079] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-15 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:30:01,079] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-30 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:30:01,079] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-0 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:30:01,095] TRACE [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 4 with correlation id 1 for partition first_topic-0 with leader 1 (state.change.logger)
[2023-07-08 16:30:01,110] TRACE [Broker id=2] Truncated logs and checkpointed recovery boundaries for partition first_topic-0 as part of become-follower request with correlation id 1 from controller 1 epoch 4 with leader 1 (state.change.logger)
[2023-07-08 16:30:01,173] TRACE [Broker id=2] Started fetcher to new leader as part of become-follower request from controller 1 epoch 4 with correlation id 1 for partition first_topic-0 with leader BrokerEndPoint(id=1, host=localhost:9092) (state.change.logger)
[2023-07-08 16:30:01,173] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-3 with leader -1 (state.change.logger)
[2023-07-08 16:30:01,173] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-18 with leader -1 (state.change.logger)
[2023-07-08 16:30:01,173] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-39 with leader -1 (state.change.logger)
[2023-07-08 16:30:01,173] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-9 with leader -1 (state.change.logger)
[2023-07-08 16:30:01,173] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-24 with leader -1 (state.change.logger)
[2023-07-08 16:30:01,173] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-27 with leader -1 (state.change.logger)
[2023-07-08 16:30:01,173] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-42 with leader -1 (state.change.logger)
[2023-07-08 16:30:01,173] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-12 with leader -1 (state.change.logger)
[2023-07-08 16:30:01,173] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-33 with leader -1 (state.change.logger)
[2023-07-08 16:30:01,173] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-48 with leader -1 (state.change.logger)
[2023-07-08 16:30:01,173] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-21 with leader -1 (state.change.logger)
[2023-07-08 16:30:01,173] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-36 with leader -1 (state.change.logger)
[2023-07-08 16:30:01,173] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-6 with leader -1 (state.change.logger)
[2023-07-08 16:30:01,173] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-45 with leader -1 (state.change.logger)
[2023-07-08 16:30:01,173] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition first_topic-0 with leader 1 (state.change.logger)
[2023-07-08 16:30:01,173] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-15 with leader -1 (state.change.logger)
[2023-07-08 16:30:01,173] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-30 with leader -1 (state.change.logger)
[2023-07-08 16:30:01,173] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-0 with leader -1 (state.change.logger)
[2023-07-08 16:30:01,204] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=15,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=48,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=0,_tagged_fields={}},{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=12,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=42,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=24,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=18,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=30,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=6,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=36,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 1 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-08 16:30:01,204] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=3, isr=[1], zkVersion=4, replicas=[3, 2, 1], offlineReplicas=[3]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:30:01,204] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:30:01,204] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:30:01,204] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:30:01,204] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:30:01,204] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:30:01,204] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:30:01,204] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:30:01,204] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:30:01,204] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:30:01,204] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:30:01,204] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=4, isr=[2], zkVersion=4, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 2 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-3 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-18 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-39 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-9 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-27 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-42 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-33 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-21 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-6 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-45 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-15 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-30 (state.change.logger)
[2023-07-08 16:30:01,220] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2023-07-08 16:30:01,267] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-3 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:30:01,283] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-18 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:30:01,283] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-39 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:30:01,299] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-9 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:30:01,314] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-24 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:30:01,314] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-27 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:30:01,330] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-42 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:30:01,348] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-12 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:30:01,362] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-33 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:30:01,362] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-48 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:30:01,377] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-21 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:30:01,377] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-36 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:30:01,393] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-6 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:30:01,393] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-45 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:30:01,409] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-15 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:30:01,409] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-30 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:30:01,424] TRACE [Broker id=2] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-0 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:30:01,424] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-3 (state.change.logger)
[2023-07-08 16:30:01,424] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-18 (state.change.logger)
[2023-07-08 16:30:01,424] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-39 (state.change.logger)
[2023-07-08 16:30:01,424] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-9 (state.change.logger)
[2023-07-08 16:30:01,424] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2023-07-08 16:30:01,424] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-27 (state.change.logger)
[2023-07-08 16:30:01,424] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-42 (state.change.logger)
[2023-07-08 16:30:01,424] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2023-07-08 16:30:01,424] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-33 (state.change.logger)
[2023-07-08 16:30:01,424] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2023-07-08 16:30:01,424] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-21 (state.change.logger)
[2023-07-08 16:30:01,424] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2023-07-08 16:30:01,424] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-6 (state.change.logger)
[2023-07-08 16:30:01,424] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-45 (state.change.logger)
[2023-07-08 16:30:01,424] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-15 (state.change.logger)
[2023-07-08 16:30:01,424] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-30 (state.change.logger)
[2023-07-08 16:30:01,424] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2023-07-08 16:30:01,456] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=15,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=48,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=12,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=42,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=24,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=18,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=30,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=6,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=36,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 3 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-08 16:30:01,456] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:30:01,456] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:30:01,456] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:30:01,456] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:30:01,456] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:30:01,456] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:30:01,456] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:30:01,456] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:30:01,456] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:30:01,456] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:30:01,456] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:30:01,456] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:30:01,456] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:30:01,456] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:30:01,456] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:30:01,456] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:30:01,456] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:30:01,456] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 4 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-08 16:30:07,418] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1, 2], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:30:07,418] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1, 2], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[3]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2023-07-08 16:30:07,418] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 8 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:30:07,418] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1, 2], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[3]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 5 (state.change.logger)
[2023-07-08 16:30:07,434] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 5 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-13 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-46 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-9 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-42 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-21 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-17 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-30 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-26 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-5 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-38 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-1 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-34 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-16 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-45 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-12 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-41 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-24 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-20 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-49 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-0 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-29 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-25 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-8 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-37 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-4 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-33 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-15 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 6 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-48 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 9 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-11 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1, 2], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[]) to brokers HashSet(3) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-44 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-23 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-19 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-32 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-28 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-7 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-40 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-3 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-36 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-47 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-14 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-43 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-10 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-22 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-18 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-31 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-27 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-39 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-6 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-35 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers HashSet(3) for partition __consumer_offsets-2 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-46 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-19 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-31 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-49 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-40 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-7 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-34 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-43 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-13 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-28 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-37 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-1 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition first_topic-0 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-22 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-4 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-10 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-16 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-25 from OfflineReplica to OnlineReplica (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-16 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-13 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-46 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-43 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1, 2], zkVersion=5, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition first_topic-0 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-10 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-22 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-19 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-49 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-31 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-28 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-25 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-7 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-40 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-37 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-4 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-1 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-34 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-13 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-46 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1, 2], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-19 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-28 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-7 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-40 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-1 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-34 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-16 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-43 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-10 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-22 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-49 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-31 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-25 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-37 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-4 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1, 2], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1, 2], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2023-07-08 16:37:55,311] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 7 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-08 16:37:55,326] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 10 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-22 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), zkVersion=7) (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-4 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), zkVersion=7) (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-25 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), zkVersion=7) (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-49 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), zkVersion=7) (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-31 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), zkVersion=7) (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-37 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), zkVersion=7) (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-19 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), zkVersion=7) (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-13 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), zkVersion=7) (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-43 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), zkVersion=7) (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), zkVersion=7) (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-34 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), zkVersion=7) (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-7 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), zkVersion=7) (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-46 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), zkVersion=7) (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-16 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), zkVersion=7) (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-28 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), zkVersion=7) (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-10 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), zkVersion=7) (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-40 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), zkVersion=7) (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-16 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-13 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-46 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-43 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-10 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-22 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-19 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-49 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-31 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-28 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-25 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-7 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-40 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-37 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-4 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-1 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-34 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-16 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-13 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-46 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-43 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-10 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-22 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-19 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-49 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-31 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-28 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-25 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-7 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-40 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-37 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-4 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-1 (state.change.logger)
[2023-07-08 16:37:55,342] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition __consumer_offsets-34 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 11 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2023-07-08 16:37:55,357] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 8 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1, 2], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,875] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,891] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,891] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,891] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,891] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,891] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,891] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,892] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,892] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,892] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,892] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,892] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,892] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,892] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,892] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=2, leaderEpoch=5, isr=[2], zkVersion=5, replicas=[2], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,892] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,892] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 0 (state.change.logger)
[2023-07-08 16:37:55,892] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker localhost:9094 (id: 3 rack: null) (state.change.logger)
[2023-07-08 16:37:55,907] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1, 2], zkVersion=5, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:55,907] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:55,907] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:55,907] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:55,907] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:55,907] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:55,907] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:55,907] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:55,907] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:55,907] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:55,907] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:55,907] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:55,907] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:55,907] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:55,907] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:55,907] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:55,907] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:55,907] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:55,954] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-37 with leader -1 (state.change.logger)
[2023-07-08 16:37:55,954] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-7 with leader -1 (state.change.logger)
[2023-07-08 16:37:55,954] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-22 with leader -1 (state.change.logger)
[2023-07-08 16:37:55,954] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-10 with leader -1 (state.change.logger)
[2023-07-08 16:37:55,954] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-31 with leader -1 (state.change.logger)
[2023-07-08 16:37:55,954] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-46 with leader -1 (state.change.logger)
[2023-07-08 16:37:55,954] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-1 with leader -1 (state.change.logger)
[2023-07-08 16:37:55,954] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-16 with leader -1 (state.change.logger)
[2023-07-08 16:37:55,954] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-19 with leader -1 (state.change.logger)
[2023-07-08 16:37:55,954] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-34 with leader -1 (state.change.logger)
[2023-07-08 16:37:55,954] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-4 with leader -1 (state.change.logger)
[2023-07-08 16:37:55,954] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-25 with leader -1 (state.change.logger)
[2023-07-08 16:37:55,954] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-40 with leader -1 (state.change.logger)
[2023-07-08 16:37:55,954] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-43 with leader -1 (state.change.logger)
[2023-07-08 16:37:55,954] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-13 with leader -1 (state.change.logger)
[2023-07-08 16:37:55,954] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition first_topic-0 with leader 1 (state.change.logger)
[2023-07-08 16:37:55,954] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-28 with leader -1 (state.change.logger)
[2023-07-08 16:37:55,954] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 4 starting the become-follower transition for partition __consumer_offsets-49 with leader -1 (state.change.logger)
[2023-07-08 16:37:55,970] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-37 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:37:55,970] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-7 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:37:55,985] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-22 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:37:55,985] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-10 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:37:55,992] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-31 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:37:55,992] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-46 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:37:55,992] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-1 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:37:56,001] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-16 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:37:56,001] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-19 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:37:56,001] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-34 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:37:56,001] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-4 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:37:56,017] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-25 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:37:56,017] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-40 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:37:56,017] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-43 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:37:56,033] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-13 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:37:56,048] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-28 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:37:56,048] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 4 for partition __consumer_offsets-49 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-07-08 16:37:56,048] TRACE [Broker id=3] Stopped fetchers as part of become-follower request from controller 1 epoch 4 with correlation id 1 for partition first_topic-0 with leader 1 (state.change.logger)
[2023-07-08 16:37:56,064] TRACE [Broker id=3] Truncated logs and checkpointed recovery boundaries for partition first_topic-0 as part of become-follower request with correlation id 1 from controller 1 epoch 4 with leader 1 (state.change.logger)
[2023-07-08 16:37:56,111] TRACE [Broker id=3] Started fetcher to new leader as part of become-follower request from controller 1 epoch 4 with correlation id 1 for partition first_topic-0 with leader BrokerEndPoint(id=1, host=localhost:9092) (state.change.logger)
[2023-07-08 16:37:56,111] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-37 with leader -1 (state.change.logger)
[2023-07-08 16:37:56,111] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-7 with leader -1 (state.change.logger)
[2023-07-08 16:37:56,111] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-22 with leader -1 (state.change.logger)
[2023-07-08 16:37:56,111] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-10 with leader -1 (state.change.logger)
[2023-07-08 16:37:56,111] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-31 with leader -1 (state.change.logger)
[2023-07-08 16:37:56,111] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-46 with leader -1 (state.change.logger)
[2023-07-08 16:37:56,111] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-1 with leader -1 (state.change.logger)
[2023-07-08 16:37:56,111] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-16 with leader -1 (state.change.logger)
[2023-07-08 16:37:56,111] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-19 with leader -1 (state.change.logger)
[2023-07-08 16:37:56,111] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-34 with leader -1 (state.change.logger)
[2023-07-08 16:37:56,111] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-4 with leader -1 (state.change.logger)
[2023-07-08 16:37:56,111] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-25 with leader -1 (state.change.logger)
[2023-07-08 16:37:56,111] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-40 with leader -1 (state.change.logger)
[2023-07-08 16:37:56,111] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-43 with leader -1 (state.change.logger)
[2023-07-08 16:37:56,111] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-13 with leader -1 (state.change.logger)
[2023-07-08 16:37:56,111] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition first_topic-0 with leader 1 (state.change.logger)
[2023-07-08 16:37:56,111] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-28 with leader -1 (state.change.logger)
[2023-07-08 16:37:56,111] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 4 for the become-follower transition for partition __consumer_offsets-49 with leader -1 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=16,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=13,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=46,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=43,error_code=0,_tagged_fields={}},{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=10,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=22,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=19,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=49,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=31,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=28,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=25,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=7,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=40,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=37,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=4,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=34,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 1 sent to broker localhost:9094 (id: 3 rack: null) (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1, 2], zkVersion=5, replicas=[3, 2, 1], offlineReplicas=[]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[3], zkVersion=6, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 2 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 2 sent to broker localhost:9094 (id: 3 rack: null) (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-37 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-7 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-22 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-10 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-31 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-46 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-1 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-19 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-34 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-25 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-43 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-13 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
[2023-07-08 16:37:56,142] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 4 starting the become-leader transition for partition __consumer_offsets-49 (state.change.logger)
[2023-07-08 16:37:56,174] TRACE [Broker id=3] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-37 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:37:56,193] TRACE [Broker id=3] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-7 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:37:56,193] TRACE [Broker id=3] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-22 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:37:56,205] TRACE [Broker id=3] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-10 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:37:56,205] TRACE [Broker id=3] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-31 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:37:56,221] TRACE [Broker id=3] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-46 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:37:56,221] TRACE [Broker id=3] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-1 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:37:56,221] TRACE [Broker id=3] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-16 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:37:56,236] TRACE [Broker id=3] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-19 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:37:56,236] TRACE [Broker id=3] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-34 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:37:56,252] TRACE [Broker id=3] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-4 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:37:56,252] TRACE [Broker id=3] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-25 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:37:56,252] TRACE [Broker id=3] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-40 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:37:56,283] TRACE [Broker id=3] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-43 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:37:56,283] TRACE [Broker id=3] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-13 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:37:56,293] TRACE [Broker id=3] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-28 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:37:56,299] TRACE [Broker id=3] Stopped fetchers as part of become-leader request from controller 1 epoch 4 with correlation id 3 for partition __consumer_offsets-49 (last update controller epoch 4) (state.change.logger)
[2023-07-08 16:37:56,299] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-37 (state.change.logger)
[2023-07-08 16:37:56,299] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-7 (state.change.logger)
[2023-07-08 16:37:56,299] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-22 (state.change.logger)
[2023-07-08 16:37:56,299] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-10 (state.change.logger)
[2023-07-08 16:37:56,299] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-31 (state.change.logger)
[2023-07-08 16:37:56,299] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-46 (state.change.logger)
[2023-07-08 16:37:56,299] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-1 (state.change.logger)
[2023-07-08 16:37:56,299] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
[2023-07-08 16:37:56,299] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-19 (state.change.logger)
[2023-07-08 16:37:56,299] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-34 (state.change.logger)
[2023-07-08 16:37:56,299] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
[2023-07-08 16:37:56,299] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-25 (state.change.logger)
[2023-07-08 16:37:56,299] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
[2023-07-08 16:37:56,299] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-43 (state.change.logger)
[2023-07-08 16:37:56,299] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-13 (state.change.logger)
[2023-07-08 16:37:56,299] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
[2023-07-08 16:37:56,299] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 4 for the become-leader transition for partition __consumer_offsets-49 (state.change.logger)
[2023-07-08 16:37:56,315] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=16,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=13,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=46,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=43,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=10,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=22,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=19,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=49,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=31,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=28,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=25,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=7,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=40,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=37,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=4,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=34,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 3 sent to broker localhost:9094 (id: 3 rack: null) (state.change.logger)
[2023-07-08 16:37:56,315] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:37:56,315] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:37:56,315] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:37:56,315] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:37:56,315] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:37:56,315] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:37:56,315] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:37:56,315] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:37:56,315] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:37:56,315] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:37:56,315] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:37:56,315] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:37:56,315] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:37:56,315] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:37:56,315] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:37:56,315] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:37:56,315] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=3, leaderEpoch=7, isr=[3], zkVersion=7, replicas=[3], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2023-07-08 16:37:56,315] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 4 sent to broker localhost:9094 (id: 3 rack: null) (state.change.logger)
[2023-07-08 16:37:57,414] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1, 2, 3], zkVersion=6, replicas=[3, 2, 1], offlineReplicas=[]) to brokers HashSet(1, 2, 3) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:37:57,430] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1, 2, 3], zkVersion=6, replicas=[3, 2, 1], offlineReplicas=[]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2023-07-08 16:37:57,430] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1, 2, 3], zkVersion=6, replicas=[3, 2, 1], offlineReplicas=[]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2023-07-08 16:37:57,430] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=3, isr=[1, 2, 3], zkVersion=6, replicas=[3, 2, 1], offlineReplicas=[]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 5 (state.change.logger)
[2023-07-08 16:37:57,430] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 12 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:37:57,430] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 9 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-08 16:37:57,430] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 5 sent to broker localhost:9094 (id: 3 rack: null) (state.change.logger)
[2023-07-08 16:55:48,559] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition first_topic-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:48,559] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=4, isr=[1, 2], zkVersion=7, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:48,559] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=4, isr=[1, 2], zkVersion=7, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:48,559] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=4, isr=[1, 2], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3]) to brokers HashSet(1, 2, 3) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:48,573] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=4, isr=[1, 2], zkVersion=7, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 13 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:55:48,575] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 13 from controller 1 epoch 4 starting the become-leader transition for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:48,575] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=4, isr=[1, 2], zkVersion=7, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 10 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:55:48,575] TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 4 starting the become-follower transition for partition first_topic-0 with leader 1 (state.change.logger)
[2023-07-08 16:55:48,575] TRACE [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 4 with correlation id 10 for partition first_topic-0 with leader 1 (state.change.logger)
[2023-07-08 16:55:48,575] TRACE [Broker id=2] Truncated logs and checkpointed recovery boundaries for partition first_topic-0 as part of become-follower request with correlation id 10 from controller 1 epoch 4 with leader 1 (state.change.logger)
[2023-07-08 16:55:48,575] TRACE [Broker id=2] Started fetcher to new leader as part of become-follower request from controller 1 epoch 4 with correlation id 10 for partition first_topic-0 with leader BrokerEndPoint(id=1, host=localhost:9092) (state.change.logger)
[2023-07-08 16:55:48,575] TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 4 for the become-follower transition for partition first_topic-0 with leader 1 (state.change.logger)
[2023-07-08 16:55:48,575] TRACE [Broker id=3] Handling stop replica (delete=false) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:48,575] TRACE [Broker id=3] Finished handling stop replica (delete=false) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:48,575] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 10 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-08 16:55:48,575] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=4, isr=[1, 2], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2023-07-08 16:55:48,575] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 11 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-08 16:55:48,575] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 13 from controller 1 epoch 4 for partition first_topic-0 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2023-07-08 16:55:48,575] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 13 from controller 1 epoch 4 for the become-leader transition for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:48,575] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 13 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:55:48,590] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request STOP_REPLICA with correlation id 6 sent to broker localhost:9094 (id: 3 rack: null) (state.change.logger)
[2023-07-08 16:55:48,590] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=4, isr=[1, 2], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 14 (state.change.logger)
[2023-07-08 16:55:48,590] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 14 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:55:48,590] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=4, isr=[1, 2], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2023-07-08 16:55:48,590] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 7 sent to broker localhost:9094 (id: 3 rack: null) (state.change.logger)
[2023-07-08 16:55:48,622] TRACE [Broker id=3] Handling stop replica (delete=false) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:48,622] TRACE [Broker id=3] Finished handling stop replica (delete=false) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:49,721] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-16 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:55:49,721] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-13 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:55:49,721] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-46 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:55:49,721] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-43 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:55:49,721] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-10 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:55:49,721] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-22 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:55:49,721] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-19 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:55:49,721] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-49 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:55:49,721] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-31 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:55:49,721] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-28 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:55:49,721] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-25 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:55:49,721] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-7 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:55:49,721] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-40 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:55:49,721] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-37 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:55:49,721] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-4 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:55:49,721] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-1 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:55:49,721] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-34 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:55:49,737] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,737] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,737] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,737] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,737] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,737] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,737] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,737] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,737] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,737] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,737] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,737] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,737] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,737] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,737] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,737] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,737] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-22 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-4 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-25 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-49 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-31 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-37 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition first_topic-0 from OfflineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-19 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-13 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-43 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-1 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-34 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-7 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-46 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-16 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-28 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-10 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-40 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=4, isr=[1, 2], zkVersion=7, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=4, isr=[1, 2], zkVersion=7, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition __consumer_offsets-13 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition __consumer_offsets-46 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=4, isr=[1, 2], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition __consumer_offsets-19 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition __consumer_offsets-28 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition __consumer_offsets-7 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition __consumer_offsets-40 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition __consumer_offsets-1 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition __consumer_offsets-34 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition __consumer_offsets-16 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition __consumer_offsets-43 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition __consumer_offsets-10 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition __consumer_offsets-22 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition __consumer_offsets-49 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition __consumer_offsets-31 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition __consumer_offsets-25 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition __consumer_offsets-37 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) to brokers HashSet(1, 2) for partition __consumer_offsets-4 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=4, isr=[1, 2], zkVersion=7, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 15 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:55:49,775] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 15 epoch 4 for partition first_topic-0 since its associated leader epoch 4 matches the current leader epoch (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=4, isr=[1, 2], zkVersion=7, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 12 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=first_topic,partition_index=0,error_code=11,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 15 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:55:49,775] DEBUG [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 12 epoch 4 for partition first_topic-0 since its associated leader epoch 4 matches the current leader epoch (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=4, isr=[1, 2], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 16 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 16 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 16 (state.change.logger)
[2023-07-08 16:55:49,775] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 16 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 16 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 16 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 16 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 16 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 16 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 16 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 16 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 16 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 16 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 16 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 16 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 16 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 16 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 16 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=first_topic,partition_index=0,error_code=11,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 12 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 16 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=4, isr=[1, 2], zkVersion=7, replicas=[3, 2, 1], offlineReplicas=[3]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 13 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 13 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 13 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 13 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 13 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 13 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 13 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 13 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 13 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 13 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 13 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 13 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 13 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 13 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 13 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 13 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 13 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=8, isr=[3], zkVersion=8, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 13 (state.change.logger)
[2023-07-08 16:55:49,784] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 13 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-08 16:55:59,279] TRACE [Broker id=2] Handling stop replica (delete=false) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:59,279] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition first_topic-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:55:59,279] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:59,279] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers HashSet(1, 2) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:59,279] TRACE [Broker id=2] Finished handling stop replica (delete=false) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:59,279] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 17 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:55:59,279] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 17 from controller 1 epoch 4 starting the become-leader transition for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:59,279] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request STOP_REPLICA with correlation id 14 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-08 16:55:59,279] TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 15 (state.change.logger)
[2023-07-08 16:55:59,279] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 15 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-08 16:55:59,279] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 17 from controller 1 epoch 4 for partition first_topic-0 (last update controller epoch 4) since it is already the leader for the partition. (state.change.logger)
[2023-07-08 16:55:59,294] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 17 from controller 1 epoch 4 for the become-leader transition for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:59,294] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 17 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:55:59,294] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 18 (state.change.logger)
[2023-07-08 16:55:59,297] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 18 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:55:59,310] TRACE [Broker id=2] Handling stop replica (delete=false) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:59,310] TRACE [Broker id=2] Finished handling stop replica (delete=false) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:55:59,310] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=first_topic,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request STOP_REPLICA with correlation id 16 sent to broker localhost:9093 (id: 2 rack: null) (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-15 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-48 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-13 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-46 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-9 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-42 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-21 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-19 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-30 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-28 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-7 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-40 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-3 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-36 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-1 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-34 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-16 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-45 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-43 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-12 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-10 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-24 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-22 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-49 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-18 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-31 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-27 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-25 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-39 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-37 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-6 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-4 state from OfflinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,252] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-33 state from OnlinePartition to OfflinePartition (state.change.logger)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,268] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,284] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-30 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-21 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-33 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-36 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition first_topic-0 from OfflineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-48 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-6 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-45 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-27 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-9 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-42 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-3 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-18 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-15 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-24 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-39 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-12 from OnlineReplica to OfflineReplica (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition first_topic-0 (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-15 (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-48 (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], offlineReplicas=[3, 2]) to brokers HashSet(1) for partition first_topic-0 (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-9 (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-42 (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-21 (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-30 (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-3 (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-36 (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-45 (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-12 (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-24 (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-18 (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-0 (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-27 (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-39 (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-6 (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) to brokers HashSet(1) for partition __consumer_offsets-33 (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 19 from controller 1 epoch 4 (state.change.logger)
[2023-07-08 16:56:00,299] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 19 epoch 4 for partition first_topic-0 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2023-07-08 16:56:00,299] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=first_topic,partition_index=0,error_code=11,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 19 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:56:00,315] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='first_topic', partitionIndex=0, controllerEpoch=4, leader=1, leaderEpoch=5, isr=[1], zkVersion=8, replicas=[3, 2, 1], offlineReplicas=[3, 2]) for partition first_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 20 (state.change.logger)
[2023-07-08 16:56:00,315] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 20 (state.change.logger)
[2023-07-08 16:56:00,315] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 20 (state.change.logger)
[2023-07-08 16:56:00,315] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 20 (state.change.logger)
[2023-07-08 16:56:00,315] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 20 (state.change.logger)
[2023-07-08 16:56:00,315] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 20 (state.change.logger)
[2023-07-08 16:56:00,315] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 20 (state.change.logger)
[2023-07-08 16:56:00,315] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 20 (state.change.logger)
[2023-07-08 16:56:00,315] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 20 (state.change.logger)
[2023-07-08 16:56:00,315] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 20 (state.change.logger)
[2023-07-08 16:56:00,315] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 20 (state.change.logger)
[2023-07-08 16:56:00,315] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 20 (state.change.logger)
[2023-07-08 16:56:00,315] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 20 (state.change.logger)
[2023-07-08 16:56:00,315] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 20 (state.change.logger)
[2023-07-08 16:56:00,315] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 20 (state.change.logger)
[2023-07-08 16:56:00,315] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 20 (state.change.logger)
[2023-07-08 16:56:00,315] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 20 (state.change.logger)
[2023-07-08 16:56:00,315] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=6, isr=[2], zkVersion=6, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 20 (state.change.logger)
[2023-07-08 16:56:00,315] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 20 sent to broker localhost:9092 (id: 1 rack: null) (state.change.logger)
[2023-07-08 16:56:11,335] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition first_topic-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition first_topic-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:16,360] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition first_topic-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition first_topic-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-08 16:56:21,367] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition first_topic-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition first_topic-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:921)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
