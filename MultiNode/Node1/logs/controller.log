[2023-07-14 13:08:50,421] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@1a3869f4, name=log4j:logger=kafka.controller (kafka.controller)
[2023-07-14 13:09:16,665] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-14 13:09:16,759] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 5 and epoch zk version is now 5 (kafka.controller.KafkaController)
[2023-07-14 13:09:16,759] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2023-07-14 13:09:16,759] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-07-14 13:09:16,775] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-07-14 13:09:16,775] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2023-07-14 13:09:16,806] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 443) (kafka.controller.KafkaController)
[2023-07-14 13:09:16,822] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-07-14 13:09:16,916] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-07-14 13:09:16,963] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-07-14 13:09:16,963] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2023-07-14 13:09:16,963] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-14 13:09:16,963] INFO [Controller id=1] Current list of topics in the cluster: Set(my_topic, my_other_topic, first_topic, __consumer_offsets) (kafka.controller.KafkaController)
[2023-07-14 13:09:16,963] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-07-14 13:09:16,978] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-07-14 13:09:16,978] INFO [Controller id=1] List of topics ineligible for deletion: my_topic,my_other_topic,__consumer_offsets (kafka.controller.KafkaController)
[2023-07-14 13:09:16,978] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-07-14 13:09:16,978] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(my_topic, my_other_topic, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2023-07-14 13:09:16,978] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2023-07-14 13:09:16,994] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-07-14 13:09:17,041] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-14 13:09:17,041] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-14 13:09:17,119] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-14 13:09:17,259] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=my_topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=my_other_topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=my_other_topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OfflineReplica, [Topic=my_topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=my_topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=my_topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=my_other_topic,Partition=2,Replica=2] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-07-14 13:09:17,259] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-07-14 13:09:17,259] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-07-14 13:09:17,369] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OnlinePartition, my_other_topic-1 -> OnlinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OfflinePartition, my_topic-3 -> OnlinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, my_other_topic-2 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, my_topic-2 -> OfflinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, first_topic-0 -> OnlinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OfflinePartition, my_topic-1 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, my_topic-0 -> OfflinePartition, my_other_topic-0 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-07-14 13:09:17,385] INFO [Controller id=1] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2023-07-14 13:09:17,385] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-07-14 13:09:17,385] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-07-14 13:09:17,385] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-07-14 13:09:17,385] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-07-14 13:09:17,401] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-07-14 13:09:17,416] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-07-14 13:09:22,432] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 13:09:22,432] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 13:09:22,432] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 13:09:22,432] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 13:09:22,432] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), __consumer_offsets-30 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-48 -> List(2), __consumer_offsets-26 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-8 -> List(2), __consumer_offsets-4 -> List(2), my_topic-2 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-36 -> List(2), my_other_topic-0 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-18 -> List(2), my_topic-0 -> List(2), __consumer_offsets-24 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-44 -> List(2), my_other_topic-2 -> List(2), __consumer_offsets-12 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2023-07-14 13:09:22,432] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-07-14 13:09:22,432] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-14 13:14:22,459] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 13:14:22,459] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 13:14:22,459] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 13:14:22,459] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 13:14:22,459] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), __consumer_offsets-30 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-48 -> List(2), __consumer_offsets-26 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-8 -> List(2), __consumer_offsets-4 -> List(2), my_topic-2 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-36 -> List(2), my_other_topic-0 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-18 -> List(2), my_topic-0 -> List(2), __consumer_offsets-24 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-44 -> List(2), my_other_topic-2 -> List(2), __consumer_offsets-12 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2023-07-14 13:14:22,459] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-07-14 13:14:22,459] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-14 13:19:22,465] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 13:19:22,465] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 13:19:22,465] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 13:19:22,465] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 13:19:22,465] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), __consumer_offsets-30 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-48 -> List(2), __consumer_offsets-26 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-8 -> List(2), __consumer_offsets-4 -> List(2), my_topic-2 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-36 -> List(2), my_other_topic-0 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-18 -> List(2), my_topic-0 -> List(2), __consumer_offsets-24 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-44 -> List(2), my_other_topic-2 -> List(2), __consumer_offsets-12 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2023-07-14 13:19:22,465] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-07-14 13:19:22,465] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-14 13:24:22,482] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 13:24:22,483] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 13:24:22,486] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 13:24:22,486] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 13:24:22,487] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), __consumer_offsets-30 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-48 -> List(2), __consumer_offsets-26 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-8 -> List(2), __consumer_offsets-4 -> List(2), my_topic-2 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-36 -> List(2), my_other_topic-0 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-18 -> List(2), my_topic-0 -> List(2), __consumer_offsets-24 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-44 -> List(2), my_other_topic-2 -> List(2), __consumer_offsets-12 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2023-07-14 13:24:22,487] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-07-14 13:24:22,487] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-14 13:29:22,488] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 13:29:22,488] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 13:29:22,490] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 13:29:22,490] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 13:29:22,490] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), __consumer_offsets-30 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-48 -> List(2), __consumer_offsets-26 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-8 -> List(2), __consumer_offsets-4 -> List(2), my_topic-2 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-36 -> List(2), my_other_topic-0 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-18 -> List(2), my_topic-0 -> List(2), __consumer_offsets-24 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-44 -> List(2), my_other_topic-2 -> List(2), __consumer_offsets-12 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2023-07-14 13:29:22,490] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-07-14 13:29:22,490] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-14 13:34:22,505] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 13:34:22,506] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 13:34:22,508] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 13:34:22,508] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 13:34:22,509] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), __consumer_offsets-30 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-48 -> List(2), __consumer_offsets-26 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-8 -> List(2), __consumer_offsets-4 -> List(2), my_topic-2 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-36 -> List(2), my_other_topic-0 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-18 -> List(2), my_topic-0 -> List(2), __consumer_offsets-24 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-44 -> List(2), my_other_topic-2 -> List(2), __consumer_offsets-12 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2023-07-14 13:34:22,509] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-07-14 13:34:22,509] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-07-14 13:35:25,631] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2023-07-14 13:35:25,631] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-07-14 13:35:25,646] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2023-07-14 13:35:25,662] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-07-14 13:35:25,678] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-14 13:35:25,678] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-14 13:35:25,788] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2023-07-14 13:35:25,788] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 443, 2 -> 490) (kafka.controller.KafkaController)
[2023-07-14 13:35:25,875] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-14 13:35:25,929] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-07-14 13:39:22,516] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 13:39:22,516] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 13:39:22,517] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 13:39:22,517] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 13:39:22,518] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-14 13:39:22,518] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 13:44:22,528] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 13:44:22,528] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 13:44:22,530] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 13:44:22,530] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 13:44:22,530] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-14 13:44:22,530] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 13:49:22,545] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 13:49:22,545] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 13:49:22,546] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 13:49:22,546] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 13:49:22,546] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-14 13:49:22,546] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 13:54:22,557] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 13:54:22,557] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 13:54:22,557] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 13:54:22,557] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 13:54:22,557] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-14 13:54:22,557] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 13:59:22,567] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 13:59:22,567] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 13:59:22,567] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 13:59:22,567] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 13:59:22,567] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-14 13:59:22,567] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:04:22,583] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 14:04:22,598] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 14:04:22,598] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:04:22,598] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:04:22,598] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:04:22,598] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:09:22,614] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 14:09:22,614] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 14:09:22,614] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:09:22,614] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:09:22,614] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:09:22,619] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:14:22,628] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 14:14:22,628] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 14:14:22,630] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:14:22,630] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:14:22,652] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:14:22,692] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:19:22,702] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 14:19:22,702] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 14:19:22,702] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:19:22,705] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:19:22,705] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:19:22,705] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:24:22,719] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 14:24:22,719] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 14:24:22,719] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:24:22,719] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:24:22,719] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:24:22,719] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:29:22,735] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 14:29:22,735] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 14:29:22,735] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:29:22,735] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:29:22,735] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:29:22,735] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:34:22,743] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 14:34:22,744] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 14:34:22,744] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:34:22,744] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:34:22,744] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:34:22,744] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:39:22,756] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 14:39:22,756] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 14:39:22,756] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:39:22,756] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:39:22,756] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:39:22,756] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:44:22,769] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 14:44:22,769] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 14:44:22,769] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:44:22,769] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:44:22,769] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:44:22,769] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:49:22,776] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 14:49:22,776] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 14:49:22,776] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:49:22,776] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:49:22,776] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:49:22,776] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:54:22,782] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-14 14:54:22,782] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-14 14:54:22,782] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:54:22,782] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:54:22,782] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-14 14:54:22,782] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-07-14 14:57:20,018] INFO [Controller id=1] Shutting down broker 2 (kafka.controller.KafkaController)
[2023-07-14 14:57:20,018] DEBUG [Controller id=1] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2023-07-14 14:57:20,033] DEBUG [Controller id=1] Live brokers: 1 (kafka.controller.KafkaController)
[2023-07-14 14:57:20,112] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-9 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-21 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),my_other_topic-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),my_topic-3 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-45 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-49 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-37 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),my_other_topic-2 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-4 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-33 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),my_topic-2 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),first_topic-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-28 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-7 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),my_topic-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-43 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-22 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-31 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),my_topic-0 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),my_other_topic-0 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:5) (kafka.controller.KafkaController)
[2023-07-14 14:57:21,870] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-14 14:57:21,870] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-14 14:57:21,870] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-14 14:57:21,870] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2023-07-14 14:57:21,885] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2023-07-14 14:57:21,896] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-07-14 14:57:21,901] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-07-14 14:57:21,901] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2023-07-14 14:57:21,979] INFO [Controller id=1] Newly added brokers: , deleted brokers: 2, bounced brokers: , all live brokers: 1 (kafka.controller.KafkaController)
[2023-07-14 14:57:21,996] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2023-07-14 14:57:21,996] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2023-07-14 14:57:21,996] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2023-07-14 14:57:22,042] INFO [Controller id=1] Broker failure callback for 2 (kafka.controller.KafkaController)
[2023-07-14 14:57:22,042] INFO [Controller id=1] Removed 2 from list of shutting down brokers. (kafka.controller.KafkaController)
[2023-07-14 14:57:22,231] DEBUG [Controller id=1] Unregister BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2023-07-14 14:57:22,231] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 443) (kafka.controller.KafkaController)
[2023-07-14 14:57:22,231] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-14 14:57:34,990] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2023-07-14 14:57:34,990] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2023-07-14 14:57:34,990] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2023-07-14 14:57:34,990] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-9 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-21 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-26 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),my_other_topic-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),my_topic-3 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-45 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-20 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-49 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-37 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),my_other_topic-2 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-4 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-33 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),my_topic-2 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),first_topic-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-28 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-7 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),my_topic-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-43 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-22 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-18 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-31 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),my_topic-0 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),my_other_topic-0 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-6 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:-1,ISR:2,LeaderEpoch:9,ControllerEpoch:5) (kafka.controller.KafkaController)
[2023-07-14 14:57:36,637] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-14 14:57:36,637] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-14 14:57:36,637] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-14 14:57:36,637] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2023-07-14 14:57:36,637] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-07-14 14:57:36,637] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-07-14 14:57:36,637] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-07-14 14:57:36,637] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2023-07-14 14:57:36,637] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2023-07-14 14:57:36,637] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2023-07-14 14:57:36,637] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
