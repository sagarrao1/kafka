[2023-07-18 12:03:30,200] INFO Reading configuration from: C:\PracticeJava\Kafka\MultiNode\Node1\config\zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2023-07-18 12:03:30,235] INFO clientPortAddress is 0.0.0.0:2181 (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2023-07-18 12:03:30,235] INFO secureClientPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2023-07-18 12:03:30,245] INFO autopurge.snapRetainCount set to 3 (org.apache.zookeeper.server.DatadirCleanupManager)
[2023-07-18 12:03:30,246] INFO autopurge.purgeInterval set to 0 (org.apache.zookeeper.server.DatadirCleanupManager)
[2023-07-18 12:03:30,246] INFO Purge task is not scheduled. (org.apache.zookeeper.server.DatadirCleanupManager)
[2023-07-18 12:03:30,249] WARN Either no config or no quorum defined in config, running  in standalone mode (org.apache.zookeeper.server.quorum.QuorumPeerMain)
[2023-07-18 12:03:30,256] INFO Log4j found with jmx enabled. (org.apache.zookeeper.jmx.ManagedUtil)
[2023-07-18 12:03:30,306] INFO Reading configuration from: C:\PracticeJava\Kafka\MultiNode\Node1\config\zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2023-07-18 12:03:30,308] INFO clientPortAddress is 0.0.0.0:2181 (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2023-07-18 12:03:30,308] INFO secureClientPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2023-07-18 12:03:30,309] INFO Starting server (org.apache.zookeeper.server.ZooKeeperServerMain)
[2023-07-18 12:03:30,321] INFO zookeeper.snapshot.trust.empty : false (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
[2023-07-18 12:03:30,368] INFO Server environment:zookeeper.version=3.5.7-f0fdd52973d373ffd9c86b81d99842dc2c7f660e, built on 02/10/2020 11:30 GMT (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,369] INFO Server environment:host.name=DESKTOP-KOBU9QU (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,369] INFO Server environment:java.version=11.0.18 (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,369] INFO Server environment:java.vendor=Oracle Corporation (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,369] INFO Server environment:java.home=C:\PracticeJava\jdk-11.0.18 (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,369] INFO Server environment:java.class.path=C:\PracticeJava\Kafka\MultiNode\Node1\libs\activation-1.1.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\aopalliance-repackaged-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\argparse4j-0.7.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\audience-annotations-0.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\commons-cli-1.4.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\commons-lang3-3.8.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-api-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-basic-auth-extension-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-file-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-json-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-mirror-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-mirror-client-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-runtime-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-transforms-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\hk2-api-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\hk2-locator-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\hk2-utils-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-annotations-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-core-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-databind-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-dataformat-csv-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-datatype-jdk8-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-jaxrs-base-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-jaxrs-json-provider-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-module-jaxb-annotations-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-module-paranamer-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-module-scala_2.13-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.activation-api-1.2.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.annotation-api-1.3.4.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.inject-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.ws.rs-api-2.1.5.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.xml.bind-api-2.3.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javassist-3.22.0-CR2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javassist-3.26.0-GA.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javax.servlet-api-3.1.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javax.ws.rs-api-2.1.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jaxb-api-2.3.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-client-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-common-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-container-servlet-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-container-servlet-core-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-hk2-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-media-jaxb-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-server-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-client-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-continuation-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-http-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-io-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-security-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-server-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-servlet-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-servlets-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-util-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jopt-simple-5.0.4.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-clients-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-log4j-appender-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-examples-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-scala_2.13-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-test-utils-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-tools-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-javadoc.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-javadoc.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-scaladoc.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-scaladoc.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-sources.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-sources.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test-sources.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test-sources.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\log4j-1.2.17.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\lz4-java-1.7.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\maven-artifact-3.6.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\metrics-core-2.2.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-buffer-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-codec-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-common-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-handler-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-resolver-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-transport-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-transport-native-epoll-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-transport-native-unix-common-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\osgi-resource-locator-1.0.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\paranamer-2.8.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\plexus-utils-3.2.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\reflections-0.9.12.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\rocksdbjni-5.18.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-collection-compat_2.13-2.1.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-java8-compat_2.13-0.9.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-library-2.13.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-logging_2.13-3.9.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-reflect-2.13.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\slf4j-api-1.7.30.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\slf4j-log4j12-1.7.30.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\snappy-java-1.1.7.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\validation-api-2.0.1.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\zookeeper-3.5.7.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\zookeeper-jute-3.5.7.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\zstd-jni-1.4.4-7.jar (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,374] INFO Server environment:java.library.path=C:\PracticeJava\jdk-11.0.18\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%JAVA_HOME%\bin;C:\Program Files\Git\cmd;C:\Program Files\apache-maven-3.6.1\bin;C:\Program Files\TortoiseGit\bin;%MAVEN_HOME\bin;C:\Program Files\Notepad++;C:\Program Files\MongoDB\Server\4.2\bin;C:\Program Files (x86)\Groovy\bin;C:\Program Files\Perforce\;C:\Program Files (x86)\gradle-7.2\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Windows\SysWOW64;C:\Program Files\dotnet\;C:\Program Files\Notepad++;C:\Users\sagar\AppData\Local\Programs\Microsoft VS Code Insiders\bin;C:\PracticeJava\jdk-11.0.18\bin;C:\Users\sagar\AppData\Local\GitHubDesktop\bin;C:\Users\sagar\AppData\Local\Microsoft\WindowsApps;C:\Windows\SysWOW64;;. (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,375] INFO Server environment:java.io.tmpdir=C:\Users\sagar\AppData\Local\Temp\ (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,375] INFO Server environment:java.compiler=<NA> (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,376] INFO Server environment:os.name=Windows 11 (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,376] INFO Server environment:os.arch=amd64 (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,376] INFO Server environment:os.version=10.0 (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,377] INFO Server environment:user.name=sagar (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,377] INFO Server environment:user.home=C:\Users\sagar (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,377] INFO Server environment:user.dir=C:\PracticeJava\Kafka\MultiNode\Node1\bin\windows (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,377] INFO Server environment:os.memory.free=494MB (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,378] INFO Server environment:os.memory.max=512MB (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,378] INFO Server environment:os.memory.total=512MB (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,382] INFO minSessionTimeout set to 6000 (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,383] INFO maxSessionTimeout set to 60000 (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,384] INFO Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000 datadir C:\PracticeJava\Kafka\MultiNode\zookeeperlogsM\version-2 snapdir C:\PracticeJava\Kafka\MultiNode\zookeeperlogsM\version-2 (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:03:30,451] INFO Using org.apache.zookeeper.server.NIOServerCnxnFactory as server connection factory (org.apache.zookeeper.server.ServerCnxnFactory)
[2023-07-18 12:03:30,463] INFO Configuring NIO connection handler with 10s sessionless connection timeout, 2 selector thread(s), 16 worker threads, and 64 kB direct buffers. (org.apache.zookeeper.server.NIOServerCnxnFactory)
[2023-07-18 12:03:30,472] INFO binding to port 0.0.0.0/0.0.0.0:2181 (org.apache.zookeeper.server.NIOServerCnxnFactory)
[2023-07-18 12:03:30,531] INFO zookeeper.snapshotSizeFactor = 0.33 (org.apache.zookeeper.server.ZKDatabase)
[2023-07-18 12:03:30,590] INFO Reading snapshot C:\PracticeJava\Kafka\MultiNode\zookeeperlogsM\version-2\snapshot.1ac (org.apache.zookeeper.server.persistence.FileSnap)
[2023-07-18 12:03:30,690] INFO Snapshotting: 0x227 to C:\PracticeJava\Kafka\MultiNode\zookeeperlogsM\version-2\snapshot.227 (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
[2023-07-18 12:03:30,747] INFO Using checkIntervalMs=60000 maxPerMinute=10000 (org.apache.zookeeper.server.ContainerManager)
[2023-07-18 12:03:51,929] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2023-07-18 12:03:52,808] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
[2023-07-18 12:03:52,925] INFO starting (kafka.server.KafkaServer)
[2023-07-18 12:03:52,927] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2023-07-18 12:03:53,000] INFO [ZooKeeperClient Kafka server] Initializing a new session to localhost:2181. (kafka.zookeeper.ZooKeeperClient)
[2023-07-18 12:03:53,020] INFO Client environment:zookeeper.version=3.5.7-f0fdd52973d373ffd9c86b81d99842dc2c7f660e, built on 02/10/2020 11:30 GMT (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:03:53,021] INFO Client environment:host.name=DESKTOP-KOBU9QU (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:03:53,021] INFO Client environment:java.version=11.0.18 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:03:53,021] INFO Client environment:java.vendor=Oracle Corporation (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:03:53,021] INFO Client environment:java.home=C:\PracticeJava\jdk-11.0.18 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:03:53,022] INFO Client environment:java.class.path=C:\PracticeJava\Kafka\MultiNode\Node1\libs\activation-1.1.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\aopalliance-repackaged-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\argparse4j-0.7.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\audience-annotations-0.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\commons-cli-1.4.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\commons-lang3-3.8.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-api-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-basic-auth-extension-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-file-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-json-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-mirror-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-mirror-client-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-runtime-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-transforms-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\hk2-api-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\hk2-locator-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\hk2-utils-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-annotations-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-core-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-databind-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-dataformat-csv-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-datatype-jdk8-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-jaxrs-base-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-jaxrs-json-provider-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-module-jaxb-annotations-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-module-paranamer-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-module-scala_2.13-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.activation-api-1.2.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.annotation-api-1.3.4.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.inject-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.ws.rs-api-2.1.5.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.xml.bind-api-2.3.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javassist-3.22.0-CR2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javassist-3.26.0-GA.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javax.servlet-api-3.1.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javax.ws.rs-api-2.1.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jaxb-api-2.3.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-client-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-common-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-container-servlet-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-container-servlet-core-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-hk2-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-media-jaxb-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-server-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-client-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-continuation-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-http-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-io-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-security-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-server-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-servlet-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-servlets-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-util-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jopt-simple-5.0.4.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-clients-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-log4j-appender-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-examples-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-scala_2.13-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-test-utils-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-tools-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-javadoc.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-javadoc.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-scaladoc.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-scaladoc.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-sources.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-sources.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test-sources.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test-sources.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\log4j-1.2.17.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\lz4-java-1.7.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\maven-artifact-3.6.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\metrics-core-2.2.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-buffer-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-codec-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-common-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-handler-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-resolver-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-transport-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-transport-native-epoll-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-transport-native-unix-common-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\osgi-resource-locator-1.0.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\paranamer-2.8.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\plexus-utils-3.2.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\reflections-0.9.12.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\rocksdbjni-5.18.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-collection-compat_2.13-2.1.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-java8-compat_2.13-0.9.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-library-2.13.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-logging_2.13-3.9.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-reflect-2.13.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\slf4j-api-1.7.30.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\slf4j-log4j12-1.7.30.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\snappy-java-1.1.7.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\validation-api-2.0.1.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\zookeeper-3.5.7.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\zookeeper-jute-3.5.7.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\zstd-jni-1.4.4-7.jar (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:03:53,025] INFO Client environment:java.library.path=C:\PracticeJava\jdk-11.0.18\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%JAVA_HOME%\bin;C:\Program Files\Git\cmd;C:\Program Files\apache-maven-3.6.1\bin;C:\Program Files\TortoiseGit\bin;%MAVEN_HOME\bin;C:\Program Files\Notepad++;C:\Program Files\MongoDB\Server\4.2\bin;C:\Program Files (x86)\Groovy\bin;C:\Program Files\Perforce\;C:\Program Files (x86)\gradle-7.2\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Windows\SysWOW64;C:\Program Files\dotnet\;C:\Program Files\Notepad++;C:\Users\sagar\AppData\Local\Programs\Microsoft VS Code Insiders\bin;C:\PracticeJava\jdk-11.0.18\bin;C:\Users\sagar\AppData\Local\GitHubDesktop\bin;C:\Users\sagar\AppData\Local\Microsoft\WindowsApps;C:\Windows\SysWOW64;;. (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:03:53,025] INFO Client environment:java.io.tmpdir=C:\Users\sagar\AppData\Local\Temp\ (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:03:53,026] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:03:53,026] INFO Client environment:os.name=Windows 11 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:03:53,026] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:03:53,027] INFO Client environment:os.version=10.0 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:03:53,027] INFO Client environment:user.name=sagar (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:03:53,028] INFO Client environment:user.home=C:\Users\sagar (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:03:53,028] INFO Client environment:user.dir=C:\PracticeJava\Kafka\MultiNode\Node1\bin\windows (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:03:53,028] INFO Client environment:os.memory.free=1015MB (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:03:53,029] INFO Client environment:os.memory.max=1024MB (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:03:53,029] INFO Client environment:os.memory.total=1024MB (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:03:53,035] INFO Initiating client connection, connectString=localhost:2181 sessionTimeout=18000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@3f270e0a (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:03:53,062] INFO jute.maxbuffer value is 4194304 Bytes (org.apache.zookeeper.ClientCnxnSocket)
[2023-07-18 12:03:53,081] INFO zookeeper.request.timeout value is 0. feature enabled= (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:03:53,091] INFO [ZooKeeperClient Kafka server] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2023-07-18 12:03:53,112] INFO Opening socket connection to server localhost/0:0:0:0:0:0:0:1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:03:53,124] INFO Socket connection established, initiating session, client: /0:0:0:0:0:0:0:1:19297, server: localhost/0:0:0:0:0:0:0:1:2181 (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:03:53,153] INFO Creating new log file: log.228 (org.apache.zookeeper.server.persistence.FileTxnLog)
[2023-07-18 12:03:53,179] INFO Session establishment complete on server localhost/0:0:0:0:0:0:0:1:2181, sessionid = 0x10017cd86080000, negotiated timeout = 18000 (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:03:53,187] INFO [ZooKeeperClient Kafka server] Connected. (kafka.zookeeper.ZooKeeperClient)
[2023-07-18 12:03:53,741] INFO Cluster ID = dqc8hGyvQ4yospB768Rz2w (kafka.server.KafkaServer)
[2023-07-18 12:03:53,874] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 1
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.5-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = PLAINTEXT://localhost:9092
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = C:/PracticeJava/Kafka/MultiNode/kafka-logs-1
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.5-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 18000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2023-07-18 12:03:53,895] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 1
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.5-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = PLAINTEXT://localhost:9092
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = C:/PracticeJava/Kafka/MultiNode/kafka-logs-1
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.5-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 18000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2023-07-18 12:03:53,970] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2023-07-18 12:03:53,970] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2023-07-18 12:03:53,973] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2023-07-18 12:03:54,066] INFO Loading logs. (kafka.log.LogManager)
[2023-07-18 12:03:54,298] INFO [Log partition=first_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 64 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:54,339] INFO [ProducerStateManager partition=first_topic-0] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\first_topic-0\00000000000000000064.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:03:54,369] INFO [Log partition=first_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 64 in 221 ms (kafka.log.Log)
[2023-07-18 12:03:54,438] INFO [Log partition=my_other_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 26 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:54,442] INFO [ProducerStateManager partition=my_other_topic-1] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_other_topic-1\00000000000000000026.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:03:54,445] INFO [Log partition=my_other_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 26 in 48 ms (kafka.log.Log)
[2023-07-18 12:03:54,490] INFO [Log partition=my_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 691 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:54,495] INFO [ProducerStateManager partition=my_topic-1] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1\00000000000000000691.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:03:54,500] INFO [Log partition=my_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 691 in 51 ms (kafka.log.Log)
[2023-07-18 12:03:54,562] INFO [Log partition=my_topic-3, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 609 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:54,568] INFO [ProducerStateManager partition=my_topic-3] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-3\00000000000000000609.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:03:54,571] INFO [Log partition=my_topic-3, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 609 in 65 ms (kafka.log.Log)
[2023-07-18 12:03:54,607] INFO [Log partition=__consumer_offsets-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:54,612] INFO [Log partition=__consumer_offsets-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 35 ms (kafka.log.Log)
[2023-07-18 12:03:54,648] INFO [Log partition=__consumer_offsets-11, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:54,652] INFO [Log partition=__consumer_offsets-11, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 30 ms (kafka.log.Log)
[2023-07-18 12:03:54,695] INFO [Log partition=__consumer_offsets-13, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:54,697] INFO [Log partition=__consumer_offsets-13, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 35 ms (kafka.log.Log)
[2023-07-18 12:03:54,727] INFO [Log partition=__consumer_offsets-15, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:54,730] INFO [Log partition=__consumer_offsets-15, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 25 ms (kafka.log.Log)
[2023-07-18 12:03:54,770] INFO [Log partition=__consumer_offsets-17, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:54,773] INFO [Log partition=__consumer_offsets-17, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 37 ms (kafka.log.Log)
[2023-07-18 12:03:54,805] INFO [Log partition=__consumer_offsets-19, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:54,808] INFO [Log partition=__consumer_offsets-19, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 27 ms (kafka.log.Log)
[2023-07-18 12:03:54,844] INFO [Log partition=__consumer_offsets-21, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:54,846] INFO [Log partition=__consumer_offsets-21, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 31 ms (kafka.log.Log)
[2023-07-18 12:03:54,888] INFO [Log partition=__consumer_offsets-23, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:54,892] INFO [Log partition=__consumer_offsets-23, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 37 ms (kafka.log.Log)
[2023-07-18 12:03:54,935] INFO [Log partition=__consumer_offsets-25, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:54,939] INFO [Log partition=__consumer_offsets-25, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 37 ms (kafka.log.Log)
[2023-07-18 12:03:54,979] INFO [Log partition=__consumer_offsets-27, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:54,984] INFO [Log partition=__consumer_offsets-27, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 34 ms (kafka.log.Log)
[2023-07-18 12:03:55,024] INFO [Log partition=__consumer_offsets-29, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:55,026] INFO [Log partition=__consumer_offsets-29, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 36 ms (kafka.log.Log)
[2023-07-18 12:03:55,060] INFO [Log partition=__consumer_offsets-3, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:55,062] INFO [Log partition=__consumer_offsets-3, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 32 ms (kafka.log.Log)
[2023-07-18 12:03:55,103] INFO [Log partition=__consumer_offsets-31, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:55,106] INFO [Log partition=__consumer_offsets-31, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 34 ms (kafka.log.Log)
[2023-07-18 12:03:55,140] INFO [Log partition=__consumer_offsets-33, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:55,142] INFO [Log partition=__consumer_offsets-33, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 30 ms (kafka.log.Log)
[2023-07-18 12:03:55,177] INFO [Log partition=__consumer_offsets-35, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:55,178] INFO [Log partition=__consumer_offsets-35, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 29 ms (kafka.log.Log)
[2023-07-18 12:03:55,214] INFO [Log partition=__consumer_offsets-37, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:55,218] INFO [Log partition=__consumer_offsets-37, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 32 ms (kafka.log.Log)
[2023-07-18 12:03:55,253] INFO [Log partition=__consumer_offsets-39, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:55,254] INFO [Log partition=__consumer_offsets-39, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 28 ms (kafka.log.Log)
[2023-07-18 12:03:55,284] INFO [Log partition=__consumer_offsets-41, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:55,286] INFO [Log partition=__consumer_offsets-41, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 25 ms (kafka.log.Log)
[2023-07-18 12:03:55,339] INFO [Log partition=__consumer_offsets-43, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 35 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:55,344] INFO [ProducerStateManager partition=__consumer_offsets-43] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\__consumer_offsets-43\00000000000000000035.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:03:55,347] INFO [Log partition=__consumer_offsets-43, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 35 in 58 ms (kafka.log.Log)
[2023-07-18 12:03:55,381] INFO [Log partition=__consumer_offsets-45, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:55,383] INFO [Log partition=__consumer_offsets-45, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 32 ms (kafka.log.Log)
[2023-07-18 12:03:55,418] INFO [Log partition=__consumer_offsets-47, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:55,421] INFO [Log partition=__consumer_offsets-47, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 32 ms (kafka.log.Log)
[2023-07-18 12:03:55,460] INFO [Log partition=__consumer_offsets-49, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:55,465] INFO [Log partition=__consumer_offsets-49, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 36 ms (kafka.log.Log)
[2023-07-18 12:03:55,498] INFO [Log partition=__consumer_offsets-5, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:55,500] INFO [Log partition=__consumer_offsets-5, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 30 ms (kafka.log.Log)
[2023-07-18 12:03:55,544] INFO [Log partition=__consumer_offsets-7, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:55,547] INFO [Log partition=__consumer_offsets-7, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 37 ms (kafka.log.Log)
[2023-07-18 12:03:55,595] INFO [Log partition=__consumer_offsets-9, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:03:55,598] INFO [Log partition=__consumer_offsets-9, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 45 ms (kafka.log.Log)
[2023-07-18 12:03:55,615] INFO Logs loading complete in 1548 ms. (kafka.log.LogManager)
[2023-07-18 12:03:55,683] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2023-07-18 12:03:55,696] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2023-07-18 12:03:56,803] INFO Awaiting socket connections on localhost:9092. (kafka.network.Acceptor)
[2023-07-18 12:03:57,075] INFO [SocketServer brokerId=1] Created data-plane acceptor and processors for endpoint : EndPoint(localhost,9092,ListenerName(PLAINTEXT),PLAINTEXT) (kafka.network.SocketServer)
[2023-07-18 12:03:57,077] INFO [SocketServer brokerId=1] Started 1 acceptor threads for data-plane (kafka.network.SocketServer)
[2023-07-18 12:03:57,288] INFO [ExpirationReaper-1-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:03:57,289] INFO [ExpirationReaper-1-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:03:57,291] INFO [ExpirationReaper-1-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:03:57,292] INFO [ExpirationReaper-1-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:03:57,326] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2023-07-18 12:03:57,468] INFO Creating /brokers/ids/1 (is it secure? false) (kafka.zk.KafkaZkClient)
[2023-07-18 12:03:57,534] INFO Stat of the created znode at /brokers/ids/1 is: 566,566,1689662037500,1689662037500,1,0,0,72083765522333696,188,0,566
 (kafka.zk.KafkaZkClient)
[2023-07-18 12:03:57,536] INFO Registered broker 1 at path /brokers/ids/1 with addresses: ArraySeq(EndPoint(localhost,9092,ListenerName(PLAINTEXT),PLAINTEXT)), czxid (broker epoch): 566 (kafka.zk.KafkaZkClient)
[2023-07-18 12:03:57,656] INFO [ExpirationReaper-1-topic]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:03:57,669] INFO [ExpirationReaper-1-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:03:57,671] INFO [ExpirationReaper-1-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:03:57,759] INFO [GroupCoordinator 1]: Starting up. (kafka.coordinator.group.GroupCoordinator)
[2023-07-18 12:03:57,762] INFO [GroupCoordinator 1]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
[2023-07-18 12:03:57,782] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 20 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:57,829] INFO [ProducerId Manager 1]: Acquired new producerId block (brokerId:1,blockStartProducerId:8000,blockEndProducerId:8999) by writing to Zk with path version 9 (kafka.coordinator.transaction.ProducerIdManager)
[2023-07-18 12:03:57,923] INFO [TransactionCoordinator id=1] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
[2023-07-18 12:03:57,927] INFO [TransactionCoordinator id=1] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2023-07-18 12:03:57,927] INFO [Transaction Marker Channel Manager 1]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2023-07-18 12:03:58,007] INFO [ExpirationReaper-1-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:03:58,076] INFO [/config/changes-event-process-thread]: Starting (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2023-07-18 12:03:58,154] INFO [SocketServer brokerId=1] Started data-plane processors for 1 acceptors (kafka.network.SocketServer)
[2023-07-18 12:03:58,170] INFO Kafka version: 2.5.0 (org.apache.kafka.common.utils.AppInfoParser)
[2023-07-18 12:03:58,170] INFO Kafka commitId: 66563e712b0b9f84 (org.apache.kafka.common.utils.AppInfoParser)
[2023-07-18 12:03:58,171] INFO Kafka startTimeMs: 1689662038156 (org.apache.kafka.common.utils.AppInfoParser)
[2023-07-18 12:03:58,178] INFO [KafkaServer id=1] started (kafka.server.KafkaServer)
[2023-07-18 12:03:58,353] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions HashSet(__consumer_offsets-21, __consumer_offsets-25, __consumer_offsets-31, __consumer_offsets-3, __consumer_offsets-37, __consumer_offsets-15, first_topic-0, __consumer_offsets-17, __consumer_offsets-13, __consumer_offsets-43, my_topic-1, __consumer_offsets-39, __consumer_offsets-29, __consumer_offsets-27, __consumer_offsets-7, __consumer_offsets-9, __consumer_offsets-35, my_other_topic-1, __consumer_offsets-41, __consumer_offsets-33, __consumer_offsets-23, __consumer_offsets-49, __consumer_offsets-47, my_topic-3, __consumer_offsets-19, __consumer_offsets-11, __consumer_offsets-45, __consumer_offsets-1, __consumer_offsets-5) (kafka.server.ReplicaFetcherManager)
[2023-07-18 12:03:58,395] INFO [Partition __consumer_offsets-3 broker=1] Log loaded for partition __consumer_offsets-3 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,401] INFO [Partition __consumer_offsets-3 broker=1] __consumer_offsets-3 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,447] INFO [Partition __consumer_offsets-37 broker=1] Log loaded for partition __consumer_offsets-37 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,447] INFO [Partition __consumer_offsets-37 broker=1] __consumer_offsets-37 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,459] INFO [Partition __consumer_offsets-7 broker=1] Log loaded for partition __consumer_offsets-7 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,460] INFO [Partition __consumer_offsets-7 broker=1] __consumer_offsets-7 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,479] INFO [Partition __consumer_offsets-41 broker=1] Log loaded for partition __consumer_offsets-41 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,480] INFO [Partition __consumer_offsets-41 broker=1] __consumer_offsets-41 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,502] INFO [Partition __consumer_offsets-29 broker=1] Log loaded for partition __consumer_offsets-29 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,503] INFO [Partition __consumer_offsets-29 broker=1] __consumer_offsets-29 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,519] INFO [Partition my_other_topic-1 broker=1] Log loaded for partition my_other_topic-1 with initial high watermark 26 (kafka.cluster.Partition)
[2023-07-18 12:03:58,520] INFO [Partition my_other_topic-1 broker=1] my_other_topic-1 starts at leader epoch 0 from offset 26 with high watermark 26. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,529] INFO [Partition my_topic-3 broker=1] Log loaded for partition my_topic-3 with initial high watermark 609 (kafka.cluster.Partition)
[2023-07-18 12:03:58,529] INFO [Partition my_topic-3 broker=1] my_topic-3 starts at leader epoch 0 from offset 609 with high watermark 609. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,534] INFO [Partition __consumer_offsets-33 broker=1] Log loaded for partition __consumer_offsets-33 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,536] INFO [Partition __consumer_offsets-33 broker=1] __consumer_offsets-33 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,558] INFO [Partition __consumer_offsets-19 broker=1] Log loaded for partition __consumer_offsets-19 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,559] INFO [Partition __consumer_offsets-19 broker=1] __consumer_offsets-19 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,573] INFO [Partition __consumer_offsets-23 broker=1] Log loaded for partition __consumer_offsets-23 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,574] INFO [Partition __consumer_offsets-23 broker=1] __consumer_offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,612] INFO [Partition __consumer_offsets-11 broker=1] Log loaded for partition __consumer_offsets-11 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,612] INFO [Partition __consumer_offsets-11 broker=1] __consumer_offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,634] INFO [Partition __consumer_offsets-45 broker=1] Log loaded for partition __consumer_offsets-45 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,634] INFO [Partition __consumer_offsets-45 broker=1] __consumer_offsets-45 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,648] INFO [Partition first_topic-0 broker=1] Log loaded for partition first_topic-0 with initial high watermark 64 (kafka.cluster.Partition)
[2023-07-18 12:03:58,649] INFO [Partition first_topic-0 broker=1] first_topic-0 starts at leader epoch 0 from offset 64 with high watermark 64. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,654] INFO [Partition __consumer_offsets-15 broker=1] Log loaded for partition __consumer_offsets-15 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,655] INFO [Partition __consumer_offsets-15 broker=1] __consumer_offsets-15 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,672] INFO [Partition __consumer_offsets-49 broker=1] Log loaded for partition __consumer_offsets-49 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,673] INFO [Partition __consumer_offsets-49 broker=1] __consumer_offsets-49 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,687] INFO [Partition __consumer_offsets-35 broker=1] Log loaded for partition __consumer_offsets-35 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,688] INFO [Partition __consumer_offsets-35 broker=1] __consumer_offsets-35 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,710] INFO [Partition __consumer_offsets-5 broker=1] Log loaded for partition __consumer_offsets-5 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,713] INFO [Partition __consumer_offsets-5 broker=1] __consumer_offsets-5 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,729] INFO [Partition __consumer_offsets-39 broker=1] Log loaded for partition __consumer_offsets-39 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,729] INFO [Partition __consumer_offsets-39 broker=1] __consumer_offsets-39 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,744] INFO [Partition __consumer_offsets-9 broker=1] Log loaded for partition __consumer_offsets-9 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,747] INFO [Partition __consumer_offsets-9 broker=1] __consumer_offsets-9 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,758] INFO [Partition __consumer_offsets-27 broker=1] Log loaded for partition __consumer_offsets-27 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,759] INFO [Partition __consumer_offsets-27 broker=1] __consumer_offsets-27 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,774] INFO [Partition my_topic-1 broker=1] Log loaded for partition my_topic-1 with initial high watermark 691 (kafka.cluster.Partition)
[2023-07-18 12:03:58,774] INFO [Partition my_topic-1 broker=1] my_topic-1 starts at leader epoch 0 from offset 691 with high watermark 691. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,779] INFO [Partition __consumer_offsets-31 broker=1] Log loaded for partition __consumer_offsets-31 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,781] INFO [Partition __consumer_offsets-31 broker=1] __consumer_offsets-31 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,800] INFO [Partition __consumer_offsets-1 broker=1] Log loaded for partition __consumer_offsets-1 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,801] INFO [Partition __consumer_offsets-1 broker=1] __consumer_offsets-1 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,820] INFO [Partition __consumer_offsets-21 broker=1] Log loaded for partition __consumer_offsets-21 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,821] INFO [Partition __consumer_offsets-21 broker=1] __consumer_offsets-21 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,843] INFO [Partition __consumer_offsets-25 broker=1] Log loaded for partition __consumer_offsets-25 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,844] INFO [Partition __consumer_offsets-25 broker=1] __consumer_offsets-25 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,864] INFO [Partition __consumer_offsets-43 broker=1] Log loaded for partition __consumer_offsets-43 with initial high watermark 35 (kafka.cluster.Partition)
[2023-07-18 12:03:58,865] INFO [Partition __consumer_offsets-43 broker=1] __consumer_offsets-43 starts at leader epoch 0 from offset 35 with high watermark 35. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,875] INFO [Partition __consumer_offsets-13 broker=1] Log loaded for partition __consumer_offsets-13 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,875] INFO [Partition __consumer_offsets-13 broker=1] __consumer_offsets-13 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,895] INFO [Partition __consumer_offsets-47 broker=1] Log loaded for partition __consumer_offsets-47 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,895] INFO [Partition __consumer_offsets-47 broker=1] __consumer_offsets-47 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,908] INFO [Partition __consumer_offsets-17 broker=1] Log loaded for partition __consumer_offsets-17 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:03:58,908] INFO [Partition __consumer_offsets-17 broker=1] __consumer_offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:03:58,959] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-3 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,961] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-37 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,961] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-7 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,962] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-41 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,963] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-29 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,963] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-33 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,964] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-19 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,967] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-23 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,970] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-11 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,973] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-3 in 11 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,974] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-45 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,975] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-37 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,975] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-15 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,976] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-7 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,976] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-49 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,976] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-41 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,977] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-35 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,977] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-29 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,977] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-5 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,978] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-33 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,978] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-39 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,979] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-19 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,979] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-9 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,980] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-23 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,980] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-27 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,981] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-11 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,981] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-31 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,982] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-45 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,982] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-1 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,986] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-21 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,984] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-15 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,991] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-25 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,992] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-49 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,993] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-43 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,994] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-35 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,995] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-5 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,994] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-13 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,996] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-39 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,996] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-47 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,997] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-17 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,997] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-9 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,999] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-27 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:58,999] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-31 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:59,000] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-1 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:59,001] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-21 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:59,003] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-25 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:59,063] INFO Static member MemberMetadata(memberId=consumer-g2-1-3b93bfc1-a653-4ea7-b736-689135cda052, groupInstanceId=Some(null), clientId=consumer-g2-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group g2 loaded with member id consumer-g2-1-3b93bfc1-a653-4ea7-b736-689135cda052 at generation 1. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:03:59,088] INFO [GroupCoordinator 1]: Loading group metadata for g2 with generation 2 (kafka.coordinator.group.GroupCoordinator)
[2023-07-18 12:03:59,090] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-43 in 86 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:59,090] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-13 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:59,091] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-47 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:03:59,092] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-17 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:16,094] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2023-07-18 12:04:16,672] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
[2023-07-18 12:04:16,765] INFO starting (kafka.server.KafkaServer)
[2023-07-18 12:04:16,767] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2023-07-18 12:04:16,827] INFO [ZooKeeperClient Kafka server] Initializing a new session to localhost:2181. (kafka.zookeeper.ZooKeeperClient)
[2023-07-18 12:04:16,846] INFO Client environment:zookeeper.version=3.5.7-f0fdd52973d373ffd9c86b81d99842dc2c7f660e, built on 02/10/2020 11:30 GMT (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:04:16,846] INFO Client environment:host.name=DESKTOP-KOBU9QU (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:04:16,846] INFO Client environment:java.version=11.0.18 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:04:16,846] INFO Client environment:java.vendor=Oracle Corporation (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:04:16,847] INFO Client environment:java.home=C:\PracticeJava\jdk-11.0.18 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:04:16,847] INFO Client environment:java.class.path=C:\PracticeJava\Kafka\MultiNode\Node1\libs\activation-1.1.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\aopalliance-repackaged-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\argparse4j-0.7.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\audience-annotations-0.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\commons-cli-1.4.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\commons-lang3-3.8.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-api-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-basic-auth-extension-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-file-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-json-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-mirror-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-mirror-client-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-runtime-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-transforms-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\hk2-api-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\hk2-locator-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\hk2-utils-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-annotations-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-core-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-databind-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-dataformat-csv-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-datatype-jdk8-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-jaxrs-base-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-jaxrs-json-provider-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-module-jaxb-annotations-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-module-paranamer-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-module-scala_2.13-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.activation-api-1.2.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.annotation-api-1.3.4.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.inject-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.ws.rs-api-2.1.5.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.xml.bind-api-2.3.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javassist-3.22.0-CR2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javassist-3.26.0-GA.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javax.servlet-api-3.1.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javax.ws.rs-api-2.1.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jaxb-api-2.3.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-client-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-common-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-container-servlet-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-container-servlet-core-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-hk2-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-media-jaxb-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-server-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-client-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-continuation-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-http-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-io-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-security-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-server-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-servlet-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-servlets-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-util-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jopt-simple-5.0.4.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-clients-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-log4j-appender-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-examples-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-scala_2.13-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-test-utils-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-tools-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-javadoc.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-javadoc.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-scaladoc.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-scaladoc.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-sources.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-sources.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test-sources.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test-sources.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\log4j-1.2.17.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\lz4-java-1.7.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\maven-artifact-3.6.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\metrics-core-2.2.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-buffer-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-codec-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-common-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-handler-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-resolver-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-transport-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-transport-native-epoll-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-transport-native-unix-common-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\osgi-resource-locator-1.0.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\paranamer-2.8.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\plexus-utils-3.2.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\reflections-0.9.12.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\rocksdbjni-5.18.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-collection-compat_2.13-2.1.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-java8-compat_2.13-0.9.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-library-2.13.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-logging_2.13-3.9.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-reflect-2.13.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\slf4j-api-1.7.30.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\slf4j-log4j12-1.7.30.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\snappy-java-1.1.7.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\validation-api-2.0.1.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\zookeeper-3.5.7.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\zookeeper-jute-3.5.7.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\zstd-jni-1.4.4-7.jar (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:04:16,851] INFO Client environment:java.library.path=C:\PracticeJava\jdk-11.0.18\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%JAVA_HOME%\bin;C:\Program Files\Git\cmd;C:\Program Files\apache-maven-3.6.1\bin;C:\Program Files\TortoiseGit\bin;%MAVEN_HOME\bin;C:\Program Files\Notepad++;C:\Program Files\MongoDB\Server\4.2\bin;C:\Program Files (x86)\Groovy\bin;C:\Program Files\Perforce\;C:\Program Files (x86)\gradle-7.2\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Windows\SysWOW64;C:\Program Files\dotnet\;C:\Program Files\Notepad++;C:\Users\sagar\AppData\Local\Programs\Microsoft VS Code Insiders\bin;C:\PracticeJava\jdk-11.0.18\bin;C:\Users\sagar\AppData\Local\GitHubDesktop\bin;C:\Users\sagar\AppData\Local\Microsoft\WindowsApps;C:\Windows\SysWOW64;;. (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:04:16,852] INFO Client environment:java.io.tmpdir=C:\Users\sagar\AppData\Local\Temp\ (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:04:16,852] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:04:16,852] INFO Client environment:os.name=Windows 11 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:04:16,853] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:04:16,853] INFO Client environment:os.version=10.0 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:04:16,854] INFO Client environment:user.name=sagar (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:04:16,854] INFO Client environment:user.home=C:\Users\sagar (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:04:16,854] INFO Client environment:user.dir=C:\PracticeJava\Kafka\MultiNode\Node1\bin\windows (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:04:16,855] INFO Client environment:os.memory.free=1015MB (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:04:16,855] INFO Client environment:os.memory.max=1024MB (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:04:16,855] INFO Client environment:os.memory.total=1024MB (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:04:16,860] INFO Initiating client connection, connectString=localhost:2181 sessionTimeout=18000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@22295ec4 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:04:16,895] INFO jute.maxbuffer value is 4194304 Bytes (org.apache.zookeeper.ClientCnxnSocket)
[2023-07-18 12:04:16,906] INFO zookeeper.request.timeout value is 0. feature enabled= (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:04:16,911] INFO [ZooKeeperClient Kafka server] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2023-07-18 12:04:16,930] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:04:16,939] INFO Socket connection established, initiating session, client: /127.0.0.1:19324, server: localhost/127.0.0.1:2181 (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:04:16,957] INFO Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x10017cd86080001, negotiated timeout = 18000 (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:04:16,968] INFO [ZooKeeperClient Kafka server] Connected. (kafka.zookeeper.ZooKeeperClient)
[2023-07-18 12:04:17,378] INFO Cluster ID = dqc8hGyvQ4yospB768Rz2w (kafka.server.KafkaServer)
[2023-07-18 12:04:17,487] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 2
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.5-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = PLAINTEXT://localhost:9093
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = C:/PracticeJava/Kafka/MultiNode/kafka-logs-2
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.5-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 18000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2023-07-18 12:04:17,504] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 2
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.5-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = PLAINTEXT://localhost:9093
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = C:/PracticeJava/Kafka/MultiNode/kafka-logs-2
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.5-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 18000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2023-07-18 12:04:17,559] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2023-07-18 12:04:17,559] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2023-07-18 12:04:17,567] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2023-07-18 12:04:17,647] INFO Loading logs. (kafka.log.LogManager)
[2023-07-18 12:04:17,840] INFO [Log partition=my_other_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 29 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:17,871] INFO [ProducerStateManager partition=my_other_topic-0] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\my_other_topic-0\00000000000000000029.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:04:17,887] INFO [Log partition=my_other_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 29 in 175 ms (kafka.log.Log)
[2023-07-18 12:04:17,963] INFO [Log partition=my_other_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 45 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:17,968] INFO [ProducerStateManager partition=my_other_topic-2] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\my_other_topic-2\00000000000000000045.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:04:17,971] INFO [Log partition=my_other_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 45 in 63 ms (kafka.log.Log)
[2023-07-18 12:04:18,038] INFO [Log partition=my_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 711 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,043] INFO [ProducerStateManager partition=my_topic-0] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\my_topic-0\00000000000000000711.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:04:18,045] INFO [Log partition=my_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 711 in 66 ms (kafka.log.Log)
[2023-07-18 12:04:18,114] INFO [Log partition=my_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 657 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,118] INFO [ProducerStateManager partition=my_topic-2] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\my_topic-2\00000000000000000657.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:04:18,120] INFO [Log partition=my_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 657 in 69 ms (kafka.log.Log)
[2023-07-18 12:04:18,173] INFO [Log partition=__consumer_offsets-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 23 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,179] INFO [ProducerStateManager partition=__consumer_offsets-0] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-0\00000000000000000023.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:04:18,182] INFO [Log partition=__consumer_offsets-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 23 in 58 ms (kafka.log.Log)
[2023-07-18 12:04:18,212] INFO [Log partition=__consumer_offsets-10, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,217] INFO [Log partition=__consumer_offsets-10, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 30 ms (kafka.log.Log)
[2023-07-18 12:04:18,250] INFO [Log partition=__consumer_offsets-12, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,251] INFO [Log partition=__consumer_offsets-12, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 30 ms (kafka.log.Log)
[2023-07-18 12:04:18,278] INFO [Log partition=__consumer_offsets-14, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,280] INFO [Log partition=__consumer_offsets-14, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 23 ms (kafka.log.Log)
[2023-07-18 12:04:18,315] INFO [Log partition=__consumer_offsets-16, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,316] INFO [Log partition=__consumer_offsets-16, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 29 ms (kafka.log.Log)
[2023-07-18 12:04:18,349] INFO [Log partition=__consumer_offsets-18, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,351] INFO [Log partition=__consumer_offsets-18, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 29 ms (kafka.log.Log)
[2023-07-18 12:04:18,387] INFO [Log partition=__consumer_offsets-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,389] INFO [Log partition=__consumer_offsets-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 30 ms (kafka.log.Log)
[2023-07-18 12:04:18,423] INFO [Log partition=__consumer_offsets-20, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,425] INFO [Log partition=__consumer_offsets-20, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 29 ms (kafka.log.Log)
[2023-07-18 12:04:18,455] INFO [Log partition=__consumer_offsets-22, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,457] INFO [Log partition=__consumer_offsets-22, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 24 ms (kafka.log.Log)
[2023-07-18 12:04:18,489] INFO [Log partition=__consumer_offsets-24, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,491] INFO [Log partition=__consumer_offsets-24, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 25 ms (kafka.log.Log)
[2023-07-18 12:04:18,521] INFO [Log partition=__consumer_offsets-26, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,523] INFO [Log partition=__consumer_offsets-26, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 25 ms (kafka.log.Log)
[2023-07-18 12:04:18,558] INFO [Log partition=__consumer_offsets-28, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,561] INFO [Log partition=__consumer_offsets-28, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 28 ms (kafka.log.Log)
[2023-07-18 12:04:18,586] INFO [Log partition=__consumer_offsets-30, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,588] INFO [Log partition=__consumer_offsets-30, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 23 ms (kafka.log.Log)
[2023-07-18 12:04:18,621] INFO [Log partition=__consumer_offsets-32, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,623] INFO [Log partition=__consumer_offsets-32, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 27 ms (kafka.log.Log)
[2023-07-18 12:04:18,659] INFO [Log partition=__consumer_offsets-34, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,661] INFO [Log partition=__consumer_offsets-34, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 31 ms (kafka.log.Log)
[2023-07-18 12:04:18,698] INFO [Log partition=__consumer_offsets-36, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,701] INFO [Log partition=__consumer_offsets-36, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 33 ms (kafka.log.Log)
[2023-07-18 12:04:18,737] INFO [Log partition=__consumer_offsets-38, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,740] INFO [Log partition=__consumer_offsets-38, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 33 ms (kafka.log.Log)
[2023-07-18 12:04:18,777] INFO [Log partition=__consumer_offsets-4, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,780] INFO [Log partition=__consumer_offsets-4, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 32 ms (kafka.log.Log)
[2023-07-18 12:04:18,814] INFO [Log partition=__consumer_offsets-40, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,816] INFO [Log partition=__consumer_offsets-40, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 29 ms (kafka.log.Log)
[2023-07-18 12:04:18,839] INFO [Log partition=__consumer_offsets-42, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,841] INFO [Log partition=__consumer_offsets-42, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 22 ms (kafka.log.Log)
[2023-07-18 12:04:18,879] INFO [Log partition=__consumer_offsets-44, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,881] INFO [Log partition=__consumer_offsets-44, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 33 ms (kafka.log.Log)
[2023-07-18 12:04:18,906] INFO [Log partition=__consumer_offsets-46, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,908] INFO [Log partition=__consumer_offsets-46, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 23 ms (kafka.log.Log)
[2023-07-18 12:04:18,985] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 3867 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:18,989] INFO [ProducerStateManager partition=__consumer_offsets-48] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000003867.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:04:18,991] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 3867 in 76 ms (kafka.log.Log)
[2023-07-18 12:04:19,013] INFO [Log partition=__consumer_offsets-6, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:19,016] INFO [Log partition=__consumer_offsets-6, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 21 ms (kafka.log.Log)
[2023-07-18 12:04:19,050] INFO [Log partition=__consumer_offsets-8, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:04:19,052] INFO [Log partition=__consumer_offsets-8, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 31 ms (kafka.log.Log)
[2023-07-18 12:04:19,060] INFO Logs loading complete in 1412 ms. (kafka.log.LogManager)
[2023-07-18 12:04:19,092] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2023-07-18 12:04:19,094] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2023-07-18 12:04:20,028] INFO Awaiting socket connections on localhost:9093. (kafka.network.Acceptor)
[2023-07-18 12:04:20,126] INFO [SocketServer brokerId=2] Created data-plane acceptor and processors for endpoint : EndPoint(localhost,9093,ListenerName(PLAINTEXT),PLAINTEXT) (kafka.network.SocketServer)
[2023-07-18 12:04:20,129] INFO [SocketServer brokerId=2] Started 1 acceptor threads for data-plane (kafka.network.SocketServer)
[2023-07-18 12:04:20,166] INFO [ExpirationReaper-2-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:04:20,169] INFO [ExpirationReaper-2-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:04:20,172] INFO [ExpirationReaper-2-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:04:20,173] INFO [ExpirationReaper-2-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:04:20,230] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2023-07-18 12:04:20,398] INFO Creating /brokers/ids/2 (is it secure? false) (kafka.zk.KafkaZkClient)
[2023-07-18 12:04:20,440] INFO Stat of the created znode at /brokers/ids/2 is: 613,613,1689662060423,1689662060423,1,0,0,72083765522333697,188,0,613
 (kafka.zk.KafkaZkClient)
[2023-07-18 12:04:20,442] INFO Registered broker 2 at path /brokers/ids/2 with addresses: ArraySeq(EndPoint(localhost,9093,ListenerName(PLAINTEXT),PLAINTEXT)), czxid (broker epoch): 613 (kafka.zk.KafkaZkClient)
[2023-07-18 12:04:20,615] INFO [ExpirationReaper-2-topic]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:04:20,634] INFO [ExpirationReaper-2-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:04:20,636] INFO [ExpirationReaper-2-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:04:20,694] INFO [GroupCoordinator 2]: Starting up. (kafka.coordinator.group.GroupCoordinator)
[2023-07-18 12:04:20,696] INFO [GroupCoordinator 2]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
[2023-07-18 12:04:20,705] INFO [GroupMetadataManager brokerId=2] Removed 0 expired offsets in 9 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:20,728] INFO [ProducerId Manager 2]: Acquired new producerId block (brokerId:2,blockStartProducerId:9000,blockEndProducerId:9999) by writing to Zk with path version 10 (kafka.coordinator.transaction.ProducerIdManager)
[2023-07-18 12:04:20,777] INFO [TransactionCoordinator id=2] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
[2023-07-18 12:04:20,782] INFO [Transaction Marker Channel Manager 2]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2023-07-18 12:04:20,782] INFO [TransactionCoordinator id=2] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2023-07-18 12:04:20,833] INFO [ExpirationReaper-2-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:04:20,865] INFO [/config/changes-event-process-thread]: Starting (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2023-07-18 12:04:20,917] INFO [SocketServer brokerId=2] Started data-plane processors for 1 acceptors (kafka.network.SocketServer)
[2023-07-18 12:04:20,933] INFO Kafka version: 2.5.0 (org.apache.kafka.common.utils.AppInfoParser)
[2023-07-18 12:04:20,933] INFO Kafka commitId: 66563e712b0b9f84 (org.apache.kafka.common.utils.AppInfoParser)
[2023-07-18 12:04:20,933] INFO Kafka startTimeMs: 1689662060920 (org.apache.kafka.common.utils.AppInfoParser)
[2023-07-18 12:04:20,939] INFO [KafkaServer id=2] started (kafka.server.KafkaServer)
[2023-07-18 12:04:21,181] INFO [Partition __consumer_offsets-18 broker=2] Log loaded for partition __consumer_offsets-18 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,185] INFO [Partition __consumer_offsets-22 broker=2] Log loaded for partition __consumer_offsets-22 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,189] INFO [Partition __consumer_offsets-10 broker=2] Log loaded for partition __consumer_offsets-10 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,193] INFO [Partition __consumer_offsets-44 broker=2] Log loaded for partition __consumer_offsets-44 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,196] INFO [Partition __consumer_offsets-14 broker=2] Log loaded for partition __consumer_offsets-14 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,202] INFO [Partition __consumer_offsets-48 broker=2] Log loaded for partition __consumer_offsets-48 with initial high watermark 3867 (kafka.cluster.Partition)
[2023-07-18 12:04:21,207] INFO [Partition __consumer_offsets-34 broker=2] Log loaded for partition __consumer_offsets-34 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,213] INFO [Partition __consumer_offsets-4 broker=2] Log loaded for partition __consumer_offsets-4 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,229] INFO [Partition __consumer_offsets-38 broker=2] Log loaded for partition __consumer_offsets-38 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,237] INFO [Partition __consumer_offsets-8 broker=2] Log loaded for partition __consumer_offsets-8 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,240] INFO [Partition __consumer_offsets-26 broker=2] Log loaded for partition __consumer_offsets-26 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,247] INFO [Partition my_other_topic-0 broker=2] Log loaded for partition my_other_topic-0 with initial high watermark 29 (kafka.cluster.Partition)
[2023-07-18 12:04:21,253] INFO [Partition __consumer_offsets-30 broker=2] Log loaded for partition __consumer_offsets-30 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,259] INFO [Partition my_topic-0 broker=2] Log loaded for partition my_topic-0 with initial high watermark 711 (kafka.cluster.Partition)
[2023-07-18 12:04:21,268] INFO [Partition __consumer_offsets-0 broker=2] Log loaded for partition __consumer_offsets-0 with initial high watermark 23 (kafka.cluster.Partition)
[2023-07-18 12:04:21,272] INFO [Partition __consumer_offsets-20 broker=2] Log loaded for partition __consumer_offsets-20 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,281] INFO [Partition __consumer_offsets-24 broker=2] Log loaded for partition __consumer_offsets-24 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,286] INFO [Partition __consumer_offsets-42 broker=2] Log loaded for partition __consumer_offsets-42 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,291] INFO [Partition __consumer_offsets-12 broker=2] Log loaded for partition __consumer_offsets-12 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,298] INFO [Partition __consumer_offsets-46 broker=2] Log loaded for partition __consumer_offsets-46 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,302] INFO [Partition __consumer_offsets-16 broker=2] Log loaded for partition __consumer_offsets-16 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,307] INFO [Partition __consumer_offsets-2 broker=2] Log loaded for partition __consumer_offsets-2 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,313] INFO [Partition __consumer_offsets-36 broker=2] Log loaded for partition __consumer_offsets-36 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,318] INFO [Partition __consumer_offsets-6 broker=2] Log loaded for partition __consumer_offsets-6 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,321] INFO [Partition __consumer_offsets-40 broker=2] Log loaded for partition __consumer_offsets-40 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,325] INFO [Partition my_topic-2 broker=2] Log loaded for partition my_topic-2 with initial high watermark 657 (kafka.cluster.Partition)
[2023-07-18 12:04:21,332] INFO [Partition my_other_topic-2 broker=2] Log loaded for partition my_other_topic-2 with initial high watermark 45 (kafka.cluster.Partition)
[2023-07-18 12:04:21,336] INFO [Partition __consumer_offsets-28 broker=2] Log loaded for partition __consumer_offsets-28 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,341] INFO [Partition __consumer_offsets-32 broker=2] Log loaded for partition __consumer_offsets-32 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:04:21,426] INFO [ReplicaFetcherManager on broker 2] Removed fetcher for partitions HashSet(__consumer_offsets-22, __consumer_offsets-30, __consumer_offsets-46, __consumer_offsets-38, __consumer_offsets-48, __consumer_offsets-26, __consumer_offsets-34, __consumer_offsets-8, __consumer_offsets-4, my_topic-2, __consumer_offsets-16, __consumer_offsets-28, __consumer_offsets-36, my_other_topic-0, __consumer_offsets-42, __consumer_offsets-18, my_topic-0, __consumer_offsets-24, __consumer_offsets-2, __consumer_offsets-6, __consumer_offsets-14, __consumer_offsets-20, __consumer_offsets-0, __consumer_offsets-44, my_other_topic-2, __consumer_offsets-12, __consumer_offsets-10, __consumer_offsets-32, __consumer_offsets-40) (kafka.server.ReplicaFetcherManager)
[2023-07-18 12:04:21,436] INFO [Partition __consumer_offsets-18 broker=2] __consumer_offsets-18 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,460] INFO [Partition __consumer_offsets-22 broker=2] __consumer_offsets-22 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,470] INFO [Partition __consumer_offsets-10 broker=2] __consumer_offsets-10 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,479] INFO [Partition __consumer_offsets-44 broker=2] __consumer_offsets-44 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,488] INFO [Partition __consumer_offsets-14 broker=2] __consumer_offsets-14 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,499] INFO [Partition __consumer_offsets-48 broker=2] __consumer_offsets-48 starts at leader epoch 11 from offset 3867 with high watermark 3867. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,511] INFO [Partition __consumer_offsets-34 broker=2] __consumer_offsets-34 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,521] INFO [Partition __consumer_offsets-4 broker=2] __consumer_offsets-4 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,534] INFO [Partition __consumer_offsets-38 broker=2] __consumer_offsets-38 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,544] INFO [Partition __consumer_offsets-8 broker=2] __consumer_offsets-8 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,554] INFO [Partition __consumer_offsets-26 broker=2] __consumer_offsets-26 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,565] INFO [Partition my_other_topic-0 broker=2] my_other_topic-0 starts at leader epoch 11 from offset 29 with high watermark 29. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,577] INFO [Partition __consumer_offsets-30 broker=2] __consumer_offsets-30 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,585] INFO [Partition my_topic-0 broker=2] my_topic-0 starts at leader epoch 11 from offset 711 with high watermark 711. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,594] INFO [Partition __consumer_offsets-0 broker=2] __consumer_offsets-0 starts at leader epoch 11 from offset 23 with high watermark 23. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,604] INFO [Partition __consumer_offsets-20 broker=2] __consumer_offsets-20 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,614] INFO [Partition __consumer_offsets-24 broker=2] __consumer_offsets-24 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,622] INFO [Partition __consumer_offsets-42 broker=2] __consumer_offsets-42 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,631] INFO [Partition __consumer_offsets-12 broker=2] __consumer_offsets-12 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,638] INFO [Partition __consumer_offsets-46 broker=2] __consumer_offsets-46 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,646] INFO [Partition __consumer_offsets-16 broker=2] __consumer_offsets-16 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,654] INFO [Partition __consumer_offsets-2 broker=2] __consumer_offsets-2 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,667] INFO [Partition __consumer_offsets-36 broker=2] __consumer_offsets-36 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,677] INFO [Partition __consumer_offsets-6 broker=2] __consumer_offsets-6 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,686] INFO [Partition __consumer_offsets-40 broker=2] __consumer_offsets-40 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,696] INFO [Partition my_topic-2 broker=2] my_topic-2 starts at leader epoch 11 from offset 657 with high watermark 657. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,705] INFO [Partition my_other_topic-2 broker=2] my_other_topic-2 starts at leader epoch 11 from offset 45 with high watermark 45. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,717] INFO [Partition __consumer_offsets-28 broker=2] __consumer_offsets-28 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,731] INFO [Partition __consumer_offsets-32 broker=2] __consumer_offsets-32 starts at leader epoch 11 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:04:21,749] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-18 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,751] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-22 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,752] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-10 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,752] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-44 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,753] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-14 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,753] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-48 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,753] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-34 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,754] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-4 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,754] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-38 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,754] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-8 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,755] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-26 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,755] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-30 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,756] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-0 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,756] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-20 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,757] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-24 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,758] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-42 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,758] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-12 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,759] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-46 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,760] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-16 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,761] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-18 in 8 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,763] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-2 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,765] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-22 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,765] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-36 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,765] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-10 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,765] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-6 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,766] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-44 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,766] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-40 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,766] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-14 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,766] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-28 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,767] INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-32 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,826] INFO Static member MemberMetadata(memberId=consumer-1-3c34a67b-7b07-4be8-8ac4-d02550be5291, groupInstanceId=Some(null), clientId=consumer-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group test loaded with member id consumer-1-3c34a67b-7b07-4be8-8ac4-d02550be5291 at generation 1. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:04:21,844] INFO Static member MemberMetadata(memberId=consumer-1-e15ad38d-bb60-4009-8dd2-604d4c6b74d9, groupInstanceId=Some(null), clientId=consumer-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group test loaded with member id consumer-1-e15ad38d-bb60-4009-8dd2-604d4c6b74d9 at generation 3. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:04:21,856] INFO Static member MemberMetadata(memberId=consumer-1-19f258f7-3518-494e-a319-be0e34403654, groupInstanceId=Some(null), clientId=consumer-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group test loaded with member id consumer-1-19f258f7-3518-494e-a319-be0e34403654 at generation 5. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:04:21,860] INFO Static member MemberMetadata(memberId=consumer-1-4382c13d-5056-453c-96c9-d83ffa84a216, groupInstanceId=Some(null), clientId=consumer-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group test loaded with member id consumer-1-4382c13d-5056-453c-96c9-d83ffa84a216 at generation 7. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:04:21,912] INFO Static member MemberMetadata(memberId=consumer-1-4382c13d-5056-453c-96c9-d83ffa84a216, groupInstanceId=Some(null), clientId=consumer-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group test loaded with member id consumer-1-4382c13d-5056-453c-96c9-d83ffa84a216 at generation 8. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:04:21,930] INFO Static member MemberMetadata(memberId=consumer-1-12cd79bd-3f87-42f5-88ef-eb07d843aafa, groupInstanceId=Some(null), clientId=consumer-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group test loaded with member id consumer-1-12cd79bd-3f87-42f5-88ef-eb07d843aafa at generation 10. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:04:21,935] INFO Static member MemberMetadata(memberId=consumer-1-476ef6f8-1923-4b83-a90c-cf10851008e6, groupInstanceId=Some(null), clientId=consumer-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group test loaded with member id consumer-1-476ef6f8-1923-4b83-a90c-cf10851008e6 at generation 11. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:04:21,937] INFO Static member MemberMetadata(memberId=consumer-1-12cd79bd-3f87-42f5-88ef-eb07d843aafa, groupInstanceId=Some(null), clientId=consumer-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group test loaded with member id consumer-1-12cd79bd-3f87-42f5-88ef-eb07d843aafa at generation 11. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:04:21,948] INFO Static member MemberMetadata(memberId=consumer-1-5a5afc44-72d2-454a-8e70-1c00b12a1d3e, groupInstanceId=Some(null), clientId=consumer-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group test loaded with member id consumer-1-5a5afc44-72d2-454a-8e70-1c00b12a1d3e at generation 13. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:04:21,951] INFO Static member MemberMetadata(memberId=consumer-1-a06f5fc2-22ad-4b8a-8945-5228d5bcba00, groupInstanceId=Some(null), clientId=consumer-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group test loaded with member id consumer-1-a06f5fc2-22ad-4b8a-8945-5228d5bcba00 at generation 14. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:04:21,951] INFO Static member MemberMetadata(memberId=consumer-1-5a5afc44-72d2-454a-8e70-1c00b12a1d3e, groupInstanceId=Some(null), clientId=consumer-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group test loaded with member id consumer-1-5a5afc44-72d2-454a-8e70-1c00b12a1d3e at generation 14. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:04:21,956] INFO Static member MemberMetadata(memberId=consumer-1-a06f5fc2-22ad-4b8a-8945-5228d5bcba00, groupInstanceId=Some(null), clientId=consumer-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group test loaded with member id consumer-1-a06f5fc2-22ad-4b8a-8945-5228d5bcba00 at generation 15. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:04:21,957] INFO Static member MemberMetadata(memberId=consumer-1-5a5afc44-72d2-454a-8e70-1c00b12a1d3e, groupInstanceId=Some(null), clientId=consumer-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group test loaded with member id consumer-1-5a5afc44-72d2-454a-8e70-1c00b12a1d3e at generation 15. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:04:21,958] INFO Static member MemberMetadata(memberId=consumer-1-2b8af7df-f230-4d19-928d-1223c4c4b5e8, groupInstanceId=Some(null), clientId=consumer-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group test loaded with member id consumer-1-2b8af7df-f230-4d19-928d-1223c4c4b5e8 at generation 15. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:04:21,966] INFO Static member MemberMetadata(memberId=consumer-1-5a5afc44-72d2-454a-8e70-1c00b12a1d3e, groupInstanceId=Some(null), clientId=consumer-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group test loaded with member id consumer-1-5a5afc44-72d2-454a-8e70-1c00b12a1d3e at generation 16. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:04:21,967] INFO Static member MemberMetadata(memberId=consumer-1-2b8af7df-f230-4d19-928d-1223c4c4b5e8, groupInstanceId=Some(null), clientId=consumer-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group test loaded with member id consumer-1-2b8af7df-f230-4d19-928d-1223c4c4b5e8 at generation 16. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:04:21,978] INFO Static member MemberMetadata(memberId=consumer-1-2b8af7df-f230-4d19-928d-1223c4c4b5e8, groupInstanceId=Some(null), clientId=consumer-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group test loaded with member id consumer-1-2b8af7df-f230-4d19-928d-1223c4c4b5e8 at generation 17. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:04:21,980] INFO Static member MemberMetadata(memberId=consumer-1-620231fe-a293-422d-b329-3ba367fe9a54, groupInstanceId=Some(null), clientId=consumer-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group test loaded with member id consumer-1-620231fe-a293-422d-b329-3ba367fe9a54 at generation 19. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:04:21,992] INFO [GroupCoordinator 2]: Loading group metadata for test with generation 20 (kafka.coordinator.group.GroupCoordinator)
[2023-07-18 12:04:21,993] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-48 in 226 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,994] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-34 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,995] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-4 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,996] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-38 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,997] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-8 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,997] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-26 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:21,998] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-30 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:22,011] INFO Static member MemberMetadata(memberId=consumer-user-tracking-consumer-1-4085575f-5c6b-4735-9549-dc7037acda35, groupInstanceId=Some(null), clientId=consumer-user-tracking-consumer-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group user-tracking-consumer loaded with member id consumer-user-tracking-consumer-1-4085575f-5c6b-4735-9549-dc7037acda35 at generation 1. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:04:22,015] INFO [GroupCoordinator 2]: Loading group metadata for user-tracking-consumer with generation 2 (kafka.coordinator.group.GroupCoordinator)
[2023-07-18 12:04:22,016] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-0 in 16 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:22,017] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-20 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:22,017] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-24 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:22,018] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-42 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:22,019] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-12 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:22,019] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-46 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:22,024] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-16 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:22,024] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-2 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:22,025] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-36 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:22,028] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-6 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:22,032] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-40 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:22,033] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-28 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:22,035] INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-32 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:04:22,069] INFO [GroupCoordinator 2]: Preparing to rebalance group test in state PreparingRebalance with old generation 20 (__consumer_offsets-48) (reason: Adding new member consumer-test-1-c46c4430-0cd7-44d9-a8fa-307b03c764a2 with group instance id None) (kafka.coordinator.group.GroupCoordinator)
[2023-07-18 12:04:22,085] INFO [GroupCoordinator 2]: Stabilized group test generation 21 (__consumer_offsets-48) (kafka.coordinator.group.GroupCoordinator)
[2023-07-18 12:04:22,108] INFO [GroupCoordinator 2]: Assignment received from leader for group test for generation 21 (kafka.coordinator.group.GroupCoordinator)
[2023-07-18 12:04:22,183] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Rolled new log segment at offset 3867 in 12 ms. (kafka.log.Log)
[2023-07-18 12:04:25,720] INFO [Log partition=my_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Found deletable segments with base offsets [0] due to retention time 604800000ms breach (kafka.log.Log)
[2023-07-18 12:04:25,733] INFO [Log partition=my_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Rolled new log segment at offset 691 in 11 ms. (kafka.log.Log)
[2023-07-18 12:04:25,738] ERROR Error while deleting segments for my_topic-1 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1 (kafka.server.LogDirFailureChannel)
java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1\00000000000000000000.index -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1\00000000000000000000.index.deleted: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.AbstractIndex.renameTo(AbstractIndex.scala:207)
	at kafka.log.LogSegment.changeFileSuffixes(LogSegment.scala:496)
	at kafka.log.Log.$anonfun$deleteSegmentFiles$1(Log.scala:2208)
	at kafka.log.Log.$anonfun$deleteSegmentFiles$1$adapted(Log.scala:2208)
	at scala.collection.immutable.List.foreach(List.scala:305)
	at kafka.log.Log.deleteSegmentFiles(Log.scala:2208)
	at kafka.log.Log.removeAndDeleteSegments(Log.scala:2193)
	at kafka.log.Log.$anonfun$deleteSegments$2(Log.scala:1705)
	at kafka.log.Log.deleteSegments(Log.scala:2318)
	at kafka.log.Log.deleteRetentionMsBreachedSegments(Log.scala:1691)
	at kafka.log.Log.deleteOldSegments(Log.scala:1758)
	at kafka.log.LogManager.$anonfun$cleanupLogs$3(LogManager.scala:973)
	at kafka.log.LogManager.$anonfun$cleanupLogs$3$adapted(LogManager.scala:970)
	at scala.collection.immutable.List.foreach(List.scala:305)
	at kafka.log.LogManager.cleanupLogs(LogManager.scala:970)
	at kafka.log.LogManager.$anonfun$startup$2(LogManager.scala:393)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
	Suppressed: java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1\00000000000000000000.index -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1\00000000000000000000.index.deleted: The process cannot access the file because it is being used by another process.

		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 23 more
[2023-07-18 12:04:25,743] WARN [ReplicaManager broker=1] Stopping serving replicas in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1 (kafka.server.ReplicaManager)
[2023-07-18 12:04:25,744] ERROR Uncaught exception in scheduled task 'kafka-log-retention' (kafka.utils.KafkaScheduler)
org.apache.kafka.common.errors.KafkaStorageException: Error while deleting segments for my_topic-1 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1
Caused by: java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1\00000000000000000000.index -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1\00000000000000000000.index.deleted: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.AbstractIndex.renameTo(AbstractIndex.scala:207)
	at kafka.log.LogSegment.changeFileSuffixes(LogSegment.scala:496)
	at kafka.log.Log.$anonfun$deleteSegmentFiles$1(Log.scala:2208)
	at kafka.log.Log.$anonfun$deleteSegmentFiles$1$adapted(Log.scala:2208)
	at scala.collection.immutable.List.foreach(List.scala:305)
	at kafka.log.Log.deleteSegmentFiles(Log.scala:2208)
	at kafka.log.Log.removeAndDeleteSegments(Log.scala:2193)
	at kafka.log.Log.$anonfun$deleteSegments$2(Log.scala:1705)
	at kafka.log.Log.deleteSegments(Log.scala:2318)
	at kafka.log.Log.deleteRetentionMsBreachedSegments(Log.scala:1691)
	at kafka.log.Log.deleteOldSegments(Log.scala:1758)
	at kafka.log.LogManager.$anonfun$cleanupLogs$3(LogManager.scala:973)
	at kafka.log.LogManager.$anonfun$cleanupLogs$3$adapted(LogManager.scala:970)
	at scala.collection.immutable.List.foreach(List.scala:305)
	at kafka.log.LogManager.cleanupLogs(LogManager.scala:970)
	at kafka.log.LogManager.$anonfun$startup$2(LogManager.scala:393)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
	Suppressed: java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1\00000000000000000000.index -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1\00000000000000000000.index.deleted: The process cannot access the file because it is being used by another process.

		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 23 more
[2023-07-18 12:04:25,747] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions HashSet(__consumer_offsets-21, __consumer_offsets-25, __consumer_offsets-31, __consumer_offsets-3, __consumer_offsets-37, __consumer_offsets-15, first_topic-0, __consumer_offsets-17, __consumer_offsets-13, __consumer_offsets-43, my_topic-1, __consumer_offsets-39, __consumer_offsets-29, __consumer_offsets-27, __consumer_offsets-7, __consumer_offsets-9, __consumer_offsets-35, my_other_topic-1, __consumer_offsets-41, __consumer_offsets-33, __consumer_offsets-23, __consumer_offsets-49, __consumer_offsets-47, my_topic-3, __consumer_offsets-19, __consumer_offsets-11, __consumer_offsets-45, __consumer_offsets-1, __consumer_offsets-5) (kafka.server.ReplicaFetcherManager)
[2023-07-18 12:04:25,753] INFO [ReplicaAlterLogDirsManager on broker 1] Removed fetcher for partitions HashSet(__consumer_offsets-21, __consumer_offsets-25, __consumer_offsets-31, __consumer_offsets-3, __consumer_offsets-37, __consumer_offsets-15, first_topic-0, __consumer_offsets-17, __consumer_offsets-13, __consumer_offsets-43, my_topic-1, __consumer_offsets-39, __consumer_offsets-29, __consumer_offsets-27, __consumer_offsets-7, __consumer_offsets-9, __consumer_offsets-35, my_other_topic-1, __consumer_offsets-41, __consumer_offsets-33, __consumer_offsets-23, __consumer_offsets-49, __consumer_offsets-47, my_topic-3, __consumer_offsets-19, __consumer_offsets-11, __consumer_offsets-45, __consumer_offsets-1, __consumer_offsets-5) (kafka.server.ReplicaAlterLogDirsManager)
[2023-07-18 12:04:25,790] WARN [ReplicaManager broker=1] Broker 1 stopped fetcher for partitions __consumer_offsets-21,__consumer_offsets-25,__consumer_offsets-31,__consumer_offsets-3,__consumer_offsets-37,__consumer_offsets-15,first_topic-0,__consumer_offsets-17,__consumer_offsets-13,__consumer_offsets-43,my_topic-1,__consumer_offsets-39,__consumer_offsets-29,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-35,my_other_topic-1,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,my_topic-3,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5 and stopped moving logs for partitions  because they are in the failed log directory C:\PracticeJava\Kafka\MultiNode\kafka-logs-1. (kafka.server.ReplicaManager)
[2023-07-18 12:04:25,792] WARN Stopping serving logs in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1 (kafka.log.LogManager)
[2023-07-18 12:04:25,798] ERROR Shutdown broker because all log dirs in C:\PracticeJava\Kafka\MultiNode\kafka-logs-1 have failed (kafka.log.LogManager)
[2023-07-18 12:04:26,315] WARN Exception causing close of session 0x10017cd86080000: An existing connection was forcibly closed by the remote host (org.apache.zookeeper.server.NIOServerCnxn)
[2023-07-18 12:04:34,654] ERROR Failed to clean up log for __consumer_offsets-48 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 due to IOException (kafka.server.LogDirFailureChannel)
java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.swap: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.AbstractIndex.renameTo(AbstractIndex.scala:207)
	at kafka.log.LogSegment.changeFileSuffixes(LogSegment.scala:497)
	at kafka.log.Log.$anonfun$replaceSegments$4(Log.scala:2269)
	at kafka.log.Log.$anonfun$replaceSegments$4$adapted(Log.scala:2269)
	at scala.collection.immutable.List.foreach(List.scala:305)
	at kafka.log.Log.replaceSegments(Log.scala:2269)
	at kafka.log.Cleaner.cleanSegments(LogCleaner.scala:594)
	at kafka.log.Cleaner.$anonfun$doClean$6(LogCleaner.scala:519)
	at kafka.log.Cleaner.doClean(LogCleaner.scala:518)
	at kafka.log.Cleaner.clean(LogCleaner.scala:492)
	at kafka.log.LogCleaner$CleanerThread.cleanLog(LogCleaner.scala:361)
	at kafka.log.LogCleaner$CleanerThread.cleanFilthiestLog(LogCleaner.scala:334)
	at kafka.log.LogCleaner$CleanerThread.tryCleanFilthiestLog(LogCleaner.scala:314)
	at kafka.log.LogCleaner$CleanerThread.doWork(LogCleaner.scala:303)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
	Suppressed: java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.swap: The process cannot access the file because it is being used by another process.

		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 15 more
[2023-07-18 12:04:34,661] WARN [ReplicaManager broker=2] Stopping serving replicas in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 (kafka.server.ReplicaManager)
[2023-07-18 12:04:34,666] INFO [ReplicaFetcherManager on broker 2] Removed fetcher for partitions HashSet(__consumer_offsets-22, __consumer_offsets-30, __consumer_offsets-46, __consumer_offsets-38, __consumer_offsets-48, __consumer_offsets-26, __consumer_offsets-34, __consumer_offsets-8, __consumer_offsets-4, my_topic-2, __consumer_offsets-16, __consumer_offsets-28, __consumer_offsets-36, my_other_topic-0, __consumer_offsets-42, __consumer_offsets-18, my_topic-0, __consumer_offsets-24, __consumer_offsets-2, __consumer_offsets-6, __consumer_offsets-14, __consumer_offsets-20, __consumer_offsets-0, __consumer_offsets-44, my_other_topic-2, __consumer_offsets-12, __consumer_offsets-10, __consumer_offsets-32, __consumer_offsets-40) (kafka.server.ReplicaFetcherManager)
[2023-07-18 12:04:34,669] INFO [ReplicaAlterLogDirsManager on broker 2] Removed fetcher for partitions HashSet(__consumer_offsets-22, __consumer_offsets-30, __consumer_offsets-46, __consumer_offsets-38, __consumer_offsets-48, __consumer_offsets-26, __consumer_offsets-34, __consumer_offsets-8, __consumer_offsets-4, my_topic-2, __consumer_offsets-16, __consumer_offsets-28, __consumer_offsets-36, my_other_topic-0, __consumer_offsets-42, __consumer_offsets-18, my_topic-0, __consumer_offsets-24, __consumer_offsets-2, __consumer_offsets-6, __consumer_offsets-14, __consumer_offsets-20, __consumer_offsets-0, __consumer_offsets-44, my_other_topic-2, __consumer_offsets-12, __consumer_offsets-10, __consumer_offsets-32, __consumer_offsets-40) (kafka.server.ReplicaAlterLogDirsManager)
[2023-07-18 12:04:34,727] WARN [ReplicaManager broker=2] Broker 2 stopped fetcher for partitions __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-46,__consumer_offsets-38,__consumer_offsets-48,__consumer_offsets-26,__consumer_offsets-34,__consumer_offsets-8,__consumer_offsets-4,my_topic-2,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-36,my_other_topic-0,__consumer_offsets-42,__consumer_offsets-18,my_topic-0,__consumer_offsets-24,__consumer_offsets-2,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,my_other_topic-2,__consumer_offsets-12,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 and stopped moving logs for partitions  because they are in the failed log directory C:\PracticeJava\Kafka\MultiNode\kafka-logs-2. (kafka.server.ReplicaManager)
[2023-07-18 12:04:34,728] WARN Stopping serving logs in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 (kafka.log.LogManager)
[2023-07-18 12:04:34,735] ERROR Shutdown broker because all log dirs in C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 have failed (kafka.log.LogManager)
[2023-07-18 12:04:35,253] WARN Exception causing close of session 0x10017cd86080001: An existing connection was forcibly closed by the remote host (org.apache.zookeeper.server.NIOServerCnxn)
[2023-07-18 12:04:39,545] INFO Expiring session 0x10017cd86080000, timeout of 18000ms exceeded (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:04:51,544] INFO Expiring session 0x10017cd86080001, timeout of 18000ms exceeded (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:05:40,978] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2023-07-18 12:05:41,513] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
[2023-07-18 12:05:41,601] INFO starting (kafka.server.KafkaServer)
[2023-07-18 12:05:41,602] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2023-07-18 12:05:41,660] INFO [ZooKeeperClient Kafka server] Initializing a new session to localhost:2181. (kafka.zookeeper.ZooKeeperClient)
[2023-07-18 12:05:41,679] INFO Client environment:zookeeper.version=3.5.7-f0fdd52973d373ffd9c86b81d99842dc2c7f660e, built on 02/10/2020 11:30 GMT (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:41,680] INFO Client environment:host.name=DESKTOP-KOBU9QU (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:41,680] INFO Client environment:java.version=11.0.18 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:41,681] INFO Client environment:java.vendor=Oracle Corporation (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:41,681] INFO Client environment:java.home=C:\PracticeJava\jdk-11.0.18 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:41,681] INFO Client environment:java.class.path=C:\PracticeJava\Kafka\MultiNode\Node1\libs\activation-1.1.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\aopalliance-repackaged-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\argparse4j-0.7.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\audience-annotations-0.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\commons-cli-1.4.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\commons-lang3-3.8.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-api-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-basic-auth-extension-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-file-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-json-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-mirror-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-mirror-client-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-runtime-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-transforms-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\hk2-api-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\hk2-locator-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\hk2-utils-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-annotations-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-core-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-databind-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-dataformat-csv-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-datatype-jdk8-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-jaxrs-base-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-jaxrs-json-provider-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-module-jaxb-annotations-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-module-paranamer-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-module-scala_2.13-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.activation-api-1.2.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.annotation-api-1.3.4.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.inject-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.ws.rs-api-2.1.5.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.xml.bind-api-2.3.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javassist-3.22.0-CR2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javassist-3.26.0-GA.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javax.servlet-api-3.1.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javax.ws.rs-api-2.1.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jaxb-api-2.3.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-client-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-common-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-container-servlet-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-container-servlet-core-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-hk2-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-media-jaxb-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-server-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-client-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-continuation-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-http-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-io-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-security-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-server-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-servlet-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-servlets-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-util-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jopt-simple-5.0.4.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-clients-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-log4j-appender-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-examples-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-scala_2.13-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-test-utils-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-tools-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-javadoc.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-javadoc.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-scaladoc.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-scaladoc.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-sources.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-sources.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test-sources.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test-sources.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\log4j-1.2.17.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\lz4-java-1.7.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\maven-artifact-3.6.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\metrics-core-2.2.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-buffer-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-codec-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-common-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-handler-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-resolver-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-transport-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-transport-native-epoll-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-transport-native-unix-common-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\osgi-resource-locator-1.0.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\paranamer-2.8.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\plexus-utils-3.2.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\reflections-0.9.12.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\rocksdbjni-5.18.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-collection-compat_2.13-2.1.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-java8-compat_2.13-0.9.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-library-2.13.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-logging_2.13-3.9.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-reflect-2.13.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\slf4j-api-1.7.30.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\slf4j-log4j12-1.7.30.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\snappy-java-1.1.7.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\validation-api-2.0.1.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\zookeeper-3.5.7.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\zookeeper-jute-3.5.7.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\zstd-jni-1.4.4-7.jar (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:41,685] INFO Client environment:java.library.path=C:\PracticeJava\jdk-11.0.18\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%JAVA_HOME%\bin;C:\Program Files\Git\cmd;C:\Program Files\apache-maven-3.6.1\bin;C:\Program Files\TortoiseGit\bin;%MAVEN_HOME\bin;C:\Program Files\Notepad++;C:\Program Files\MongoDB\Server\4.2\bin;C:\Program Files (x86)\Groovy\bin;C:\Program Files\Perforce\;C:\Program Files (x86)\gradle-7.2\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Windows\SysWOW64;C:\Program Files\dotnet\;C:\Program Files\Notepad++;C:\Users\sagar\AppData\Local\Programs\Microsoft VS Code Insiders\bin;C:\PracticeJava\jdk-11.0.18\bin;C:\Users\sagar\AppData\Local\GitHubDesktop\bin;C:\Users\sagar\AppData\Local\Microsoft\WindowsApps;C:\Windows\SysWOW64;;. (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:41,685] INFO Client environment:java.io.tmpdir=C:\Users\sagar\AppData\Local\Temp\ (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:41,686] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:41,686] INFO Client environment:os.name=Windows 11 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:41,686] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:41,687] INFO Client environment:os.version=10.0 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:41,687] INFO Client environment:user.name=sagar (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:41,687] INFO Client environment:user.home=C:\Users\sagar (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:41,688] INFO Client environment:user.dir=C:\PracticeJava\Kafka\MultiNode\Node1\bin\windows (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:41,688] INFO Client environment:os.memory.free=1015MB (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:41,688] INFO Client environment:os.memory.max=1024MB (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:41,689] INFO Client environment:os.memory.total=1024MB (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:41,693] INFO Initiating client connection, connectString=localhost:2181 sessionTimeout=18000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@22295ec4 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:41,721] INFO jute.maxbuffer value is 4194304 Bytes (org.apache.zookeeper.ClientCnxnSocket)
[2023-07-18 12:05:41,732] INFO zookeeper.request.timeout value is 0. feature enabled= (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:05:41,737] INFO [ZooKeeperClient Kafka server] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2023-07-18 12:05:41,753] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:05:41,761] INFO Socket connection established, initiating session, client: /127.0.0.1:19366, server: localhost/127.0.0.1:2181 (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:05:41,777] INFO Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x10017cd86080002, negotiated timeout = 18000 (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:05:41,783] INFO [ZooKeeperClient Kafka server] Connected. (kafka.zookeeper.ZooKeeperClient)
[2023-07-18 12:05:42,131] INFO Cluster ID = dqc8hGyvQ4yospB768Rz2w (kafka.server.KafkaServer)
[2023-07-18 12:05:42,231] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 1
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.5-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = PLAINTEXT://localhost:9092
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = C:/PracticeJava/Kafka/MultiNode/kafka-logs-1
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.5-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 18000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2023-07-18 12:05:42,249] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 1
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.5-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = PLAINTEXT://localhost:9092
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = C:/PracticeJava/Kafka/MultiNode/kafka-logs-1
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.5-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 18000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2023-07-18 12:05:42,304] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2023-07-18 12:05:42,304] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2023-07-18 12:05:42,307] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2023-07-18 12:05:42,376] INFO Loading logs. (kafka.log.LogManager)
[2023-07-18 12:05:42,477] INFO [Log partition=first_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:42,479] INFO [Log partition=first_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:42,566] INFO [ProducerStateManager partition=first_topic-0] Writing producer snapshot at offset 64 (kafka.log.ProducerStateManager)
[2023-07-18 12:05:42,604] INFO [Log partition=first_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 64 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:42,612] INFO [ProducerStateManager partition=first_topic-0] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\first_topic-0\00000000000000000064.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:05:42,620] INFO [Log partition=first_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 64 in 192 ms (kafka.log.Log)
[2023-07-18 12:05:42,662] INFO [Log partition=my_other_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:42,663] INFO [Log partition=my_other_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:42,679] INFO [ProducerStateManager partition=my_other_topic-1] Writing producer snapshot at offset 26 (kafka.log.ProducerStateManager)
[2023-07-18 12:05:42,699] INFO [Log partition=my_other_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 26 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:42,707] INFO [ProducerStateManager partition=my_other_topic-1] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_other_topic-1\00000000000000000026.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:05:42,710] INFO [Log partition=my_other_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 26 in 59 ms (kafka.log.Log)
[2023-07-18 12:05:42,725] WARN [Log partition=my_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Found an orphaned index file C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1\00000000000000000000.index, with no corresponding log file. (kafka.log.Log)
[2023-07-18 12:05:42,727] WARN [Log partition=my_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Found an orphaned index file C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1\00000000000000000000.timeindex, with no corresponding log file. (kafka.log.Log)
[2023-07-18 12:05:42,734] ERROR [Log partition=my_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Could not find offset index file corresponding to log file C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1\00000000000000000691.log, recovering segment and rebuilding index files... (kafka.log.Log)
[2023-07-18 12:05:42,735] INFO [Log partition=my_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 691 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:42,739] INFO [ProducerStateManager partition=my_topic-1] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1\00000000000000000691.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:05:42,751] INFO [Log partition=my_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 691 (kafka.log.Log)
[2023-07-18 12:05:42,752] INFO [Log partition=my_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 691 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:42,756] INFO [ProducerStateManager partition=my_topic-1] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-1\00000000000000000691.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:05:42,777] INFO [Log partition=my_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 691 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:42,783] INFO [Log partition=my_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 691 and log end offset 691 in 67 ms (kafka.log.Log)
[2023-07-18 12:05:42,796] INFO [Log partition=my_topic-3, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:42,797] INFO [Log partition=my_topic-3, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:42,871] INFO [ProducerStateManager partition=my_topic-3] Writing producer snapshot at offset 609 (kafka.log.ProducerStateManager)
[2023-07-18 12:05:42,886] INFO [Log partition=my_topic-3, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 609 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:42,893] INFO [ProducerStateManager partition=my_topic-3] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_topic-3\00000000000000000609.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:05:42,896] INFO [Log partition=my_topic-3, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 609 in 109 ms (kafka.log.Log)
[2023-07-18 12:05:42,912] INFO [Log partition=__consumer_offsets-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:42,914] INFO [Log partition=__consumer_offsets-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:42,942] INFO [Log partition=__consumer_offsets-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:42,948] INFO [Log partition=__consumer_offsets-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 45 ms (kafka.log.Log)
[2023-07-18 12:05:42,958] INFO [Log partition=__consumer_offsets-11, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:42,959] INFO [Log partition=__consumer_offsets-11, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:42,982] INFO [Log partition=__consumer_offsets-11, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:42,989] INFO [Log partition=__consumer_offsets-11, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 36 ms (kafka.log.Log)
[2023-07-18 12:05:43,001] INFO [Log partition=__consumer_offsets-13, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,002] INFO [Log partition=__consumer_offsets-13, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,027] INFO [Log partition=__consumer_offsets-13, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,033] INFO [Log partition=__consumer_offsets-13, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 38 ms (kafka.log.Log)
[2023-07-18 12:05:43,052] INFO [Log partition=__consumer_offsets-15, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,053] INFO [Log partition=__consumer_offsets-15, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,078] INFO [Log partition=__consumer_offsets-15, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,084] INFO [Log partition=__consumer_offsets-15, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 42 ms (kafka.log.Log)
[2023-07-18 12:05:43,095] INFO [Log partition=__consumer_offsets-17, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,096] INFO [Log partition=__consumer_offsets-17, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,124] INFO [Log partition=__consumer_offsets-17, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,130] INFO [Log partition=__consumer_offsets-17, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 42 ms (kafka.log.Log)
[2023-07-18 12:05:43,142] INFO [Log partition=__consumer_offsets-19, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,144] INFO [Log partition=__consumer_offsets-19, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,168] INFO [Log partition=__consumer_offsets-19, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,173] INFO [Log partition=__consumer_offsets-19, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 38 ms (kafka.log.Log)
[2023-07-18 12:05:43,188] INFO [Log partition=__consumer_offsets-21, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,189] INFO [Log partition=__consumer_offsets-21, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,210] INFO [Log partition=__consumer_offsets-21, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,215] INFO [Log partition=__consumer_offsets-21, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 32 ms (kafka.log.Log)
[2023-07-18 12:05:43,225] INFO [Log partition=__consumer_offsets-23, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,226] INFO [Log partition=__consumer_offsets-23, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,249] INFO [Log partition=__consumer_offsets-23, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,254] INFO [Log partition=__consumer_offsets-23, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 35 ms (kafka.log.Log)
[2023-07-18 12:05:43,269] INFO [Log partition=__consumer_offsets-25, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,270] INFO [Log partition=__consumer_offsets-25, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,299] INFO [Log partition=__consumer_offsets-25, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,306] INFO [Log partition=__consumer_offsets-25, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 43 ms (kafka.log.Log)
[2023-07-18 12:05:43,320] INFO [Log partition=__consumer_offsets-27, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,321] INFO [Log partition=__consumer_offsets-27, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,347] INFO [Log partition=__consumer_offsets-27, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,352] INFO [Log partition=__consumer_offsets-27, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 39 ms (kafka.log.Log)
[2023-07-18 12:05:43,367] INFO [Log partition=__consumer_offsets-29, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,368] INFO [Log partition=__consumer_offsets-29, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,396] INFO [Log partition=__consumer_offsets-29, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,401] INFO [Log partition=__consumer_offsets-29, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 43 ms (kafka.log.Log)
[2023-07-18 12:05:43,417] INFO [Log partition=__consumer_offsets-3, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,418] INFO [Log partition=__consumer_offsets-3, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,445] INFO [Log partition=__consumer_offsets-3, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,451] INFO [Log partition=__consumer_offsets-3, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 44 ms (kafka.log.Log)
[2023-07-18 12:05:43,467] INFO [Log partition=__consumer_offsets-31, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,467] INFO [Log partition=__consumer_offsets-31, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,496] INFO [Log partition=__consumer_offsets-31, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,500] INFO [Log partition=__consumer_offsets-31, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 41 ms (kafka.log.Log)
[2023-07-18 12:05:43,517] INFO [Log partition=__consumer_offsets-33, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,518] INFO [Log partition=__consumer_offsets-33, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,544] INFO [Log partition=__consumer_offsets-33, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,548] INFO [Log partition=__consumer_offsets-33, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 40 ms (kafka.log.Log)
[2023-07-18 12:05:43,565] INFO [Log partition=__consumer_offsets-35, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,566] INFO [Log partition=__consumer_offsets-35, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,597] INFO [Log partition=__consumer_offsets-35, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,602] INFO [Log partition=__consumer_offsets-35, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 50 ms (kafka.log.Log)
[2023-07-18 12:05:43,616] INFO [Log partition=__consumer_offsets-37, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,616] INFO [Log partition=__consumer_offsets-37, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,645] INFO [Log partition=__consumer_offsets-37, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,650] INFO [Log partition=__consumer_offsets-37, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 40 ms (kafka.log.Log)
[2023-07-18 12:05:43,665] INFO [Log partition=__consumer_offsets-39, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,666] INFO [Log partition=__consumer_offsets-39, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,692] INFO [Log partition=__consumer_offsets-39, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,698] INFO [Log partition=__consumer_offsets-39, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 44 ms (kafka.log.Log)
[2023-07-18 12:05:43,708] INFO [Log partition=__consumer_offsets-41, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,709] INFO [Log partition=__consumer_offsets-41, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,730] INFO [Log partition=__consumer_offsets-41, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,733] INFO [Log partition=__consumer_offsets-41, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 32 ms (kafka.log.Log)
[2023-07-18 12:05:43,747] INFO [Log partition=__consumer_offsets-43, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,748] INFO [Log partition=__consumer_offsets-43, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,769] INFO [ProducerStateManager partition=__consumer_offsets-43] Writing producer snapshot at offset 35 (kafka.log.ProducerStateManager)
[2023-07-18 12:05:43,789] INFO [Log partition=__consumer_offsets-43, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 35 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,796] INFO [ProducerStateManager partition=__consumer_offsets-43] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\__consumer_offsets-43\00000000000000000035.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:05:43,799] INFO [Log partition=__consumer_offsets-43, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 35 in 63 ms (kafka.log.Log)
[2023-07-18 12:05:43,815] INFO [Log partition=__consumer_offsets-45, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,815] INFO [Log partition=__consumer_offsets-45, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,841] INFO [Log partition=__consumer_offsets-45, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,849] INFO [Log partition=__consumer_offsets-45, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 46 ms (kafka.log.Log)
[2023-07-18 12:05:43,865] INFO [Log partition=__consumer_offsets-47, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,865] INFO [Log partition=__consumer_offsets-47, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,896] INFO [Log partition=__consumer_offsets-47, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,901] INFO [Log partition=__consumer_offsets-47, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 48 ms (kafka.log.Log)
[2023-07-18 12:05:43,917] INFO [Log partition=__consumer_offsets-49, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,918] INFO [Log partition=__consumer_offsets-49, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,941] INFO [Log partition=__consumer_offsets-49, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,947] INFO [Log partition=__consumer_offsets-49, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 39 ms (kafka.log.Log)
[2023-07-18 12:05:43,957] INFO [Log partition=__consumer_offsets-5, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:43,958] INFO [Log partition=__consumer_offsets-5, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,983] INFO [Log partition=__consumer_offsets-5, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:43,990] INFO [Log partition=__consumer_offsets-5, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 40 ms (kafka.log.Log)
[2023-07-18 12:05:44,000] INFO [Log partition=__consumer_offsets-7, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:44,001] INFO [Log partition=__consumer_offsets-7, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:44,021] INFO [Log partition=__consumer_offsets-7, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:44,027] INFO [Log partition=__consumer_offsets-7, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 32 ms (kafka.log.Log)
[2023-07-18 12:05:44,037] INFO [Log partition=__consumer_offsets-9, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:44,039] INFO [Log partition=__consumer_offsets-9, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:44,062] INFO [Log partition=__consumer_offsets-9, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:44,067] INFO [Log partition=__consumer_offsets-9, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 38 ms (kafka.log.Log)
[2023-07-18 12:05:44,077] INFO Logs loading complete in 1701 ms. (kafka.log.LogManager)
[2023-07-18 12:05:44,107] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2023-07-18 12:05:44,110] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2023-07-18 12:05:44,737] INFO Awaiting socket connections on localhost:9092. (kafka.network.Acceptor)
[2023-07-18 12:05:44,819] INFO [SocketServer brokerId=1] Created data-plane acceptor and processors for endpoint : EndPoint(localhost,9092,ListenerName(PLAINTEXT),PLAINTEXT) (kafka.network.SocketServer)
[2023-07-18 12:05:44,821] INFO [SocketServer brokerId=1] Started 1 acceptor threads for data-plane (kafka.network.SocketServer)
[2023-07-18 12:05:44,870] INFO [ExpirationReaper-1-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:05:44,872] INFO [ExpirationReaper-1-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:05:44,873] INFO [ExpirationReaper-1-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:05:44,875] INFO [ExpirationReaper-1-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:05:44,903] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2023-07-18 12:05:45,017] INFO Creating /brokers/ids/1 (is it secure? false) (kafka.zk.KafkaZkClient)
[2023-07-18 12:05:45,045] INFO Stat of the created znode at /brokers/ids/1 is: 660,660,1689662145036,1689662145036,1,0,0,72083765522333698,188,0,660
 (kafka.zk.KafkaZkClient)
[2023-07-18 12:05:45,047] INFO Registered broker 1 at path /brokers/ids/1 with addresses: ArraySeq(EndPoint(localhost,9092,ListenerName(PLAINTEXT),PLAINTEXT)), czxid (broker epoch): 660 (kafka.zk.KafkaZkClient)
[2023-07-18 12:05:45,153] INFO [ExpirationReaper-1-topic]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:05:45,162] INFO [ExpirationReaper-1-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:05:45,164] INFO [ExpirationReaper-1-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:05:45,231] INFO [GroupCoordinator 1]: Starting up. (kafka.coordinator.group.GroupCoordinator)
[2023-07-18 12:05:45,233] INFO [GroupCoordinator 1]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
[2023-07-18 12:05:45,244] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 11 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:45,276] INFO [ProducerId Manager 1]: Acquired new producerId block (brokerId:1,blockStartProducerId:10000,blockEndProducerId:10999) by writing to Zk with path version 11 (kafka.coordinator.transaction.ProducerIdManager)
[2023-07-18 12:05:45,354] INFO [TransactionCoordinator id=1] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
[2023-07-18 12:05:45,359] INFO [Transaction Marker Channel Manager 1]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2023-07-18 12:05:45,359] INFO [TransactionCoordinator id=1] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2023-07-18 12:05:45,432] INFO [ExpirationReaper-1-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:05:45,481] INFO [/config/changes-event-process-thread]: Starting (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2023-07-18 12:05:45,557] INFO [SocketServer brokerId=1] Started data-plane processors for 1 acceptors (kafka.network.SocketServer)
[2023-07-18 12:05:45,575] INFO Kafka version: 2.5.0 (org.apache.kafka.common.utils.AppInfoParser)
[2023-07-18 12:05:45,597] INFO Kafka commitId: 66563e712b0b9f84 (org.apache.kafka.common.utils.AppInfoParser)
[2023-07-18 12:05:45,601] INFO Kafka startTimeMs: 1689662145561 (org.apache.kafka.common.utils.AppInfoParser)
[2023-07-18 12:05:45,605] INFO [KafkaServer id=1] started (kafka.server.KafkaServer)
[2023-07-18 12:05:45,814] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions HashSet(__consumer_offsets-21, __consumer_offsets-25, __consumer_offsets-31, __consumer_offsets-3, __consumer_offsets-37, __consumer_offsets-15, first_topic-0, __consumer_offsets-17, __consumer_offsets-13, __consumer_offsets-43, my_topic-1, __consumer_offsets-39, __consumer_offsets-29, __consumer_offsets-27, __consumer_offsets-7, __consumer_offsets-9, __consumer_offsets-35, my_other_topic-1, __consumer_offsets-41, __consumer_offsets-33, __consumer_offsets-23, __consumer_offsets-49, __consumer_offsets-47, my_topic-3, __consumer_offsets-19, __consumer_offsets-11, __consumer_offsets-45, __consumer_offsets-1, __consumer_offsets-5) (kafka.server.ReplicaFetcherManager)
[2023-07-18 12:05:45,836] INFO [Partition __consumer_offsets-3 broker=1] Log loaded for partition __consumer_offsets-3 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:45,843] INFO [Partition __consumer_offsets-3 broker=1] __consumer_offsets-3 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:45,880] INFO [Partition __consumer_offsets-37 broker=1] Log loaded for partition __consumer_offsets-37 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:45,881] INFO [Partition __consumer_offsets-37 broker=1] __consumer_offsets-37 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:45,895] INFO [Partition __consumer_offsets-7 broker=1] Log loaded for partition __consumer_offsets-7 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:45,896] INFO [Partition __consumer_offsets-7 broker=1] __consumer_offsets-7 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:45,907] INFO [Partition __consumer_offsets-41 broker=1] Log loaded for partition __consumer_offsets-41 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:45,908] INFO [Partition __consumer_offsets-41 broker=1] __consumer_offsets-41 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:45,922] INFO [Partition __consumer_offsets-29 broker=1] Log loaded for partition __consumer_offsets-29 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:45,922] INFO [Partition __consumer_offsets-29 broker=1] __consumer_offsets-29 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:45,936] INFO [Partition my_other_topic-1 broker=1] Log loaded for partition my_other_topic-1 with initial high watermark 26 (kafka.cluster.Partition)
[2023-07-18 12:05:45,937] INFO [Partition my_other_topic-1 broker=1] my_other_topic-1 starts at leader epoch 0 from offset 26 with high watermark 26. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:45,941] INFO [Partition my_topic-3 broker=1] Log loaded for partition my_topic-3 with initial high watermark 609 (kafka.cluster.Partition)
[2023-07-18 12:05:45,942] INFO [Partition my_topic-3 broker=1] my_topic-3 starts at leader epoch 0 from offset 609 with high watermark 609. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:45,948] INFO [Partition __consumer_offsets-33 broker=1] Log loaded for partition __consumer_offsets-33 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:45,948] INFO [Partition __consumer_offsets-33 broker=1] __consumer_offsets-33 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:45,957] INFO [Partition __consumer_offsets-19 broker=1] Log loaded for partition __consumer_offsets-19 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:45,958] INFO [Partition __consumer_offsets-19 broker=1] __consumer_offsets-19 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:45,969] INFO [Partition __consumer_offsets-23 broker=1] Log loaded for partition __consumer_offsets-23 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:45,970] INFO [Partition __consumer_offsets-23 broker=1] __consumer_offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:45,982] INFO [Partition __consumer_offsets-11 broker=1] Log loaded for partition __consumer_offsets-11 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:45,983] INFO [Partition __consumer_offsets-11 broker=1] __consumer_offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:45,995] INFO [Partition __consumer_offsets-45 broker=1] Log loaded for partition __consumer_offsets-45 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:45,996] INFO [Partition __consumer_offsets-45 broker=1] __consumer_offsets-45 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:46,009] INFO [Partition first_topic-0 broker=1] Log loaded for partition first_topic-0 with initial high watermark 64 (kafka.cluster.Partition)
[2023-07-18 12:05:46,009] INFO [Partition first_topic-0 broker=1] first_topic-0 starts at leader epoch 0 from offset 64 with high watermark 64. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:46,015] INFO [Partition __consumer_offsets-15 broker=1] Log loaded for partition __consumer_offsets-15 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:46,015] INFO [Partition __consumer_offsets-15 broker=1] __consumer_offsets-15 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:46,026] INFO [Partition __consumer_offsets-49 broker=1] Log loaded for partition __consumer_offsets-49 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:46,027] INFO [Partition __consumer_offsets-49 broker=1] __consumer_offsets-49 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:46,039] INFO [Partition __consumer_offsets-35 broker=1] Log loaded for partition __consumer_offsets-35 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:46,040] INFO [Partition __consumer_offsets-35 broker=1] __consumer_offsets-35 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:46,051] INFO [Partition __consumer_offsets-5 broker=1] Log loaded for partition __consumer_offsets-5 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:46,052] INFO [Partition __consumer_offsets-5 broker=1] __consumer_offsets-5 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:46,063] INFO [Partition __consumer_offsets-39 broker=1] Log loaded for partition __consumer_offsets-39 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:46,064] INFO [Partition __consumer_offsets-39 broker=1] __consumer_offsets-39 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:46,075] INFO [Partition __consumer_offsets-9 broker=1] Log loaded for partition __consumer_offsets-9 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:46,075] INFO [Partition __consumer_offsets-9 broker=1] __consumer_offsets-9 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:46,086] INFO [Partition __consumer_offsets-27 broker=1] Log loaded for partition __consumer_offsets-27 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:46,086] INFO [Partition __consumer_offsets-27 broker=1] __consumer_offsets-27 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:46,098] INFO [Partition my_topic-1 broker=1] Log loaded for partition my_topic-1 with initial high watermark 691 (kafka.cluster.Partition)
[2023-07-18 12:05:46,098] INFO [Partition my_topic-1 broker=1] my_topic-1 starts at leader epoch 0 from offset 691 with high watermark 691. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:46,102] INFO [Partition __consumer_offsets-31 broker=1] Log loaded for partition __consumer_offsets-31 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:46,103] INFO [Partition __consumer_offsets-31 broker=1] __consumer_offsets-31 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:46,114] INFO [Partition __consumer_offsets-1 broker=1] Log loaded for partition __consumer_offsets-1 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:46,115] INFO [Partition __consumer_offsets-1 broker=1] __consumer_offsets-1 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:46,126] INFO [Partition __consumer_offsets-21 broker=1] Log loaded for partition __consumer_offsets-21 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:46,127] INFO [Partition __consumer_offsets-21 broker=1] __consumer_offsets-21 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:46,137] INFO [Partition __consumer_offsets-25 broker=1] Log loaded for partition __consumer_offsets-25 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:46,137] INFO [Partition __consumer_offsets-25 broker=1] __consumer_offsets-25 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:46,149] INFO [Partition __consumer_offsets-43 broker=1] Log loaded for partition __consumer_offsets-43 with initial high watermark 35 (kafka.cluster.Partition)
[2023-07-18 12:05:46,150] INFO [Partition __consumer_offsets-43 broker=1] __consumer_offsets-43 starts at leader epoch 0 from offset 35 with high watermark 35. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:46,153] INFO [Partition __consumer_offsets-13 broker=1] Log loaded for partition __consumer_offsets-13 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:46,154] INFO [Partition __consumer_offsets-13 broker=1] __consumer_offsets-13 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:46,165] INFO [Partition __consumer_offsets-47 broker=1] Log loaded for partition __consumer_offsets-47 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:46,166] INFO [Partition __consumer_offsets-47 broker=1] __consumer_offsets-47 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:46,180] INFO [Partition __consumer_offsets-17 broker=1] Log loaded for partition __consumer_offsets-17 with initial high watermark 0 (kafka.cluster.Partition)
[2023-07-18 12:05:46,180] INFO [Partition __consumer_offsets-17 broker=1] __consumer_offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-07-18 12:05:46,215] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-3 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,218] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-37 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,219] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-7 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,219] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-41 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,219] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-29 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,220] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-33 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,220] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-19 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,220] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-23 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,221] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-11 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,221] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-45 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,221] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-15 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,222] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-49 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,223] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-35 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,224] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-5 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,225] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-39 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,226] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-9 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,227] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-27 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,227] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-31 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,227] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-1 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,228] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-21 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,228] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-25 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,228] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-43 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,229] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-13 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,229] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-47 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,229] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-3 in 10 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,230] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-17 (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,231] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-37 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,232] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-7 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,233] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-41 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,234] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-29 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,234] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-33 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,235] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-19 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,236] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-23 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,237] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-11 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,237] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-45 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,238] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-15 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,239] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-49 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,239] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-35 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,242] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-5 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,243] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-39 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,243] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-9 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,244] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-27 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,245] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-31 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,245] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-1 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,246] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-21 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,247] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-25 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,299] INFO Static member MemberMetadata(memberId=consumer-g2-1-3b93bfc1-a653-4ea7-b736-689135cda052, groupInstanceId=Some(null), clientId=consumer-g2-1, clientHost=/127.0.0.1, sessionTimeoutMs=10000, rebalanceTimeoutMs=300000, supportedProtocols=List(range), ).groupInstanceId of group g2 loaded with member id consumer-g2-1-3b93bfc1-a653-4ea7-b736-689135cda052 at generation 1. (kafka.coordinator.group.GroupMetadata$)
[2023-07-18 12:05:46,330] INFO [GroupCoordinator 1]: Loading group metadata for g2 with generation 2 (kafka.coordinator.group.GroupCoordinator)
[2023-07-18 12:05:46,331] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-43 in 84 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,333] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-13 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,334] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-47 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:46,335] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-17 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-07-18 12:05:58,124] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2023-07-18 12:05:58,674] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
[2023-07-18 12:05:58,759] INFO starting (kafka.server.KafkaServer)
[2023-07-18 12:05:58,761] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2023-07-18 12:05:58,815] INFO [ZooKeeperClient Kafka server] Initializing a new session to localhost:2181. (kafka.zookeeper.ZooKeeperClient)
[2023-07-18 12:05:58,834] INFO Client environment:zookeeper.version=3.5.7-f0fdd52973d373ffd9c86b81d99842dc2c7f660e, built on 02/10/2020 11:30 GMT (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:58,835] INFO Client environment:host.name=DESKTOP-KOBU9QU (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:58,835] INFO Client environment:java.version=11.0.18 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:58,835] INFO Client environment:java.vendor=Oracle Corporation (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:58,836] INFO Client environment:java.home=C:\PracticeJava\jdk-11.0.18 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:58,836] INFO Client environment:java.class.path=C:\PracticeJava\Kafka\MultiNode\Node1\libs\activation-1.1.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\aopalliance-repackaged-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\argparse4j-0.7.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\audience-annotations-0.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\commons-cli-1.4.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\commons-lang3-3.8.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-api-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-basic-auth-extension-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-file-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-json-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-mirror-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-mirror-client-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-runtime-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-transforms-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\hk2-api-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\hk2-locator-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\hk2-utils-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-annotations-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-core-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-databind-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-dataformat-csv-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-datatype-jdk8-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-jaxrs-base-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-jaxrs-json-provider-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-module-jaxb-annotations-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-module-paranamer-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-module-scala_2.13-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.activation-api-1.2.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.annotation-api-1.3.4.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.inject-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.ws.rs-api-2.1.5.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.xml.bind-api-2.3.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javassist-3.22.0-CR2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javassist-3.26.0-GA.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javax.servlet-api-3.1.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javax.ws.rs-api-2.1.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jaxb-api-2.3.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-client-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-common-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-container-servlet-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-container-servlet-core-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-hk2-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-media-jaxb-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-server-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-client-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-continuation-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-http-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-io-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-security-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-server-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-servlet-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-servlets-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-util-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jopt-simple-5.0.4.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-clients-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-log4j-appender-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-examples-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-scala_2.13-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-test-utils-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-tools-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-javadoc.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-javadoc.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-scaladoc.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-scaladoc.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-sources.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-sources.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test-sources.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test-sources.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\log4j-1.2.17.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\lz4-java-1.7.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\maven-artifact-3.6.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\metrics-core-2.2.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-buffer-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-codec-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-common-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-handler-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-resolver-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-transport-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-transport-native-epoll-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-transport-native-unix-common-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\osgi-resource-locator-1.0.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\paranamer-2.8.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\plexus-utils-3.2.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\reflections-0.9.12.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\rocksdbjni-5.18.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-collection-compat_2.13-2.1.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-java8-compat_2.13-0.9.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-library-2.13.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-logging_2.13-3.9.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-reflect-2.13.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\slf4j-api-1.7.30.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\slf4j-log4j12-1.7.30.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\snappy-java-1.1.7.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\validation-api-2.0.1.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\zookeeper-3.5.7.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\zookeeper-jute-3.5.7.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\zstd-jni-1.4.4-7.jar (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:58,841] INFO Client environment:java.library.path=C:\PracticeJava\jdk-11.0.18\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%JAVA_HOME%\bin;C:\Program Files\Git\cmd;C:\Program Files\apache-maven-3.6.1\bin;C:\Program Files\TortoiseGit\bin;%MAVEN_HOME\bin;C:\Program Files\Notepad++;C:\Program Files\MongoDB\Server\4.2\bin;C:\Program Files (x86)\Groovy\bin;C:\Program Files\Perforce\;C:\Program Files (x86)\gradle-7.2\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Windows\SysWOW64;C:\Program Files\dotnet\;C:\Program Files\Notepad++;C:\Users\sagar\AppData\Local\Programs\Microsoft VS Code Insiders\bin;C:\PracticeJava\jdk-11.0.18\bin;C:\Users\sagar\AppData\Local\GitHubDesktop\bin;C:\Users\sagar\AppData\Local\Microsoft\WindowsApps;C:\Windows\SysWOW64;;. (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:58,842] INFO Client environment:java.io.tmpdir=C:\Users\sagar\AppData\Local\Temp\ (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:58,842] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:58,842] INFO Client environment:os.name=Windows 11 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:58,842] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:58,843] INFO Client environment:os.version=10.0 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:58,843] INFO Client environment:user.name=sagar (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:58,843] INFO Client environment:user.home=C:\Users\sagar (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:58,844] INFO Client environment:user.dir=C:\PracticeJava\Kafka\MultiNode\Node1\bin\windows (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:58,844] INFO Client environment:os.memory.free=1015MB (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:58,845] INFO Client environment:os.memory.max=1024MB (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:58,845] INFO Client environment:os.memory.total=1024MB (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:58,851] INFO Initiating client connection, connectString=localhost:2181 sessionTimeout=18000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@22295ec4 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:05:58,877] INFO jute.maxbuffer value is 4194304 Bytes (org.apache.zookeeper.ClientCnxnSocket)
[2023-07-18 12:05:58,888] INFO zookeeper.request.timeout value is 0. feature enabled= (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:05:58,894] INFO [ZooKeeperClient Kafka server] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2023-07-18 12:05:58,908] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:05:58,917] INFO Socket connection established, initiating session, client: /127.0.0.1:19385, server: localhost/127.0.0.1:2181 (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:05:58,935] INFO Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x10017cd86080003, negotiated timeout = 18000 (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:05:58,942] INFO [ZooKeeperClient Kafka server] Connected. (kafka.zookeeper.ZooKeeperClient)
[2023-07-18 12:05:59,302] INFO Cluster ID = dqc8hGyvQ4yospB768Rz2w (kafka.server.KafkaServer)
[2023-07-18 12:05:59,410] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 2
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.5-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = PLAINTEXT://localhost:9093
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = C:/PracticeJava/Kafka/MultiNode/kafka-logs-2
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.5-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 18000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2023-07-18 12:05:59,427] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 2
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.5-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = PLAINTEXT://localhost:9093
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = C:/PracticeJava/Kafka/MultiNode/kafka-logs-2
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.5-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 18000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2023-07-18 12:05:59,488] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2023-07-18 12:05:59,488] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2023-07-18 12:05:59,490] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2023-07-18 12:05:59,569] INFO Loading logs. (kafka.log.LogManager)
[2023-07-18 12:05:59,674] INFO [Log partition=my_other_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:59,676] INFO [Log partition=my_other_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:59,753] INFO [ProducerStateManager partition=my_other_topic-0] Writing producer snapshot at offset 29 (kafka.log.ProducerStateManager)
[2023-07-18 12:05:59,800] INFO [Log partition=my_other_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 29 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:59,806] INFO [ProducerStateManager partition=my_other_topic-0] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\my_other_topic-0\00000000000000000029.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:05:59,812] INFO [Log partition=my_other_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 29 in 191 ms (kafka.log.Log)
[2023-07-18 12:05:59,866] INFO [Log partition=my_other_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:59,867] INFO [Log partition=my_other_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:59,882] INFO [ProducerStateManager partition=my_other_topic-2] Writing producer snapshot at offset 45 (kafka.log.ProducerStateManager)
[2023-07-18 12:05:59,910] INFO [Log partition=my_other_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 45 with message format version 2 (kafka.log.Log)
[2023-07-18 12:05:59,922] INFO [ProducerStateManager partition=my_other_topic-2] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\my_other_topic-2\00000000000000000045.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:05:59,926] INFO [Log partition=my_other_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 45 in 80 ms (kafka.log.Log)
[2023-07-18 12:05:59,954] INFO [Log partition=my_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:05:59,955] INFO [Log partition=my_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,044] INFO [ProducerStateManager partition=my_topic-0] Writing producer snapshot at offset 711 (kafka.log.ProducerStateManager)
[2023-07-18 12:06:00,065] INFO [Log partition=my_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 711 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,069] INFO [ProducerStateManager partition=my_topic-0] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\my_topic-0\00000000000000000711.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:06:00,074] INFO [Log partition=my_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 711 in 140 ms (kafka.log.Log)
[2023-07-18 12:06:00,104] INFO [Log partition=my_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:00,104] INFO [Log partition=my_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,157] INFO [ProducerStateManager partition=my_topic-2] Writing producer snapshot at offset 657 (kafka.log.ProducerStateManager)
[2023-07-18 12:06:00,174] INFO [Log partition=my_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 657 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,178] INFO [ProducerStateManager partition=my_topic-2] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\my_topic-2\00000000000000000657.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:06:00,180] INFO [Log partition=my_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 657 in 96 ms (kafka.log.Log)
[2023-07-18 12:06:00,206] INFO [Log partition=__consumer_offsets-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:00,206] INFO [Log partition=__consumer_offsets-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,222] INFO [ProducerStateManager partition=__consumer_offsets-0] Writing producer snapshot at offset 23 (kafka.log.ProducerStateManager)
[2023-07-18 12:06:00,242] INFO [Log partition=__consumer_offsets-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 23 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,248] INFO [ProducerStateManager partition=__consumer_offsets-0] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-0\00000000000000000023.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:06:00,251] INFO [Log partition=__consumer_offsets-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 23 in 64 ms (kafka.log.Log)
[2023-07-18 12:06:00,282] INFO [Log partition=__consumer_offsets-10, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:00,283] INFO [Log partition=__consumer_offsets-10, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,303] INFO [Log partition=__consumer_offsets-10, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,310] INFO [Log partition=__consumer_offsets-10, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 51 ms (kafka.log.Log)
[2023-07-18 12:06:00,327] INFO [Log partition=__consumer_offsets-12, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:00,328] INFO [Log partition=__consumer_offsets-12, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,356] INFO [Log partition=__consumer_offsets-12, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,362] INFO [Log partition=__consumer_offsets-12, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 43 ms (kafka.log.Log)
[2023-07-18 12:06:00,382] INFO [Log partition=__consumer_offsets-14, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:00,383] INFO [Log partition=__consumer_offsets-14, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,407] INFO [Log partition=__consumer_offsets-14, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,411] INFO [Log partition=__consumer_offsets-14, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 38 ms (kafka.log.Log)
[2023-07-18 12:06:00,426] INFO [Log partition=__consumer_offsets-16, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:00,426] INFO [Log partition=__consumer_offsets-16, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,455] INFO [Log partition=__consumer_offsets-16, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,460] INFO [Log partition=__consumer_offsets-16, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 44 ms (kafka.log.Log)
[2023-07-18 12:06:00,473] INFO [Log partition=__consumer_offsets-18, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:00,474] INFO [Log partition=__consumer_offsets-18, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,497] INFO [Log partition=__consumer_offsets-18, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,501] INFO [Log partition=__consumer_offsets-18, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 36 ms (kafka.log.Log)
[2023-07-18 12:06:00,514] INFO [Log partition=__consumer_offsets-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:00,514] INFO [Log partition=__consumer_offsets-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,539] INFO [Log partition=__consumer_offsets-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,548] INFO [Log partition=__consumer_offsets-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 42 ms (kafka.log.Log)
[2023-07-18 12:06:00,567] INFO [Log partition=__consumer_offsets-20, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:00,568] INFO [Log partition=__consumer_offsets-20, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,599] INFO [Log partition=__consumer_offsets-20, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,607] INFO [Log partition=__consumer_offsets-20, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 49 ms (kafka.log.Log)
[2023-07-18 12:06:00,620] INFO [Log partition=__consumer_offsets-22, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:00,621] INFO [Log partition=__consumer_offsets-22, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,653] INFO [Log partition=__consumer_offsets-22, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,659] INFO [Log partition=__consumer_offsets-22, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 48 ms (kafka.log.Log)
[2023-07-18 12:06:00,677] INFO [Log partition=__consumer_offsets-24, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:00,678] INFO [Log partition=__consumer_offsets-24, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,699] INFO [Log partition=__consumer_offsets-24, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,704] INFO [Log partition=__consumer_offsets-24, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 39 ms (kafka.log.Log)
[2023-07-18 12:06:00,720] INFO [Log partition=__consumer_offsets-26, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:00,721] INFO [Log partition=__consumer_offsets-26, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,742] INFO [Log partition=__consumer_offsets-26, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,747] INFO [Log partition=__consumer_offsets-26, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 37 ms (kafka.log.Log)
[2023-07-18 12:06:00,763] INFO [Log partition=__consumer_offsets-28, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:00,764] INFO [Log partition=__consumer_offsets-28, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,789] INFO [Log partition=__consumer_offsets-28, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,795] INFO [Log partition=__consumer_offsets-28, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 38 ms (kafka.log.Log)
[2023-07-18 12:06:00,813] INFO [Log partition=__consumer_offsets-30, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:00,814] INFO [Log partition=__consumer_offsets-30, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,837] INFO [Log partition=__consumer_offsets-30, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,843] INFO [Log partition=__consumer_offsets-30, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 43 ms (kafka.log.Log)
[2023-07-18 12:06:00,857] INFO [Log partition=__consumer_offsets-32, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:00,857] INFO [Log partition=__consumer_offsets-32, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,880] INFO [Log partition=__consumer_offsets-32, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,888] INFO [Log partition=__consumer_offsets-32, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 42 ms (kafka.log.Log)
[2023-07-18 12:06:00,898] INFO [Log partition=__consumer_offsets-34, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:00,899] INFO [Log partition=__consumer_offsets-34, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,921] INFO [Log partition=__consumer_offsets-34, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,926] INFO [Log partition=__consumer_offsets-34, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 34 ms (kafka.log.Log)
[2023-07-18 12:06:00,938] INFO [Log partition=__consumer_offsets-36, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:00,940] INFO [Log partition=__consumer_offsets-36, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,962] INFO [Log partition=__consumer_offsets-36, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:00,966] INFO [Log partition=__consumer_offsets-36, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 38 ms (kafka.log.Log)
[2023-07-18 12:06:00,978] INFO [Log partition=__consumer_offsets-38, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:00,979] INFO [Log partition=__consumer_offsets-38, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:01,000] INFO [Log partition=__consumer_offsets-38, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:01,006] INFO [Log partition=__consumer_offsets-38, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 34 ms (kafka.log.Log)
[2023-07-18 12:06:01,019] INFO [Log partition=__consumer_offsets-4, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:01,020] INFO [Log partition=__consumer_offsets-4, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:01,043] INFO [Log partition=__consumer_offsets-4, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:01,047] INFO [Log partition=__consumer_offsets-4, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 36 ms (kafka.log.Log)
[2023-07-18 12:06:01,062] INFO [Log partition=__consumer_offsets-40, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:01,063] INFO [Log partition=__consumer_offsets-40, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:01,082] INFO [Log partition=__consumer_offsets-40, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:01,088] INFO [Log partition=__consumer_offsets-40, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 35 ms (kafka.log.Log)
[2023-07-18 12:06:01,097] INFO [Log partition=__consumer_offsets-42, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:01,098] INFO [Log partition=__consumer_offsets-42, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:01,125] INFO [Log partition=__consumer_offsets-42, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:01,129] INFO [Log partition=__consumer_offsets-42, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 38 ms (kafka.log.Log)
[2023-07-18 12:06:01,142] INFO [Log partition=__consumer_offsets-44, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:01,142] INFO [Log partition=__consumer_offsets-44, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:01,163] INFO [Log partition=__consumer_offsets-44, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:01,167] INFO [Log partition=__consumer_offsets-44, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 36 ms (kafka.log.Log)
[2023-07-18 12:06:01,179] INFO [Log partition=__consumer_offsets-46, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:01,180] INFO [Log partition=__consumer_offsets-46, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:01,203] INFO [Log partition=__consumer_offsets-46, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:01,211] INFO [Log partition=__consumer_offsets-46, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 38 ms (kafka.log.Log)
[2023-07-18 12:06:01,229] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Found file C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.index.swap from interrupted swap operation. (kafka.log.Log)
[2023-07-18 12:06:01,230] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Deleting index files with suffix  for baseFile C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.index (kafka.log.Log)
[2023-07-18 12:06:01,234] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Found file C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.log.swap from interrupted swap operation. (kafka.log.Log)
[2023-07-18 12:06:01,235] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Deleting index files with suffix  for baseFile C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.log (kafka.log.Log)
[2023-07-18 12:06:01,241] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Deleting index files with suffix .swap for baseFile C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.log (kafka.log.Log)
[2023-07-18 12:06:01,250] ERROR [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Could not find offset index file corresponding to log file C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.log, recovering segment and rebuilding index files... (kafka.log.Log)
[2023-07-18 12:06:01,251] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:01,322] INFO [ProducerStateManager partition=__consumer_offsets-48] Writing producer snapshot at offset 3867 (kafka.log.ProducerStateManager)
[2023-07-18 12:06:01,336] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 3867 (kafka.log.Log)
[2023-07-18 12:06:01,336] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 3867 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:01,340] INFO [ProducerStateManager partition=__consumer_offsets-48] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000003867.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:06:01,348] INFO [ProducerStateManager partition=__consumer_offsets-48] Writing producer snapshot at offset 3882 (kafka.log.ProducerStateManager)
[2023-07-18 12:06:01,362] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 3882 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:01,369] INFO [ProducerStateManager partition=__consumer_offsets-48] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000003882.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:06:01,372] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 2 segments, log start offset 0 and log end offset 3882 in 158 ms (kafka.log.Log)
[2023-07-18 12:06:01,383] INFO [Log partition=__consumer_offsets-6, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:01,383] INFO [Log partition=__consumer_offsets-6, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:01,404] INFO [Log partition=__consumer_offsets-6, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:01,407] INFO [Log partition=__consumer_offsets-6, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 33 ms (kafka.log.Log)
[2023-07-18 12:06:01,420] INFO [Log partition=__consumer_offsets-8, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:01,421] INFO [Log partition=__consumer_offsets-8, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:01,446] INFO [Log partition=__consumer_offsets-8, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:01,451] INFO [Log partition=__consumer_offsets-8, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 41 ms (kafka.log.Log)
[2023-07-18 12:06:01,461] INFO Logs loading complete in 1892 ms. (kafka.log.LogManager)
[2023-07-18 12:06:01,485] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2023-07-18 12:06:01,488] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2023-07-18 12:06:01,986] ERROR Failed to clean up log for __consumer_offsets-48 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 due to IOException (kafka.server.LogDirFailureChannel)
java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.swap: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.AbstractIndex.renameTo(AbstractIndex.scala:207)
	at kafka.log.LogSegment.changeFileSuffixes(LogSegment.scala:497)
	at kafka.log.Log.$anonfun$replaceSegments$4(Log.scala:2269)
	at kafka.log.Log.$anonfun$replaceSegments$4$adapted(Log.scala:2269)
	at scala.collection.immutable.List.foreach(List.scala:305)
	at kafka.log.Log.replaceSegments(Log.scala:2269)
	at kafka.log.Cleaner.cleanSegments(LogCleaner.scala:594)
	at kafka.log.Cleaner.$anonfun$doClean$6(LogCleaner.scala:519)
	at kafka.log.Cleaner.doClean(LogCleaner.scala:518)
	at kafka.log.Cleaner.clean(LogCleaner.scala:492)
	at kafka.log.LogCleaner$CleanerThread.cleanLog(LogCleaner.scala:361)
	at kafka.log.LogCleaner$CleanerThread.cleanFilthiestLog(LogCleaner.scala:334)
	at kafka.log.LogCleaner$CleanerThread.tryCleanFilthiestLog(LogCleaner.scala:314)
	at kafka.log.LogCleaner$CleanerThread.doWork(LogCleaner.scala:303)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
	Suppressed: java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.swap: The process cannot access the file because it is being used by another process.

		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 15 more
[2023-07-18 12:06:02,085] ERROR Failed to clean up log for __consumer_offsets-48 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 due to IOException (kafka.server.LogDirFailureChannel)
java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:274)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1181)
	at kafka.log.Log$.deleteFileIfExists(Log.scala:2546)
	at kafka.log.LogSegment$.deleteIfExists(LogSegment.scala:669)
	at kafka.log.LogCleaner$.createNewCleanedSegment(LogCleaner.scala:435)
	at kafka.log.Cleaner.cleanSegments(LogCleaner.scala:547)
	at kafka.log.Cleaner.$anonfun$doClean$6(LogCleaner.scala:519)
	at kafka.log.Cleaner.doClean(LogCleaner.scala:518)
	at kafka.log.Cleaner.clean(LogCleaner.scala:492)
	at kafka.log.LogCleaner$CleanerThread.cleanLog(LogCleaner.scala:361)
	at kafka.log.LogCleaner$CleanerThread.cleanFilthiestLog(LogCleaner.scala:334)
	at kafka.log.LogCleaner$CleanerThread.tryCleanFilthiestLog(LogCleaner.scala:314)
	at kafka.log.LogCleaner$CleanerThread.doWork(LogCleaner.scala:303)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-18 12:06:02,222] ERROR Failed to clean up log for __consumer_offsets-48 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 due to IOException (kafka.server.LogDirFailureChannel)
java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:274)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1181)
	at kafka.log.Log$.deleteFileIfExists(Log.scala:2546)
	at kafka.log.LogSegment$.deleteIfExists(LogSegment.scala:669)
	at kafka.log.LogCleaner$.createNewCleanedSegment(LogCleaner.scala:435)
	at kafka.log.Cleaner.cleanSegments(LogCleaner.scala:547)
	at kafka.log.Cleaner.$anonfun$doClean$6(LogCleaner.scala:519)
	at kafka.log.Cleaner.doClean(LogCleaner.scala:518)
	at kafka.log.Cleaner.clean(LogCleaner.scala:492)
	at kafka.log.LogCleaner$CleanerThread.cleanLog(LogCleaner.scala:361)
	at kafka.log.LogCleaner$CleanerThread.cleanFilthiestLog(LogCleaner.scala:334)
	at kafka.log.LogCleaner$CleanerThread.tryCleanFilthiestLog(LogCleaner.scala:314)
	at kafka.log.LogCleaner$CleanerThread.doWork(LogCleaner.scala:303)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-18 12:06:02,309] ERROR Failed to clean up log for __consumer_offsets-48 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 due to IOException (kafka.server.LogDirFailureChannel)
java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:274)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1181)
	at kafka.log.Log$.deleteFileIfExists(Log.scala:2546)
	at kafka.log.LogSegment$.deleteIfExists(LogSegment.scala:669)
	at kafka.log.LogCleaner$.createNewCleanedSegment(LogCleaner.scala:435)
	at kafka.log.Cleaner.cleanSegments(LogCleaner.scala:547)
	at kafka.log.Cleaner.$anonfun$doClean$6(LogCleaner.scala:519)
	at kafka.log.Cleaner.doClean(LogCleaner.scala:518)
	at kafka.log.Cleaner.clean(LogCleaner.scala:492)
	at kafka.log.LogCleaner$CleanerThread.cleanLog(LogCleaner.scala:361)
	at kafka.log.LogCleaner$CleanerThread.cleanFilthiestLog(LogCleaner.scala:334)
	at kafka.log.LogCleaner$CleanerThread.tryCleanFilthiestLog(LogCleaner.scala:314)
	at kafka.log.LogCleaner$CleanerThread.doWork(LogCleaner.scala:303)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-18 12:06:02,399] INFO Awaiting socket connections on localhost:9093. (kafka.network.Acceptor)
[2023-07-18 12:06:02,403] ERROR Failed to clean up log for __consumer_offsets-48 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 due to IOException (kafka.server.LogDirFailureChannel)
java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:274)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1181)
	at kafka.log.Log$.deleteFileIfExists(Log.scala:2546)
	at kafka.log.LogSegment$.deleteIfExists(LogSegment.scala:669)
	at kafka.log.LogCleaner$.createNewCleanedSegment(LogCleaner.scala:435)
	at kafka.log.Cleaner.cleanSegments(LogCleaner.scala:547)
	at kafka.log.Cleaner.$anonfun$doClean$6(LogCleaner.scala:519)
	at kafka.log.Cleaner.doClean(LogCleaner.scala:518)
	at kafka.log.Cleaner.clean(LogCleaner.scala:492)
	at kafka.log.LogCleaner$CleanerThread.cleanLog(LogCleaner.scala:361)
	at kafka.log.LogCleaner$CleanerThread.cleanFilthiestLog(LogCleaner.scala:334)
	at kafka.log.LogCleaner$CleanerThread.tryCleanFilthiestLog(LogCleaner.scala:314)
	at kafka.log.LogCleaner$CleanerThread.doWork(LogCleaner.scala:303)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-18 12:06:02,493] ERROR Failed to clean up log for __consumer_offsets-48 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 due to IOException (kafka.server.LogDirFailureChannel)
java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:274)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1181)
	at kafka.log.Log$.deleteFileIfExists(Log.scala:2546)
	at kafka.log.LogSegment$.deleteIfExists(LogSegment.scala:669)
	at kafka.log.LogCleaner$.createNewCleanedSegment(LogCleaner.scala:435)
	at kafka.log.Cleaner.cleanSegments(LogCleaner.scala:547)
	at kafka.log.Cleaner.$anonfun$doClean$6(LogCleaner.scala:519)
	at kafka.log.Cleaner.doClean(LogCleaner.scala:518)
	at kafka.log.Cleaner.clean(LogCleaner.scala:492)
	at kafka.log.LogCleaner$CleanerThread.cleanLog(LogCleaner.scala:361)
	at kafka.log.LogCleaner$CleanerThread.cleanFilthiestLog(LogCleaner.scala:334)
	at kafka.log.LogCleaner$CleanerThread.tryCleanFilthiestLog(LogCleaner.scala:314)
	at kafka.log.LogCleaner$CleanerThread.doWork(LogCleaner.scala:303)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-18 12:06:02,574] ERROR Failed to clean up log for __consumer_offsets-48 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 due to IOException (kafka.server.LogDirFailureChannel)
java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:274)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1181)
	at kafka.log.Log$.deleteFileIfExists(Log.scala:2546)
	at kafka.log.LogSegment$.deleteIfExists(LogSegment.scala:669)
	at kafka.log.LogCleaner$.createNewCleanedSegment(LogCleaner.scala:435)
	at kafka.log.Cleaner.cleanSegments(LogCleaner.scala:547)
	at kafka.log.Cleaner.$anonfun$doClean$6(LogCleaner.scala:519)
	at kafka.log.Cleaner.doClean(LogCleaner.scala:518)
	at kafka.log.Cleaner.clean(LogCleaner.scala:492)
	at kafka.log.LogCleaner$CleanerThread.cleanLog(LogCleaner.scala:361)
	at kafka.log.LogCleaner$CleanerThread.cleanFilthiestLog(LogCleaner.scala:334)
	at kafka.log.LogCleaner$CleanerThread.tryCleanFilthiestLog(LogCleaner.scala:314)
	at kafka.log.LogCleaner$CleanerThread.doWork(LogCleaner.scala:303)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-18 12:06:02,580] INFO [SocketServer brokerId=2] Created data-plane acceptor and processors for endpoint : EndPoint(localhost,9093,ListenerName(PLAINTEXT),PLAINTEXT) (kafka.network.SocketServer)
[2023-07-18 12:06:02,583] INFO [SocketServer brokerId=2] Started 1 acceptor threads for data-plane (kafka.network.SocketServer)
[2023-07-18 12:06:02,691] INFO [ExpirationReaper-2-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:06:02,692] INFO [ExpirationReaper-2-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:06:02,693] INFO [ExpirationReaper-2-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:06:02,699] INFO [ExpirationReaper-2-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:06:02,752] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2023-07-18 12:06:02,752] ERROR Failed to clean up log for __consumer_offsets-48 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 due to IOException (kafka.server.LogDirFailureChannel)
java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.swap: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.AbstractIndex.renameTo(AbstractIndex.scala:207)
	at kafka.log.LogSegment.changeFileSuffixes(LogSegment.scala:497)
	at kafka.log.Log.$anonfun$replaceSegments$4(Log.scala:2269)
	at kafka.log.Log.$anonfun$replaceSegments$4$adapted(Log.scala:2269)
	at scala.collection.immutable.List.foreach(List.scala:305)
	at kafka.log.Log.replaceSegments(Log.scala:2269)
	at kafka.log.Cleaner.cleanSegments(LogCleaner.scala:594)
	at kafka.log.Cleaner.$anonfun$doClean$6(LogCleaner.scala:519)
	at kafka.log.Cleaner.doClean(LogCleaner.scala:518)
	at kafka.log.Cleaner.clean(LogCleaner.scala:492)
	at kafka.log.LogCleaner$CleanerThread.cleanLog(LogCleaner.scala:361)
	at kafka.log.LogCleaner$CleanerThread.cleanFilthiestLog(LogCleaner.scala:334)
	at kafka.log.LogCleaner$CleanerThread.tryCleanFilthiestLog(LogCleaner.scala:314)
	at kafka.log.LogCleaner$CleanerThread.doWork(LogCleaner.scala:303)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
	Suppressed: java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.swap: The process cannot access the file because it is being used by another process.

		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 15 more
[2023-07-18 12:06:02,754] WARN [ReplicaManager broker=2] Stopping serving replicas in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 (kafka.server.ReplicaManager)
[2023-07-18 12:06:02,786] WARN [ReplicaManager broker=2] Broker 2 stopped fetcher for partitions  and stopped moving logs for partitions  because they are in the failed log directory C:\PracticeJava\Kafka\MultiNode\kafka-logs-2. (kafka.server.ReplicaManager)
[2023-07-18 12:06:02,794] WARN Stopping serving logs in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 (kafka.log.LogManager)
[2023-07-18 12:06:02,818] ERROR Shutdown broker because all log dirs in C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 have failed (kafka.log.LogManager)
[2023-07-18 12:06:03,344] WARN Exception causing close of session 0x10017cd86080003: An existing connection was forcibly closed by the remote host (org.apache.zookeeper.server.NIOServerCnxn)
[2023-07-18 12:06:14,134] INFO [Log partition=my_other_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Found deletable segments with base offsets [0] due to retention time 604800000ms breach (kafka.log.Log)
[2023-07-18 12:06:14,146] INFO [Log partition=my_other_topic-1, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-1] Rolled new log segment at offset 26 in 10 ms. (kafka.log.Log)
[2023-07-18 12:06:14,151] ERROR Error while deleting segments for my_other_topic-1 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1 (kafka.server.LogDirFailureChannel)
java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_other_topic-1\00000000000000000000.timeindex -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_other_topic-1\00000000000000000000.timeindex.deleted: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.AbstractIndex.renameTo(AbstractIndex.scala:207)
	at kafka.log.LogSegment.changeFileSuffixes(LogSegment.scala:497)
	at kafka.log.Log.$anonfun$deleteSegmentFiles$1(Log.scala:2208)
	at kafka.log.Log.$anonfun$deleteSegmentFiles$1$adapted(Log.scala:2208)
	at scala.collection.immutable.List.foreach(List.scala:305)
	at kafka.log.Log.deleteSegmentFiles(Log.scala:2208)
	at kafka.log.Log.removeAndDeleteSegments(Log.scala:2193)
	at kafka.log.Log.$anonfun$deleteSegments$2(Log.scala:1705)
	at kafka.log.Log.deleteSegments(Log.scala:2318)
	at kafka.log.Log.deleteRetentionMsBreachedSegments(Log.scala:1691)
	at kafka.log.Log.deleteOldSegments(Log.scala:1758)
	at kafka.log.LogManager.$anonfun$cleanupLogs$3(LogManager.scala:973)
	at kafka.log.LogManager.$anonfun$cleanupLogs$3$adapted(LogManager.scala:970)
	at scala.collection.immutable.List.foreach(List.scala:305)
	at kafka.log.LogManager.cleanupLogs(LogManager.scala:970)
	at kafka.log.LogManager.$anonfun$startup$2(LogManager.scala:393)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
	Suppressed: java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_other_topic-1\00000000000000000000.timeindex -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_other_topic-1\00000000000000000000.timeindex.deleted: The process cannot access the file because it is being used by another process.

		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 23 more
[2023-07-18 12:06:14,155] WARN [ReplicaManager broker=1] Stopping serving replicas in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1 (kafka.server.ReplicaManager)
[2023-07-18 12:06:14,157] ERROR Uncaught exception in scheduled task 'kafka-log-retention' (kafka.utils.KafkaScheduler)
org.apache.kafka.common.errors.KafkaStorageException: Error while deleting segments for my_other_topic-1 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1
Caused by: java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_other_topic-1\00000000000000000000.timeindex -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_other_topic-1\00000000000000000000.timeindex.deleted: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.AbstractIndex.renameTo(AbstractIndex.scala:207)
	at kafka.log.LogSegment.changeFileSuffixes(LogSegment.scala:497)
	at kafka.log.Log.$anonfun$deleteSegmentFiles$1(Log.scala:2208)
	at kafka.log.Log.$anonfun$deleteSegmentFiles$1$adapted(Log.scala:2208)
	at scala.collection.immutable.List.foreach(List.scala:305)
	at kafka.log.Log.deleteSegmentFiles(Log.scala:2208)
	at kafka.log.Log.removeAndDeleteSegments(Log.scala:2193)
	at kafka.log.Log.$anonfun$deleteSegments$2(Log.scala:1705)
	at kafka.log.Log.deleteSegments(Log.scala:2318)
	at kafka.log.Log.deleteRetentionMsBreachedSegments(Log.scala:1691)
	at kafka.log.Log.deleteOldSegments(Log.scala:1758)
	at kafka.log.LogManager.$anonfun$cleanupLogs$3(LogManager.scala:973)
	at kafka.log.LogManager.$anonfun$cleanupLogs$3$adapted(LogManager.scala:970)
	at scala.collection.immutable.List.foreach(List.scala:305)
	at kafka.log.LogManager.cleanupLogs(LogManager.scala:970)
	at kafka.log.LogManager.$anonfun$startup$2(LogManager.scala:393)
	at kafka.utils.KafkaScheduler.$anonfun$schedule$2(KafkaScheduler.scala:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
	Suppressed: java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_other_topic-1\00000000000000000000.timeindex -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-1\my_other_topic-1\00000000000000000000.timeindex.deleted: The process cannot access the file because it is being used by another process.

		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 23 more
[2023-07-18 12:06:14,158] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions HashSet(__consumer_offsets-21, __consumer_offsets-25, __consumer_offsets-31, __consumer_offsets-3, __consumer_offsets-37, __consumer_offsets-15, first_topic-0, __consumer_offsets-17, __consumer_offsets-13, __consumer_offsets-43, my_topic-1, __consumer_offsets-39, __consumer_offsets-29, __consumer_offsets-27, __consumer_offsets-7, __consumer_offsets-9, __consumer_offsets-35, my_other_topic-1, __consumer_offsets-41, __consumer_offsets-33, __consumer_offsets-23, __consumer_offsets-49, __consumer_offsets-47, my_topic-3, __consumer_offsets-19, __consumer_offsets-11, __consumer_offsets-45, __consumer_offsets-1, __consumer_offsets-5) (kafka.server.ReplicaFetcherManager)
[2023-07-18 12:06:14,163] INFO [ReplicaAlterLogDirsManager on broker 1] Removed fetcher for partitions HashSet(__consumer_offsets-21, __consumer_offsets-25, __consumer_offsets-31, __consumer_offsets-3, __consumer_offsets-37, __consumer_offsets-15, first_topic-0, __consumer_offsets-17, __consumer_offsets-13, __consumer_offsets-43, my_topic-1, __consumer_offsets-39, __consumer_offsets-29, __consumer_offsets-27, __consumer_offsets-7, __consumer_offsets-9, __consumer_offsets-35, my_other_topic-1, __consumer_offsets-41, __consumer_offsets-33, __consumer_offsets-23, __consumer_offsets-49, __consumer_offsets-47, my_topic-3, __consumer_offsets-19, __consumer_offsets-11, __consumer_offsets-45, __consumer_offsets-1, __consumer_offsets-5) (kafka.server.ReplicaAlterLogDirsManager)
[2023-07-18 12:06:14,190] WARN [ReplicaManager broker=1] Broker 1 stopped fetcher for partitions __consumer_offsets-21,__consumer_offsets-25,__consumer_offsets-31,__consumer_offsets-3,__consumer_offsets-37,__consumer_offsets-15,first_topic-0,__consumer_offsets-17,__consumer_offsets-13,__consumer_offsets-43,my_topic-1,__consumer_offsets-39,__consumer_offsets-29,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-35,my_other_topic-1,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,my_topic-3,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5 and stopped moving logs for partitions  because they are in the failed log directory C:\PracticeJava\Kafka\MultiNode\kafka-logs-1. (kafka.server.ReplicaManager)
[2023-07-18 12:06:14,191] WARN Stopping serving logs in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-1 (kafka.log.LogManager)
[2023-07-18 12:06:14,197] ERROR Shutdown broker because all log dirs in C:\PracticeJava\Kafka\MultiNode\kafka-logs-1 have failed (kafka.log.LogManager)
[2023-07-18 12:06:14,715] WARN Exception causing close of session 0x10017cd86080002: An existing connection was forcibly closed by the remote host (org.apache.zookeeper.server.NIOServerCnxn)
[2023-07-18 12:06:18,344] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2023-07-18 12:06:18,883] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
[2023-07-18 12:06:18,967] INFO starting (kafka.server.KafkaServer)
[2023-07-18 12:06:18,968] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2023-07-18 12:06:19,022] INFO [ZooKeeperClient Kafka server] Initializing a new session to localhost:2181. (kafka.zookeeper.ZooKeeperClient)
[2023-07-18 12:06:19,040] INFO Client environment:zookeeper.version=3.5.7-f0fdd52973d373ffd9c86b81d99842dc2c7f660e, built on 02/10/2020 11:30 GMT (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:06:19,041] INFO Client environment:host.name=DESKTOP-KOBU9QU (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:06:19,041] INFO Client environment:java.version=11.0.18 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:06:19,042] INFO Client environment:java.vendor=Oracle Corporation (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:06:19,042] INFO Client environment:java.home=C:\PracticeJava\jdk-11.0.18 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:06:19,043] INFO Client environment:java.class.path=C:\PracticeJava\Kafka\MultiNode\Node1\libs\activation-1.1.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\aopalliance-repackaged-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\argparse4j-0.7.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\audience-annotations-0.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\commons-cli-1.4.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\commons-lang3-3.8.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-api-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-basic-auth-extension-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-file-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-json-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-mirror-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-mirror-client-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-runtime-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\connect-transforms-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\hk2-api-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\hk2-locator-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\hk2-utils-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-annotations-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-core-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-databind-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-dataformat-csv-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-datatype-jdk8-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-jaxrs-base-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-jaxrs-json-provider-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-module-jaxb-annotations-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-module-paranamer-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jackson-module-scala_2.13-2.10.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.activation-api-1.2.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.annotation-api-1.3.4.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.inject-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.ws.rs-api-2.1.5.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jakarta.xml.bind-api-2.3.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javassist-3.22.0-CR2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javassist-3.26.0-GA.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javax.servlet-api-3.1.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\javax.ws.rs-api-2.1.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jaxb-api-2.3.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-client-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-common-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-container-servlet-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-container-servlet-core-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-hk2-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-media-jaxb-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jersey-server-2.28.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-client-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-continuation-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-http-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-io-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-security-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-server-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-servlet-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-servlets-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jetty-util-9.4.24.v20191120.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\jopt-simple-5.0.4.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-clients-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-log4j-appender-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-examples-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-scala_2.13-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-streams-test-utils-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka-tools-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-javadoc.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-javadoc.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-scaladoc.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-scaladoc.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-sources.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-sources.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test-sources.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test-sources.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0-test.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\kafka_2.13-2.5.0.jar.asc;C:\PracticeJava\Kafka\MultiNode\Node1\libs\log4j-1.2.17.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\lz4-java-1.7.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\maven-artifact-3.6.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\metrics-core-2.2.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-buffer-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-codec-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-common-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-handler-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-resolver-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-transport-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-transport-native-epoll-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\netty-transport-native-unix-common-4.1.45.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\osgi-resource-locator-1.0.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\paranamer-2.8.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\plexus-utils-3.2.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\reflections-0.9.12.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\rocksdbjni-5.18.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-collection-compat_2.13-2.1.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-java8-compat_2.13-0.9.0.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-library-2.13.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-logging_2.13-3.9.2.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\scala-reflect-2.13.1.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\slf4j-api-1.7.30.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\slf4j-log4j12-1.7.30.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\snappy-java-1.1.7.3.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\validation-api-2.0.1.Final.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\zookeeper-3.5.7.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\zookeeper-jute-3.5.7.jar;C:\PracticeJava\Kafka\MultiNode\Node1\libs\zstd-jni-1.4.4-7.jar (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:06:19,047] INFO Client environment:java.library.path=C:\PracticeJava\jdk-11.0.18\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%JAVA_HOME%\bin;C:\Program Files\Git\cmd;C:\Program Files\apache-maven-3.6.1\bin;C:\Program Files\TortoiseGit\bin;%MAVEN_HOME\bin;C:\Program Files\Notepad++;C:\Program Files\MongoDB\Server\4.2\bin;C:\Program Files (x86)\Groovy\bin;C:\Program Files\Perforce\;C:\Program Files (x86)\gradle-7.2\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Windows\SysWOW64;C:\Program Files\dotnet\;C:\Program Files\Notepad++;C:\Users\sagar\AppData\Local\Programs\Microsoft VS Code Insiders\bin;C:\PracticeJava\jdk-11.0.18\bin;C:\Users\sagar\AppData\Local\GitHubDesktop\bin;C:\Users\sagar\AppData\Local\Microsoft\WindowsApps;C:\Windows\SysWOW64;;. (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:06:19,048] INFO Client environment:java.io.tmpdir=C:\Users\sagar\AppData\Local\Temp\ (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:06:19,048] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:06:19,049] INFO Client environment:os.name=Windows 11 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:06:19,049] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:06:19,049] INFO Client environment:os.version=10.0 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:06:19,050] INFO Client environment:user.name=sagar (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:06:19,050] INFO Client environment:user.home=C:\Users\sagar (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:06:19,051] INFO Client environment:user.dir=C:\PracticeJava\Kafka\MultiNode\Node1\bin\windows (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:06:19,051] INFO Client environment:os.memory.free=1015MB (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:06:19,052] INFO Client environment:os.memory.max=1024MB (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:06:19,052] INFO Client environment:os.memory.total=1024MB (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:06:19,057] INFO Initiating client connection, connectString=localhost:2181 sessionTimeout=18000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@22295ec4 (org.apache.zookeeper.ZooKeeper)
[2023-07-18 12:06:19,085] INFO jute.maxbuffer value is 4194304 Bytes (org.apache.zookeeper.ClientCnxnSocket)
[2023-07-18 12:06:19,099] INFO zookeeper.request.timeout value is 0. feature enabled= (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:06:19,103] INFO [ZooKeeperClient Kafka server] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2023-07-18 12:06:19,121] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:06:19,129] INFO Socket connection established, initiating session, client: /127.0.0.1:19399, server: localhost/127.0.0.1:2181 (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:06:19,145] INFO Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x10017cd86080004, negotiated timeout = 18000 (org.apache.zookeeper.ClientCnxn)
[2023-07-18 12:06:19,151] INFO [ZooKeeperClient Kafka server] Connected. (kafka.zookeeper.ZooKeeperClient)
[2023-07-18 12:06:19,520] INFO Cluster ID = dqc8hGyvQ4yospB768Rz2w (kafka.server.KafkaServer)
[2023-07-18 12:06:19,629] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 2
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.5-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = PLAINTEXT://localhost:9093
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = C:/PracticeJava/Kafka/MultiNode/kafka-logs-2
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.5-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 18000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2023-07-18 12:06:19,645] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 2
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.5-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = PLAINTEXT://localhost:9093
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = C:/PracticeJava/Kafka/MultiNode/kafka-logs-2
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.5-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 18000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2023-07-18 12:06:19,697] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2023-07-18 12:06:19,698] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2023-07-18 12:06:19,701] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2023-07-18 12:06:19,778] INFO Loading logs. (kafka.log.LogManager)
[2023-07-18 12:06:19,885] INFO [Log partition=my_other_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:19,887] INFO [Log partition=my_other_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:19,961] INFO [ProducerStateManager partition=my_other_topic-0] Writing producer snapshot at offset 29 (kafka.log.ProducerStateManager)
[2023-07-18 12:06:19,998] INFO [Log partition=my_other_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 29 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,005] INFO [ProducerStateManager partition=my_other_topic-0] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\my_other_topic-0\00000000000000000029.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:06:20,013] INFO [Log partition=my_other_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 29 in 173 ms (kafka.log.Log)
[2023-07-18 12:06:20,063] INFO [Log partition=my_other_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,066] INFO [Log partition=my_other_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,088] INFO [ProducerStateManager partition=my_other_topic-2] Writing producer snapshot at offset 45 (kafka.log.ProducerStateManager)
[2023-07-18 12:06:20,107] INFO [Log partition=my_other_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 45 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,115] INFO [ProducerStateManager partition=my_other_topic-2] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\my_other_topic-2\00000000000000000045.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:06:20,120] INFO [Log partition=my_other_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 45 in 67 ms (kafka.log.Log)
[2023-07-18 12:06:20,154] INFO [Log partition=my_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,155] INFO [Log partition=my_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,240] INFO [ProducerStateManager partition=my_topic-0] Writing producer snapshot at offset 711 (kafka.log.ProducerStateManager)
[2023-07-18 12:06:20,254] INFO [Log partition=my_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 711 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,257] INFO [ProducerStateManager partition=my_topic-0] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\my_topic-0\00000000000000000711.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:06:20,260] INFO [Log partition=my_topic-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 711 in 125 ms (kafka.log.Log)
[2023-07-18 12:06:20,288] INFO [Log partition=my_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,289] INFO [Log partition=my_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,331] INFO [ProducerStateManager partition=my_topic-2] Writing producer snapshot at offset 657 (kafka.log.ProducerStateManager)
[2023-07-18 12:06:20,348] INFO [Log partition=my_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 657 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,354] INFO [ProducerStateManager partition=my_topic-2] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\my_topic-2\00000000000000000657.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:06:20,356] INFO [Log partition=my_topic-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 657 in 89 ms (kafka.log.Log)
[2023-07-18 12:06:20,369] INFO [Log partition=__consumer_offsets-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,370] INFO [Log partition=__consumer_offsets-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,386] INFO [ProducerStateManager partition=__consumer_offsets-0] Writing producer snapshot at offset 23 (kafka.log.ProducerStateManager)
[2023-07-18 12:06:20,400] INFO [Log partition=__consumer_offsets-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 23 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,405] INFO [ProducerStateManager partition=__consumer_offsets-0] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-0\00000000000000000023.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:06:20,407] INFO [Log partition=__consumer_offsets-0, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 23 in 46 ms (kafka.log.Log)
[2023-07-18 12:06:20,427] INFO [Log partition=__consumer_offsets-10, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,428] INFO [Log partition=__consumer_offsets-10, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,445] INFO [Log partition=__consumer_offsets-10, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,450] INFO [Log partition=__consumer_offsets-10, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 34 ms (kafka.log.Log)
[2023-07-18 12:06:20,463] INFO [Log partition=__consumer_offsets-12, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,464] INFO [Log partition=__consumer_offsets-12, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,477] INFO [Log partition=__consumer_offsets-12, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,481] INFO [Log partition=__consumer_offsets-12, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 26 ms (kafka.log.Log)
[2023-07-18 12:06:20,494] INFO [Log partition=__consumer_offsets-14, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,494] INFO [Log partition=__consumer_offsets-14, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,510] INFO [Log partition=__consumer_offsets-14, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,514] INFO [Log partition=__consumer_offsets-14, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 28 ms (kafka.log.Log)
[2023-07-18 12:06:20,527] INFO [Log partition=__consumer_offsets-16, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,527] INFO [Log partition=__consumer_offsets-16, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,544] INFO [Log partition=__consumer_offsets-16, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,550] INFO [Log partition=__consumer_offsets-16, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 31 ms (kafka.log.Log)
[2023-07-18 12:06:20,564] INFO [Log partition=__consumer_offsets-18, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,566] INFO [Log partition=__consumer_offsets-18, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,582] INFO [Log partition=__consumer_offsets-18, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,587] INFO [Log partition=__consumer_offsets-18, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 30 ms (kafka.log.Log)
[2023-07-18 12:06:20,598] INFO [Log partition=__consumer_offsets-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,599] INFO [Log partition=__consumer_offsets-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,611] INFO [Log partition=__consumer_offsets-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,617] INFO [Log partition=__consumer_offsets-2, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 26 ms (kafka.log.Log)
[2023-07-18 12:06:20,633] INFO [Log partition=__consumer_offsets-20, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,634] INFO [Log partition=__consumer_offsets-20, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,648] INFO [Log partition=__consumer_offsets-20, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,655] INFO [Log partition=__consumer_offsets-20, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 32 ms (kafka.log.Log)
[2023-07-18 12:06:20,668] INFO [Log partition=__consumer_offsets-22, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,669] INFO [Log partition=__consumer_offsets-22, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,684] INFO [Log partition=__consumer_offsets-22, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,688] INFO [Log partition=__consumer_offsets-22, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 29 ms (kafka.log.Log)
[2023-07-18 12:06:20,701] INFO [Log partition=__consumer_offsets-24, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,702] INFO [Log partition=__consumer_offsets-24, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,716] INFO [Log partition=__consumer_offsets-24, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,721] INFO [Log partition=__consumer_offsets-24, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 30 ms (kafka.log.Log)
[2023-07-18 12:06:20,734] INFO [Log partition=__consumer_offsets-26, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,735] INFO [Log partition=__consumer_offsets-26, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,752] INFO [Log partition=__consumer_offsets-26, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,757] INFO [Log partition=__consumer_offsets-26, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 32 ms (kafka.log.Log)
[2023-07-18 12:06:20,775] INFO [Log partition=__consumer_offsets-28, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,775] INFO [Log partition=__consumer_offsets-28, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,794] INFO [Log partition=__consumer_offsets-28, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,803] INFO [Log partition=__consumer_offsets-28, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 38 ms (kafka.log.Log)
[2023-07-18 12:06:20,820] INFO [Log partition=__consumer_offsets-30, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,821] INFO [Log partition=__consumer_offsets-30, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,838] INFO [Log partition=__consumer_offsets-30, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,842] INFO [Log partition=__consumer_offsets-30, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 33 ms (kafka.log.Log)
[2023-07-18 12:06:20,857] INFO [Log partition=__consumer_offsets-32, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,858] INFO [Log partition=__consumer_offsets-32, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,873] INFO [Log partition=__consumer_offsets-32, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,877] INFO [Log partition=__consumer_offsets-32, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 30 ms (kafka.log.Log)
[2023-07-18 12:06:20,894] INFO [Log partition=__consumer_offsets-34, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,896] INFO [Log partition=__consumer_offsets-34, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,914] INFO [Log partition=__consumer_offsets-34, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,920] INFO [Log partition=__consumer_offsets-34, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 35 ms (kafka.log.Log)
[2023-07-18 12:06:20,930] INFO [Log partition=__consumer_offsets-36, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,932] INFO [Log partition=__consumer_offsets-36, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,946] INFO [Log partition=__consumer_offsets-36, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,952] INFO [Log partition=__consumer_offsets-36, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 29 ms (kafka.log.Log)
[2023-07-18 12:06:20,966] INFO [Log partition=__consumer_offsets-38, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:20,967] INFO [Log partition=__consumer_offsets-38, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,979] INFO [Log partition=__consumer_offsets-38, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:20,988] INFO [Log partition=__consumer_offsets-38, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 32 ms (kafka.log.Log)
[2023-07-18 12:06:21,003] INFO [Log partition=__consumer_offsets-4, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:21,004] INFO [Log partition=__consumer_offsets-4, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:21,021] INFO [Log partition=__consumer_offsets-4, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:21,025] INFO [Log partition=__consumer_offsets-4, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 32 ms (kafka.log.Log)
[2023-07-18 12:06:21,039] INFO [Log partition=__consumer_offsets-40, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:21,039] INFO [Log partition=__consumer_offsets-40, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:21,056] INFO [Log partition=__consumer_offsets-40, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:21,060] INFO [Log partition=__consumer_offsets-40, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 33 ms (kafka.log.Log)
[2023-07-18 12:06:21,075] INFO [Log partition=__consumer_offsets-42, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:21,076] INFO [Log partition=__consumer_offsets-42, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:21,089] INFO [Log partition=__consumer_offsets-42, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:21,094] INFO [Log partition=__consumer_offsets-42, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 27 ms (kafka.log.Log)
[2023-07-18 12:06:21,106] INFO [Log partition=__consumer_offsets-44, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:21,107] INFO [Log partition=__consumer_offsets-44, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:21,123] INFO [Log partition=__consumer_offsets-44, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:21,127] INFO [Log partition=__consumer_offsets-44, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 28 ms (kafka.log.Log)
[2023-07-18 12:06:21,142] INFO [Log partition=__consumer_offsets-46, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:21,143] INFO [Log partition=__consumer_offsets-46, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:21,166] INFO [Log partition=__consumer_offsets-46, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:21,171] INFO [Log partition=__consumer_offsets-46, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 37 ms (kafka.log.Log)
[2023-07-18 12:06:21,181] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Found file C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.index.swap from interrupted swap operation. (kafka.log.Log)
[2023-07-18 12:06:21,183] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Deleting index files with suffix  for baseFile C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.index (kafka.log.Log)
[2023-07-18 12:06:21,186] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Found file C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.log.swap from interrupted swap operation. (kafka.log.Log)
[2023-07-18 12:06:21,187] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Deleting index files with suffix  for baseFile C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.log (kafka.log.Log)
[2023-07-18 12:06:21,191] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Deleting index files with suffix .swap for baseFile C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.log (kafka.log.Log)
[2023-07-18 12:06:21,201] ERROR [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Could not find offset index file corresponding to log file C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.log, recovering segment and rebuilding index files... (kafka.log.Log)
[2023-07-18 12:06:21,202] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:21,268] INFO [ProducerStateManager partition=__consumer_offsets-48] Writing producer snapshot at offset 3867 (kafka.log.ProducerStateManager)
[2023-07-18 12:06:21,272] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 3867 (kafka.log.Log)
[2023-07-18 12:06:21,272] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 3867 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:21,276] INFO [ProducerStateManager partition=__consumer_offsets-48] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000003867.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:06:21,284] INFO [ProducerStateManager partition=__consumer_offsets-48] Writing producer snapshot at offset 3882 (kafka.log.ProducerStateManager)
[2023-07-18 12:06:21,298] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 3882 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:21,302] INFO [ProducerStateManager partition=__consumer_offsets-48] Loading producer state from snapshot file 'C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000003882.snapshot' (kafka.log.ProducerStateManager)
[2023-07-18 12:06:21,306] INFO [Log partition=__consumer_offsets-48, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 2 segments, log start offset 0 and log end offset 3882 in 132 ms (kafka.log.Log)
[2023-07-18 12:06:21,317] INFO [Log partition=__consumer_offsets-6, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:21,318] INFO [Log partition=__consumer_offsets-6, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:21,335] INFO [Log partition=__consumer_offsets-6, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:21,340] INFO [Log partition=__consumer_offsets-6, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 31 ms (kafka.log.Log)
[2023-07-18 12:06:21,351] INFO [Log partition=__consumer_offsets-8, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Recovering unflushed segment 0 (kafka.log.Log)
[2023-07-18 12:06:21,352] INFO [Log partition=__consumer_offsets-8, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:21,365] INFO [Log partition=__consumer_offsets-8, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-07-18 12:06:21,370] INFO [Log partition=__consumer_offsets-8, dir=C:\PracticeJava\Kafka\MultiNode\kafka-logs-2] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 27 ms (kafka.log.Log)
[2023-07-18 12:06:21,376] INFO Logs loading complete in 1598 ms. (kafka.log.LogManager)
[2023-07-18 12:06:21,412] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2023-07-18 12:06:21,415] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2023-07-18 12:06:21,544] INFO Expiring session 0x10017cd86080003, timeout of 18000ms exceeded (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:06:21,863] ERROR Failed to clean up log for __consumer_offsets-48 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 due to IOException (kafka.server.LogDirFailureChannel)
java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.swap: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.AbstractIndex.renameTo(AbstractIndex.scala:207)
	at kafka.log.LogSegment.changeFileSuffixes(LogSegment.scala:497)
	at kafka.log.Log.$anonfun$replaceSegments$4(Log.scala:2269)
	at kafka.log.Log.$anonfun$replaceSegments$4$adapted(Log.scala:2269)
	at scala.collection.immutable.List.foreach(List.scala:305)
	at kafka.log.Log.replaceSegments(Log.scala:2269)
	at kafka.log.Cleaner.cleanSegments(LogCleaner.scala:594)
	at kafka.log.Cleaner.$anonfun$doClean$6(LogCleaner.scala:519)
	at kafka.log.Cleaner.doClean(LogCleaner.scala:518)
	at kafka.log.Cleaner.clean(LogCleaner.scala:492)
	at kafka.log.LogCleaner$CleanerThread.cleanLog(LogCleaner.scala:361)
	at kafka.log.LogCleaner$CleanerThread.cleanFilthiestLog(LogCleaner.scala:334)
	at kafka.log.LogCleaner$CleanerThread.tryCleanFilthiestLog(LogCleaner.scala:314)
	at kafka.log.LogCleaner$CleanerThread.doWork(LogCleaner.scala:303)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
	Suppressed: java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.swap: The process cannot access the file because it is being used by another process.

		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 15 more
[2023-07-18 12:06:22,000] ERROR Failed to clean up log for __consumer_offsets-48 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 due to IOException (kafka.server.LogDirFailureChannel)
java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:274)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1181)
	at kafka.log.Log$.deleteFileIfExists(Log.scala:2546)
	at kafka.log.LogSegment$.deleteIfExists(LogSegment.scala:669)
	at kafka.log.LogCleaner$.createNewCleanedSegment(LogCleaner.scala:435)
	at kafka.log.Cleaner.cleanSegments(LogCleaner.scala:547)
	at kafka.log.Cleaner.$anonfun$doClean$6(LogCleaner.scala:519)
	at kafka.log.Cleaner.doClean(LogCleaner.scala:518)
	at kafka.log.Cleaner.clean(LogCleaner.scala:492)
	at kafka.log.LogCleaner$CleanerThread.cleanLog(LogCleaner.scala:361)
	at kafka.log.LogCleaner$CleanerThread.cleanFilthiestLog(LogCleaner.scala:334)
	at kafka.log.LogCleaner$CleanerThread.tryCleanFilthiestLog(LogCleaner.scala:314)
	at kafka.log.LogCleaner$CleanerThread.doWork(LogCleaner.scala:303)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-18 12:06:22,096] ERROR Failed to clean up log for __consumer_offsets-48 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 due to IOException (kafka.server.LogDirFailureChannel)
java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:274)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1181)
	at kafka.log.Log$.deleteFileIfExists(Log.scala:2546)
	at kafka.log.LogSegment$.deleteIfExists(LogSegment.scala:669)
	at kafka.log.LogCleaner$.createNewCleanedSegment(LogCleaner.scala:435)
	at kafka.log.Cleaner.cleanSegments(LogCleaner.scala:547)
	at kafka.log.Cleaner.$anonfun$doClean$6(LogCleaner.scala:519)
	at kafka.log.Cleaner.doClean(LogCleaner.scala:518)
	at kafka.log.Cleaner.clean(LogCleaner.scala:492)
	at kafka.log.LogCleaner$CleanerThread.cleanLog(LogCleaner.scala:361)
	at kafka.log.LogCleaner$CleanerThread.cleanFilthiestLog(LogCleaner.scala:334)
	at kafka.log.LogCleaner$CleanerThread.tryCleanFilthiestLog(LogCleaner.scala:314)
	at kafka.log.LogCleaner$CleanerThread.doWork(LogCleaner.scala:303)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-18 12:06:22,182] ERROR Failed to clean up log for __consumer_offsets-48 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 due to IOException (kafka.server.LogDirFailureChannel)
java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:274)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1181)
	at kafka.log.Log$.deleteFileIfExists(Log.scala:2546)
	at kafka.log.LogSegment$.deleteIfExists(LogSegment.scala:669)
	at kafka.log.LogCleaner$.createNewCleanedSegment(LogCleaner.scala:435)
	at kafka.log.Cleaner.cleanSegments(LogCleaner.scala:547)
	at kafka.log.Cleaner.$anonfun$doClean$6(LogCleaner.scala:519)
	at kafka.log.Cleaner.doClean(LogCleaner.scala:518)
	at kafka.log.Cleaner.clean(LogCleaner.scala:492)
	at kafka.log.LogCleaner$CleanerThread.cleanLog(LogCleaner.scala:361)
	at kafka.log.LogCleaner$CleanerThread.cleanFilthiestLog(LogCleaner.scala:334)
	at kafka.log.LogCleaner$CleanerThread.tryCleanFilthiestLog(LogCleaner.scala:314)
	at kafka.log.LogCleaner$CleanerThread.doWork(LogCleaner.scala:303)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-18 12:06:22,264] ERROR Failed to clean up log for __consumer_offsets-48 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 due to IOException (kafka.server.LogDirFailureChannel)
java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:274)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1181)
	at kafka.log.Log$.deleteFileIfExists(Log.scala:2546)
	at kafka.log.LogSegment$.deleteIfExists(LogSegment.scala:669)
	at kafka.log.LogCleaner$.createNewCleanedSegment(LogCleaner.scala:435)
	at kafka.log.Cleaner.cleanSegments(LogCleaner.scala:547)
	at kafka.log.Cleaner.$anonfun$doClean$6(LogCleaner.scala:519)
	at kafka.log.Cleaner.doClean(LogCleaner.scala:518)
	at kafka.log.Cleaner.clean(LogCleaner.scala:492)
	at kafka.log.LogCleaner$CleanerThread.cleanLog(LogCleaner.scala:361)
	at kafka.log.LogCleaner$CleanerThread.cleanFilthiestLog(LogCleaner.scala:334)
	at kafka.log.LogCleaner$CleanerThread.tryCleanFilthiestLog(LogCleaner.scala:314)
	at kafka.log.LogCleaner$CleanerThread.doWork(LogCleaner.scala:303)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-18 12:06:22,313] INFO Awaiting socket connections on localhost:9093. (kafka.network.Acceptor)
[2023-07-18 12:06:22,351] ERROR Failed to clean up log for __consumer_offsets-48 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 due to IOException (kafka.server.LogDirFailureChannel)
java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:274)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1181)
	at kafka.log.Log$.deleteFileIfExists(Log.scala:2546)
	at kafka.log.LogSegment$.deleteIfExists(LogSegment.scala:669)
	at kafka.log.LogCleaner$.createNewCleanedSegment(LogCleaner.scala:435)
	at kafka.log.Cleaner.cleanSegments(LogCleaner.scala:547)
	at kafka.log.Cleaner.$anonfun$doClean$6(LogCleaner.scala:519)
	at kafka.log.Cleaner.doClean(LogCleaner.scala:518)
	at kafka.log.Cleaner.clean(LogCleaner.scala:492)
	at kafka.log.LogCleaner$CleanerThread.cleanLog(LogCleaner.scala:361)
	at kafka.log.LogCleaner$CleanerThread.cleanFilthiestLog(LogCleaner.scala:334)
	at kafka.log.LogCleaner$CleanerThread.tryCleanFilthiestLog(LogCleaner.scala:314)
	at kafka.log.LogCleaner$CleanerThread.doWork(LogCleaner.scala:303)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-18 12:06:22,432] ERROR Failed to clean up log for __consumer_offsets-48 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 due to IOException (kafka.server.LogDirFailureChannel)
java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:274)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1181)
	at kafka.log.Log$.deleteFileIfExists(Log.scala:2546)
	at kafka.log.LogSegment$.deleteIfExists(LogSegment.scala:669)
	at kafka.log.LogCleaner$.createNewCleanedSegment(LogCleaner.scala:435)
	at kafka.log.Cleaner.cleanSegments(LogCleaner.scala:547)
	at kafka.log.Cleaner.$anonfun$doClean$6(LogCleaner.scala:519)
	at kafka.log.Cleaner.doClean(LogCleaner.scala:518)
	at kafka.log.Cleaner.clean(LogCleaner.scala:492)
	at kafka.log.LogCleaner$CleanerThread.cleanLog(LogCleaner.scala:361)
	at kafka.log.LogCleaner$CleanerThread.cleanFilthiestLog(LogCleaner.scala:334)
	at kafka.log.LogCleaner$CleanerThread.tryCleanFilthiestLog(LogCleaner.scala:314)
	at kafka.log.LogCleaner$CleanerThread.doWork(LogCleaner.scala:303)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-07-18 12:06:22,453] INFO [SocketServer brokerId=2] Created data-plane acceptor and processors for endpoint : EndPoint(localhost,9093,ListenerName(PLAINTEXT),PLAINTEXT) (kafka.network.SocketServer)
[2023-07-18 12:06:22,457] INFO [SocketServer brokerId=2] Started 1 acceptor threads for data-plane (kafka.network.SocketServer)
[2023-07-18 12:06:22,547] INFO [ExpirationReaper-2-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:06:22,547] INFO [ExpirationReaper-2-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:06:22,549] INFO [ExpirationReaper-2-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:06:22,550] INFO [ExpirationReaper-2-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2023-07-18 12:06:22,588] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2023-07-18 12:06:22,591] WARN [ReplicaManager broker=2] Stopping serving replicas in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 (kafka.server.ReplicaManager)
[2023-07-18 12:06:22,606] ERROR Failed to clean up log for __consumer_offsets-48 in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 due to IOException (kafka.server.LogDirFailureChannel)
java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.swap: The process cannot access the file because it is being used by another process.

	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:395)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
	at java.base/java.nio.file.Files.move(Files.java:1422)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:834)
	at kafka.log.AbstractIndex.renameTo(AbstractIndex.scala:207)
	at kafka.log.LogSegment.changeFileSuffixes(LogSegment.scala:497)
	at kafka.log.Log.$anonfun$replaceSegments$4(Log.scala:2269)
	at kafka.log.Log.$anonfun$replaceSegments$4$adapted(Log.scala:2269)
	at scala.collection.immutable.List.foreach(List.scala:305)
	at kafka.log.Log.replaceSegments(Log.scala:2269)
	at kafka.log.Cleaner.cleanSegments(LogCleaner.scala:594)
	at kafka.log.Cleaner.$anonfun$doClean$6(LogCleaner.scala:519)
	at kafka.log.Cleaner.doClean(LogCleaner.scala:518)
	at kafka.log.Cleaner.clean(LogCleaner.scala:492)
	at kafka.log.LogCleaner$CleanerThread.cleanLog(LogCleaner.scala:361)
	at kafka.log.LogCleaner$CleanerThread.cleanFilthiestLog(LogCleaner.scala:334)
	at kafka.log.LogCleaner$CleanerThread.tryCleanFilthiestLog(LogCleaner.scala:314)
	at kafka.log.LogCleaner$CleanerThread.doWork(LogCleaner.scala:303)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
	Suppressed: java.nio.file.FileSystemException: C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.cleaned -> C:\PracticeJava\Kafka\MultiNode\kafka-logs-2\__consumer_offsets-48\00000000000000000000.timeindex.swap: The process cannot access the file because it is being used by another process.

		at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
		at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
		at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:309)
		at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:292)
		at java.base/java.nio.file.Files.move(Files.java:1422)
		at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:831)
		... 15 more
[2023-07-18 12:06:22,621] WARN [ReplicaManager broker=2] Broker 2 stopped fetcher for partitions  and stopped moving logs for partitions  because they are in the failed log directory C:\PracticeJava\Kafka\MultiNode\kafka-logs-2. (kafka.server.ReplicaManager)
[2023-07-18 12:06:22,622] WARN Stopping serving logs in dir C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 (kafka.log.LogManager)
[2023-07-18 12:06:22,636] ERROR Shutdown broker because all log dirs in C:\PracticeJava\Kafka\MultiNode\kafka-logs-2 have failed (kafka.log.LogManager)
[2023-07-18 12:06:23,156] WARN Exception causing close of session 0x10017cd86080004: An existing connection was forcibly closed by the remote host (org.apache.zookeeper.server.NIOServerCnxn)
[2023-07-18 12:06:30,544] INFO Expiring session 0x10017cd86080002, timeout of 18000ms exceeded (org.apache.zookeeper.server.ZooKeeperServer)
[2023-07-18 12:06:42,544] INFO Expiring session 0x10017cd86080004, timeout of 18000ms exceeded (org.apache.zookeeper.server.ZooKeeperServer)
